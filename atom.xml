<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aiden&#39;s Secret Base</title>
  
  
  <link href="https://aiden-a.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://aiden-a.gitee.io/"/>
  <updated>2023-08-27T07:28:41.650Z</updated>
  <id>https://aiden-a.gitee.io/</id>
  
  <author>
    <name>Zidian Wei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>软件工程导论</title>
    <link href="https://aiden-a.gitee.io/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/"/>
    <id>https://aiden-a.gitee.io/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/</id>
    <published>2023-08-06T07:14:51.000Z</published>
    <updated>2023-08-27T07:28:41.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230806151758522.png" class="" title="image-20230806151758522"><h2 id="软件危机和危机的介绍"><a href="#软件危机和危机的介绍" class="headerlink" title="软件危机和危机的介绍"></a>软件危机和危机的介绍</h2><p><font color='red'>软件危机(软件萧条、软件困扰)</font>：是指在计算机软件的<font color='red'>开发</font>和<font color='red'>维护过程</font>中所遇到的一系列严重问题。</p><p>软件危机包含下述<font color='red'>两方面的问题</font>：</p><p><font color='red'>如何开发软件</font>，满足对软件日益增长的需求；</p><p><font color='red'>如何维护</font>数量不断膨胀的<font color='red'>已有软件</font></p><h2 id="软件危机的表现形式和产生原因"><a href="#软件危机的表现形式和产生原因" class="headerlink" title="软件危机的表现形式和产生原因"></a>软件危机的表现形式和产生原因</h2><h3 id="软件危机的表现形式（七个）"><a href="#软件危机的表现形式（七个）" class="headerlink" title="软件危机的表现形式（七个）"></a>软件危机的表现形式（七个）</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814163227015.png" class="" title="image-20230814163227015"><h3 id="软件危机产生原因"><a href="#软件危机产生原因" class="headerlink" title="软件危机产生原因"></a>软件危机产生原因</h3><h4 id="客观原因（两个-了解即可）"><a href="#客观原因（两个-了解即可）" class="headerlink" title="客观原因（两个-了解即可）"></a>客观原因（两个-了解即可）</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814163301700.png" class="" title="image-20230814163301700"><h4 id="主观原因（七个-了解即可）"><a href="#主观原因（七个-了解即可）" class="headerlink" title="主观原因（七个-了解即可）"></a>主观原因（七个-了解即可）</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814163358395.png" class="" title="image-20230814163358395"><h4 id="产生软件危机的原因-背"><a href="#产生软件危机的原因-背" class="headerlink" title="产生软件危机的原因(背)"></a>产生软件危机的原因(背)</h4><p>（1）与软件<font color='red'>本身的特点</font>有关</p><p>（2）与软件<font color='red'>开发与维护的方法不正确</font>有关</p><h2 id="消除软件危机的途径（四个）"><a href="#消除软件危机的途径（四个）" class="headerlink" title="消除软件危机的途径（四个）"></a>消除软件危机的途径（四个）</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814163441871.png" class="" title="image-20230814163441871"><h2 id="软件工程的原理和方法学"><a href="#软件工程的原理和方法学" class="headerlink" title="软件工程的原理和方法学"></a>软件工程的原理和方法学</h2><h3 id="软件工程的介绍"><a href="#软件工程的介绍" class="headerlink" title="软件工程的介绍"></a>软件工程的介绍</h3><p><font color='red'>软件工程</font>：是<font color='red'>指导计算机软件开发和维护</font>的一门<font color='red'>工程学科</font>。</p><h3 id="软件工程的目标（六个）"><a href="#软件工程的目标（六个）" class="headerlink" title="软件工程的目标（六个）"></a>软件工程的目标（六个）</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814163718106.png" class="" title="image-20230814163718106"><h3 id="软件工程的原则（五个）"><a href="#软件工程的原则（五个）" class="headerlink" title="软件工程的原则（五个）"></a>软件工程的原则（五个）</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814163756308.png" class="" title="image-20230814163756308"><h3 id="软件工程的基本原理（七个）"><a href="#软件工程的基本原理（七个）" class="headerlink" title="软件工程的基本原理（七个）"></a>软件工程的基本原理（七个）</h3><p>用<font color='red'>分阶段的生命周期</font>计划严格管理</p><p>坚持进行<font color='red'>阶段评审</font></p><p>实行严格的<font color='red'>产品控制</font></p><p>采用<font color='red'>现代程序设计技术</font></p><p><font color='red'>结果</font>应能清楚地<font color='red'>审查</font></p><p>开发小组的<font color='red'>人员</font>人员应该<font color='red'>少而精</font></p><p>承认不断<font color='red'>改进软件工程实践的必要性</font></p><h3 id="软件工程方法学"><a href="#软件工程方法学" class="headerlink" title="软件工程方法学"></a>软件工程方法学</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814171420926.png" class="" title="image-20230814171420926"><h2 id="软件生命周期的五个经典模型"><a href="#软件生命周期的五个经典模型" class="headerlink" title="软件生命周期的五个经典模型"></a>软件生命周期的五个经典模型</h2><h3 id="软件生命周期"><a href="#软件生命周期" class="headerlink" title="软件生命周期"></a>软件生命周期</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814171541894.png" class="" title="image-20230814171541894"><h3 id="软件生命周期模型分类"><a href="#软件生命周期模型分类" class="headerlink" title="软件生命周期模型分类"></a>软件生命周期模型分类</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814170157584.png" class="" title="image-20230814170157584"><h3 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814173726356.png" class="" title="image-20230814173726356"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814173759398.png" class="" title="image-20230814173759398"><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814173819525.png" class="" title="image-20230814173819525"><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814173856534.png" class="" title="image-20230814173856534"><h4 id="特点和适用项目"><a href="#特点和适用项目" class="headerlink" title="特点和适用项目"></a>特点和适用项目</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814173925783.png" class="" title="image-20230814173925783"><h3 id="原型模型"><a href="#原型模型" class="headerlink" title="原型模型"></a>原型模型</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814173955016.png" class="" title="image-20230814173955016"><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814174012685.png" class="" title="image-20230814174012685"><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814174036896.png" class="" title="image-20230814174036896"><h4 id="适用项目"><a href="#适用项目" class="headerlink" title="适用项目"></a>适用项目</h4><p>适用于需求不确定性高的产品</p><h3 id="增量模型"><a href="#增量模型" class="headerlink" title="增量模型"></a>增量模型</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814174235966.png" class="" title="image-20230814174235966"><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814174308587.png" class="" title="image-20230814174308587"><h3 id="螺旋模型"><a href="#螺旋模型" class="headerlink" title="螺旋模型"></a>螺旋模型</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814174320713.png" class="" title="image-20230814174320713"><h4 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814174337223.png" class="" title="image-20230814174337223"><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814174357512.png" class="" title="image-20230814174357512"><h3 id="喷泉模型"><a href="#喷泉模型" class="headerlink" title="喷泉模型"></a>喷泉模型</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814174601855.png" class="" title="image-20230814174601855"><h4 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814174619489.png" class="" title="image-20230814174619489"><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230814151736727.png" class="" title="image-20230814151736727"><h2 id="可行性研究的目的和任务以及步骤"><a href="#可行性研究的目的和任务以及步骤" class="headerlink" title="可行性研究的目的和任务以及步骤"></a>可行性研究的目的和任务以及步骤</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230816181107831.png" class="" title="image-20230816181107831"><h3 id="可行性研究的目的"><a href="#可行性研究的目的" class="headerlink" title="可行性研究的目的"></a>可行性研究的目的</h3><p>不是解决问题，而是<font color='red'>确定问题是否值得去解决</font></p><h3 id="可行性研究的实质"><a href="#可行性研究的实质" class="headerlink" title="可行性研究的实质"></a>可行性研究的实质</h3><p><strong>进行一次大大压缩简化了的系统分析和设计的过程，也就是在较高层次上以较抽象的方式进行的系统分析和设计的过程。</strong></p><h3 id="可行性研究的步骤（八步）"><a href="#可行性研究的步骤（八步）" class="headerlink" title="可行性研究的步骤（八步）"></a>可行性研究的步骤（八步）</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230816181225889.png" class="" title="image-20230816181225889"><h2 id="可行性研究包含的方面和主要内容"><a href="#可行性研究包含的方面和主要内容" class="headerlink" title="可行性研究包含的方面和主要内容"></a>可行性研究包含的方面和主要内容</h2><h3 id="研究方面（四个）"><a href="#研究方面（四个）" class="headerlink" title="研究方面（四个）"></a>研究方面（四个）</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230816183742329.png" class="" title="image-20230816183742329"><h3 id="主要内容（8个——只背黑字即可）"><a href="#主要内容（8个——只背黑字即可）" class="headerlink" title="主要内容（8个——只背黑字即可）"></a>主要内容（8个——只背黑字即可）</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230816181527398.png" class="" title="image-20230816181527398"><h2 id="系统流程图、数据流图"><a href="#系统流程图、数据流图" class="headerlink" title="系统流程图、数据流图"></a>系统流程图、数据流图</h2><h3 id="系统流程图"><a href="#系统流程图" class="headerlink" title="系统流程图"></a>系统流程图</h3><p><font color='red'>系统流程图</font>：是<font color='red'>概括的描绘物理系统的传统工具</font>。表达的是数据在系统各部件之间流动的情况，而不是对数据进行加工处理的控制过程</p><h3 id="数据流图"><a href="#数据流图" class="headerlink" title="数据流图"></a>数据流图</h3><p><font color='red'>数据流图</font>：是<font color='red'>用来描述系统逻辑模型的一种图形工具</font>。它描绘信息流和数据从输入移动到输出的过程中所经受的变换</p><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230817164601831.png" class="" title="image-20230817164601831"><h4 id="数据流图目的"><a href="#数据流图目的" class="headerlink" title="数据流图目的"></a>数据流图目的</h4><p>数据流图目的：<strong>①作为交流信息的工具</strong>；<strong>②作为分析和设计的工具。</strong></p><h4 id="数据流图的四种成分"><a href="#数据流图的四种成分" class="headerlink" title="数据流图的四种成分"></a>数据流图的四种成分</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230816181331373.png" class="" title="image-20230816181331373"><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230816181350982.png" class="" title="image-20230816181350982"><h4 id="数据流图为何分层"><a href="#数据流图为何分层" class="headerlink" title="数据流图为何分层"></a>数据流图为何分层</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230816181410281.png" class="" title="image-20230816181410281"><h3 id="系统流程图和数据流图的区别"><a href="#系统流程图和数据流图的区别" class="headerlink" title="系统流程图和数据流图的区别"></a>系统流程图和数据流图的区别</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230816181421109.png" class="" title="image-20230816181421109"><h2 id="数据字典"><a href="#数据字典" class="headerlink" title="数据字典"></a>数据字典</h2><h3 id="定义、意义和组成元素"><a href="#定义、意义和组成元素" class="headerlink" title="定义、意义和组成元素"></a>定义、意义和组成元素</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230816181430656.png" class="" title="image-20230816181430656"><h3 id="定义数据的方法"><a href="#定义数据的方法" class="headerlink" title="定义数据的方法"></a>定义数据的方法</h3><p><font color='red'>方法</font>：对数据自顶向下分解。</p><p><font color='red'>数据组成方式(三种基本类型)</font>：<strong>顺序 选择 重复</strong>     <font color='red'>附加类型</font>：可选 </p><h3 id="数据字典的用途"><a href="#数据字典的用途" class="headerlink" title="数据字典的用途"></a>数据字典的用途</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230816181439347.png" class="" title="image-20230816181439347"><h2 id="成本效益分析"><a href="#成本效益分析" class="headerlink" title="成本效益分析"></a>成本效益分析</h2><h3 id="成本估计的方法"><a href="#成本估计的方法" class="headerlink" title="成本估计的方法"></a>成本估计的方法</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230816181453881.png" class="" title="image-20230816181453881"><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818155715268.png" class="" title="image-20230818155715268"><h2 id="列举考点之外所需记"><a href="#列举考点之外所需记" class="headerlink" title="列举考点之外所需记"></a>列举考点之外所需记</h2><h3 id="需求分析的准则-四条"><a href="#需求分析的准则-四条" class="headerlink" title="需求分析的准则(四条)"></a>需求分析的准则(四条)</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818155924290.png" class="" title="image-20230818155924290"><h3 id="需求分析要考虑的方面"><a href="#需求分析要考虑的方面" class="headerlink" title="需求分析要考虑的方面"></a>需求分析要考虑的方面</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818160119348.png" class="" title="image-20230818160119348"><h3 id="需求获取的原则"><a href="#需求获取的原则" class="headerlink" title="需求获取的原则"></a>需求获取的原则</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818160258207.png" class="" title="image-20230818160258207"><h3 id="需求获取的过程"><a href="#需求获取的过程" class="headerlink" title="需求获取的过程"></a>需求获取的过程</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818160339634.png" class="" title="image-20230818160339634"><h2 id="需求分析的任务-四条"><a href="#需求分析的任务-四条" class="headerlink" title="需求分析的任务(四条)"></a>需求分析的任务(四条)</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818160022334.png" class="" title="image-20230818160022334"><h2 id="与用户沟通获取需求的方法"><a href="#与用户沟通获取需求的方法" class="headerlink" title="与用户沟通获取需求的方法"></a>与用户沟通获取需求的方法</h2><p>访谈：1. 正式访谈 2. 非正式访谈 3. 调查表 4. 情景分析技术</p><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818164142148.png" class="" title="image-20230818164142148"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818164159372.png" class="" title="image-20230818164159372"><h2 id="结构化分析建模和数据模型"><a href="#结构化分析建模和数据模型" class="headerlink" title="结构化分析建模和数据模型"></a>结构化分析建模和数据模型</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818175332282.png" class="" title="image-20230818175332282"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818175355642.png" class="" title="image-20230818175355642"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818175411622.png" class="" title="image-20230818175411622"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818175423361.png" class="" title="image-20230818175423361"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818175443799.png" class="" title="image-20230818175443799"><h2 id="实体联系图（ER图）"><a href="#实体联系图（ER图）" class="headerlink" title="实体联系图（ER图）"></a>实体联系图（ER图）</h2><p>数据模型中包含 3 种相互关联的信息：数据对象、数据对象的属性、数据对象彼此间相互连接的关系</p><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818164334184.png" class="" title="image-20230818164334184"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818161542205.png" class="" title="image-20230818161542205"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818161556450.png" class="" title="image-20230818161556450"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818161639864.png" class="" title="image-20230818161639864"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818161732607.png" class="" title="image-20230818161732607"><h2 id="状态转换图"><a href="#状态转换图" class="headerlink" title="状态转换图"></a>状态转换图</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230818161851798.png" class="" title="image-20230818161851798"><h1 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h1><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819150303176.png" class="" title="image-20230819150303176"><h2 id="总体设计的步骤和原理"><a href="#总体设计的步骤和原理" class="headerlink" title="总体设计的步骤和原理"></a>总体设计的步骤和原理</h2><h3 id="总体设计的步骤"><a href="#总体设计的步骤" class="headerlink" title="总体设计的步骤"></a>总体设计的步骤</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819150615443.png" class="" title="image-20230819150615443"><h4 id="设想供选择的方案"><a href="#设想供选择的方案" class="headerlink" title="设想供选择的方案"></a>设想供选择的方案</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819150748062.png" class="" title="image-20230819150748062"><h4 id="选取合理的方案"><a href="#选取合理的方案" class="headerlink" title="选取合理的方案"></a>选取合理的方案</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819150733119.png" class="" title="image-20230819150733119"><h4 id="选择最佳方案"><a href="#选择最佳方案" class="headerlink" title="选择最佳方案"></a>选择最佳方案</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819150812999.png" class="" title="image-20230819150812999"><h4 id="功能分解"><a href="#功能分解" class="headerlink" title="功能分解"></a>功能分解</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819150830800.png" class="" title="image-20230819150830800"><h4 id="设计软件结构"><a href="#设计软件结构" class="headerlink" title="设计软件结构"></a>设计软件结构</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819150935504.png" class="" title="image-20230819150935504"><h4 id="设计数据库"><a href="#设计数据库" class="headerlink" title="设计数据库"></a>设计数据库</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819150953491.png" class="" title="image-20230819150953491"><h4 id="制定测试计划"><a href="#制定测试计划" class="headerlink" title="制定测试计划"></a>制定测试计划</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819151044969.png" class="" title="image-20230819151044969"><h4 id="书写文档"><a href="#书写文档" class="headerlink" title="书写文档"></a>书写文档</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819151057330.png" class="" title="image-20230819151057330"><h4 id="审查和复审"><a href="#审查和复审" class="headerlink" title="审查和复审"></a>审查和复审</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819151142734.png" class="" title="image-20230819151142734"><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p>①<strong>模块化</strong>；②<strong>抽象</strong>；③<strong>逐步求精</strong>；④<strong>信息隐藏和局部化</strong>；⑤<strong>模块独立</strong></p><h4 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h4><p>模块化定义：模块是由边界元素限定的相邻程序元素的序列，模块是构成程序的基本构件。<strong>模块化就是把程序划分成独立命名且可独立访问的模块，每个模块完成一个子功能，把这些模块集成起来构成一个整体，可以完成指定的功能满足用户的需求。</strong></p><h4 id="抽象"><a href="#抽象" class="headerlink" title="抽象"></a>抽象</h4><p>抽象定义：把在现实世界中一定事物、状态或过程之间的共性集中和概括起来，暂时忽略它们之间的差异，这就是抽象。</p><h4 id="逐步求精"><a href="#逐步求精" class="headerlink" title="逐步求精"></a>逐步求精</h4><p>逐步求精的定义：是软件工程技术的基础。为<strong>了能集中精力解决主要问题而尽量推迟对问题细节的考虑</strong>。</p><h4 id="信息隐藏和局部化"><a href="#信息隐藏和局部化" class="headerlink" title="信息隐藏和局部化"></a>信息隐藏和局部化</h4><p>信息隐藏原理指出：应该这样<strong>设计和确定模块</strong>，使得一个模块内包含的信息对于<strong>不需要</strong>这些<strong>信息的模块</strong>来说，是<strong>不能访问</strong>的</p><p><strong>局部化与信息隐藏概念是密切相关的。所谓</strong>局部化<strong>是</strong>指把一些关系密切的软件元素<strong>物理地放得彼此靠近</strong>。“隐藏”意味着<strong>有效的模块化</strong>可以<strong>通过定义一组独立的模块而实现</strong>，这些独立的模块彼此间仅仅交换那些为了完成系统功能而必须交换的信息。</p><h2 id="总体设计的主要任务"><a href="#总体设计的主要任务" class="headerlink" title="总体设计的主要任务"></a>总体设计的主要任务</h2><p>①划分出组成系统的物理元素程序、文件、数据库、人工过程和文档等，但是每个物理元素仍然处于黑盒子级，这些黑盒子里的具体内容将在以后仔细设计。</p><p>②设计软件的结构，也就是要确定系统中每个程序是由哪些模块组成的，以及这些模块相互间的关系。</p><h2 id="模块化的作用（四个）"><a href="#模块化的作用（四个）" class="headerlink" title="模块化的作用（四个）"></a>模块化的作用（四个）</h2><p>①使<strong>软件结构清晰</strong>，不仅<strong>容易设计</strong>也<strong>容易阅读</strong>和<strong>理解</strong>。</p><p>②使软件<strong>容易测试</strong>和<strong>调试</strong>，有助于<strong>提高软件的可靠性</strong>。</p><p>③<strong>提高软件</strong>的<strong>可修改性</strong>。</p><p>④<strong>有助于</strong>软件开发工程的<strong>组织管理</strong>。</p><h2 id="常见的几种耦合和内聚"><a href="#常见的几种耦合和内聚" class="headerlink" title="常见的几种耦合和内聚"></a>常见的几种耦合和内聚</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152029337.png" class="" title="image-20230819152029337"><h3 id="耦合"><a href="#耦合" class="headerlink" title="耦合"></a>耦合</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152122434.png" class="" title="image-20230819152122434"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152222796.png" class="" title="image-20230819152222796"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152257090.png" class="" title="image-20230819152257090"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152328235.png" class="" title="image-20230819152328235"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152355065.png" class="" title="image-20230819152355065"><h3 id="内聚"><a href="#内聚" class="headerlink" title="内聚"></a>内聚</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152434992.png" class="" title="image-20230819152434992"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152504228.png" class="" title="image-20230819152504228"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152524725.png" class="" title="image-20230819152524725"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152546495.png" class="" title="image-20230819152546495"><h2 id="启发规则（七个）"><a href="#启发规则（七个）" class="headerlink" title="启发规则（七个）"></a>启发规则（七个）</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152637277.png" class="" title="image-20230819152637277"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152734747.png" class="" title="image-20230819152734747"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152904534.png" class="" title="image-20230819152904534"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152917796.png" class="" title="image-20230819152917796"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230819152924953.png" class="" title="image-20230819152924953">    <h1 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h1><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820151723570.png" class="" title="image-20230820151723570"><h2 id="详细设计的目标以及程序流程图"><a href="#详细设计的目标以及程序流程图" class="headerlink" title="详细设计的目标以及程序流程图"></a>详细设计的目标以及程序流程图</h2><h3 id="详细设计的目标"><a href="#详细设计的目标" class="headerlink" title="详细设计的目标"></a>详细设计的目标</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820155243535.png" class="" title="image-20230820155243535"><h3 id="程序流程图"><a href="#程序流程图" class="headerlink" title="程序流程图"></a>程序流程图</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820152616669.png" class="" title="image-20230820152616669"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820152629179.png" class="" title="image-20230820152629179"><h2 id="合图-N-S"><a href="#合图-N-S" class="headerlink" title="合图(N-S)"></a>合图(N-S)</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820152711051.png" class="" title="image-20230820152711051"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820152811903.png" class="" title="image-20230820152811903"><h2 id="问题分析图-PAD"><a href="#问题分析图-PAD" class="headerlink" title="问题分析图(PAD)"></a>问题分析图(PAD)</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820152940280.png" class="" title="image-20230820152940280"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820153058730.png" class="" title="image-20230820153058730"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820153156069.png" class="" title="image-20230820153156069"><h2 id="判定表"><a href="#判定表" class="headerlink" title="判定表"></a>判定表</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820153226595.png" class="" title="image-20230820153226595"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820153314646.png" class="" title="image-20230820153314646"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820153551898.png" class="" title="image-20230820153551898"><h2 id="程序复杂程度定量度量"><a href="#程序复杂程度定量度量" class="headerlink" title="程序复杂程度定量度量"></a>程序复杂程度定量度量</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820154028103.png" class="" title="image-20230820154028103"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820154924880.png" class="" title="image-20230820154924880"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820154948587.png" class="" title="image-20230820154948587"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230820155005914.png" class="" title="image-20230820155005914"><h1 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h1><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821151931095.png" class="" title="image-20230821151931095"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821162817765.png" class="" title="image-20230821162817765"><h2 id="软件测试的目标和准则"><a href="#软件测试的目标和准则" class="headerlink" title="软件测试的目标和准则"></a>软件测试的目标和准则</h2><h3 id="软件测试的目标"><a href="#软件测试的目标" class="headerlink" title="软件测试的目标"></a>软件测试的目标</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821152851671.png" class="" title="image-20230821152851671"><h3 id="软件测试准则"><a href="#软件测试准则" class="headerlink" title="软件测试准则"></a>软件测试准则</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821153050718.png" class="" title="image-20230821153050718"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821153310497.png" class="" title="image-20230821153310497"><h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><p><strong>单元测试集中检测软件设计的最小单元一模块，它和编码属于软件过程的同一个阶段。</strong></p><p><strong>测试重点</strong>：</p><p>①<strong>模块接口</strong>：</p><p>模块接口数据流是否正常进出；参数数目、次序、属性或单位系统与变元是否一致；是否修改了只做输入用的变元；全局变量定义和用法在各模块是否一致。</p><p>②<strong>局部数据结构</strong></p><p>应该仔细设计测试方案，以发现局部数据说明、初始化、默认值等方面错误。</p><p>③<strong>重要的执行通路</strong></p><p>选择具有代表性、最可能发现错误的执行通路测试；设计测试方案来发现错误。</p><p>④<strong>出错处理通路</strong></p><p>着重测试可能发生的错误为：对错误描述难以理解、记下的错误与实际错误不同、处理之前已经引起系统干预、对错误处理不正确。</p><p>⑤<strong>边界条件</strong> </p><p>边界测试是单元测试中最重要的任务。</p><h2 id="集成测试"><a href="#集成测试" class="headerlink" title="集成测试"></a>集成测试</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821155055845.png" class="" title="image-20230821155055845"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821155337708.png" class="" title="image-20230821155337708"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821155355626.png" class="" title="image-20230821155355626"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821160021543.png" class="" title="image-20230821160021543"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821155928315.png" class="" title="image-20230821155928315"><h2 id="确认测试"><a href="#确认测试" class="headerlink" title="确认测试"></a>确认测试</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821160346597.png" class="" title="image-20230821160346597"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821160407567.png" class="" title="image-20230821160407567"><h2 id="白盒测试技术"><a href="#白盒测试技术" class="headerlink" title="白盒测试技术"></a>白盒测试技术</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821160620219.png" class="" title="image-20230821160620219"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821160732302.png" class="" title="image-20230821160732302"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821161003802.png" class="" title="image-20230821161003802"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821161203489.png" class="" title="image-20230821161203489"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821161311036.png" class="" title="image-20230821161311036"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821161320535.png" class="" title="image-20230821161320535"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821161430436.png" class="" title="image-20230821161430436"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821161630092.png" class="" title="image-20230821161630092"><h2 id="黑盒测试技术"><a href="#黑盒测试技术" class="headerlink" title="黑盒测试技术"></a>黑盒测试技术</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821161800034.png" class="" title="image-20230821161800034"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821161855788.png" class="" title="image-20230821161855788"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821162302869.png" class="" title="image-20230821162302869"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821162545984.png" class="" title="image-20230821162545984"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821162606861.png" class="" title="image-20230821162606861"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821162615072.png" class="" title="image-20230821162615072"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821162640021.png" class="" title="image-20230821162640021"><h2 id="软件可靠性"><a href="#软件可靠性" class="headerlink" title="软件可靠性"></a>软件可靠性</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230821162708937.png" class="" title="image-20230821162708937"><h1 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h1><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822154904177.png" class="" title="image-20230822154904177"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822161134143.png" class="" title="image-20230822161134143"><h2 id="软件维护的定义"><a href="#软件维护的定义" class="headerlink" title="软件维护的定义"></a>软件维护的定义</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822155232842.png" class="" title="image-20230822155232842"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822155316222.png" class="" title="image-20230822155316222"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822155401073.png" class="" title="image-20230822155401073"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822155515759.png" class="" title="image-20230822155515759"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822155554632.png" class="" title="image-20230822155554632"><h2 id="软件维护的特点"><a href="#软件维护的特点" class="headerlink" title="软件维护的特点"></a>软件维护的特点</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822155655584.png" class="" title="image-20230822155655584"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822155738239.png" class="" title="image-20230822155738239"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822155828281.png" class="" title="image-20230822155828281"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822160010297.png" class="" title="image-20230822160010297"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822160101579.png" class="" title="image-20230822160101579"><h2 id="软件维护的过程"><a href="#软件维护的过程" class="headerlink" title="软件维护的过程"></a>软件维护的过程</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822160444357.png" class="" title="image-20230822160444357"><h2 id="软件的可维护性"><a href="#软件的可维护性" class="headerlink" title="软件的可维护性"></a>软件的可维护性</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822160714334.png" class="" title="image-20230822160714334"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822160721079.png" class="" title="image-20230822160721079"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822160800891.png" class="" title="image-20230822160800891"><h2 id="预防性维护"><a href="#预防性维护" class="headerlink" title="预防性维护"></a>预防性维护</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822160927888.png" class="" title="image-20230822160927888"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230822160936867.png" class="" title="image-20230822160936867"><h2 id="软件再工程过程"><a href="#软件再工程过程" class="headerlink" title="软件再工程过程"></a>软件再工程过程</h2><p>软件再工程过程模型定义的 6 类活动</p><p>①库存目录分析；</p><p>②文档重构；</p><p>③逆向工程 </p><p>定义：分析程序以便在比源代码更高的抽象层次上创建出程序的某种表示的过程</p><p>④代码重构</p><p>⑤数据重构 </p><p>定义：发生在相当低的抽象层次上，是一种全范围的再工程活动。</p><p>⑥正向工程 </p><p>定义：应用软件工程的原理、概念、技术和方法来重新开发某个现有的应用系统。</p><h1 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h1><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823155336951.png" class="" title="image-20230823155336951"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823155219626.png" class="" title="image-20230823155219626"><h2 id="面向对象方法学"><a href="#面向对象方法学" class="headerlink" title="面向对象方法学"></a>面向对象方法学</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823151533951.png" class="" title="image-20230823151533951"><h2 id="面向对象方法学要点"><a href="#面向对象方法学要点" class="headerlink" title="面向对象方法学要点"></a>面向对象方法学要点</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823151620459.png" class="" title="image-20230823151620459"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823151757793.png" class="" title="image-20230823151757793"><h2 id="面向对象方法学的优点"><a href="#面向对象方法学的优点" class="headerlink" title="面向对象方法学的优点"></a>面向对象方法学的优点</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823151855506.png" class="" title="image-20230823151855506"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823151945766.png" class="" title="image-20230823151945766"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823152131171.png" class="" title="image-20230823152131171"><h2 id="面向对象的概念"><a href="#面向对象的概念" class="headerlink" title="面向对象的概念"></a>面向对象的概念</h2><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823152242014.png" class="" title="image-20230823152242014"><h4 id="对象的特点"><a href="#对象的特点" class="headerlink" title="对象的特点"></a>对象的特点</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823152442368.png" class="" title="image-20230823152442368"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823152533486.png" class="" title="image-20230823152533486"><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823152617109.png" class="" title="image-20230823152617109"><h3 id="实例和消息"><a href="#实例和消息" class="headerlink" title="实例和消息"></a>实例和消息</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823152747704.png" class="" title="image-20230823152747704"><h3 id="方法和属性"><a href="#方法和属性" class="headerlink" title="方法和属性"></a>方法和属性</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823152938632.png" class="" title="image-20230823152938632"><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823152950393.png" class="" title="image-20230823152950393"><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823153103589.png" class="" title="image-20230823153103589"><h3 id="多态性和重载"><a href="#多态性和重载" class="headerlink" title="多态性和重载"></a>多态性和重载</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823153134216.png" class="" title="image-20230823153134216"><h2 id="模型分类"><a href="#模型分类" class="headerlink" title="模型分类"></a>模型分类</h2><h3 id="对象模型"><a href="#对象模型" class="headerlink" title="对象模型"></a>对象模型</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823153503024.png" class="" title="image-20230823153503024"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823153610528.png" class="" title="image-20230823153610528"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823153952307.png" class="" title="image-20230823153952307"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823154107934.png" class="" title="image-20230823154107934"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823154226979.png" class="" title="image-20230823154226979"><h3 id="动态模型"><a href="#动态模型" class="headerlink" title="动态模型"></a>动态模型</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823154355423.png" class="" title="image-20230823154355423"><h3 id="功能模型"><a href="#功能模型" class="headerlink" title="功能模型"></a>功能模型</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823154520953.png" class="" title="image-20230823154520953"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823154611029.png" class="" title="image-20230823154611029"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823154740953.png" class="" title="image-20230823154740953"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823154916787.png" class="" title="image-20230823154916787"><h3 id="三种模型的关系"><a href="#三种模型的关系" class="headerlink" title="三种模型的关系"></a>三种模型的关系</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823155149001.png" class="" title="image-20230823155149001"><h1 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h1><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823155655446.png" class="" title="image-20230823155655446"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823162206933.png" class="" title="image-20230823162206933"><h2 id="估算软件规模"><a href="#估算软件规模" class="headerlink" title="估算软件规模"></a>估算软件规模</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823160307691.png" class="" title="image-20230823160307691"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823160356413.png" class="" title="image-20230823160356413"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823160413403.png" class="" title="image-20230823160413403"><h2 id="人员组织"><a href="#人员组织" class="headerlink" title="人员组织"></a>人员组织</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823160618329.png" class="" title="image-20230823160618329"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823160629193.png" class="" title="image-20230823160629193"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823160648017.png" class="" title="image-20230823160648017"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823160659919.png" class="" title="image-20230823160659919"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823160801202.png" class="" title="image-20230823160801202"><h2 id="质量保证"><a href="#质量保证" class="headerlink" title="质量保证"></a>质量保证</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823160921593.png" class="" title="image-20230823160921593"><h3 id="软件质量"><a href="#软件质量" class="headerlink" title="软件质量"></a>软件质量</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823160929173.png" class="" title="image-20230823160929173"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823161107456.png" class="" title="image-20230823161107456"><h3 id="软件质量保证措施"><a href="#软件质量保证措施" class="headerlink" title="软件质量保证措施"></a>软件质量保证措施</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823161129744.png" class="" title="image-20230823161129744"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823161416629.png" class="" title="image-20230823161416629"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823161436887.png" class="" title="image-20230823161436887"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823161508230.png" class="" title="image-20230823161508230"><h2 id="软件配置管理"><a href="#软件配置管理" class="headerlink" title="软件配置管理"></a>软件配置管理</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823161541501.png" class="" title="image-20230823161541501"><h2 id="能力成熟模型"><a href="#能力成熟模型" class="headerlink" title="能力成熟模型"></a>能力成熟模型</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230823161839257.png" class="" title="image-20230823161839257"><p>定义：是用于评价软件机构的软件过程能力成熟度模型。能力承受模型的 5 个等级从低到高：</p><p>1.初始级；2.可重复级；3.已定义级；4.已管理级；5.优化级</p><h1 id="大题总结"><a href="#大题总结" class="headerlink" title="大题总结"></a>大题总结</h1><p><a href="http://www.taodudu.cc/news/show-5293807.html?action=onClick">http://www.taodudu.cc/news/show-5293807.html?action=onClick</a></p><p><a href="https://blog.csdn.net/qq_39183034/article/details/123399644">【软件工程导论题型大总结】画图题总结_软件工程画图题_快乐江湖的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/m0_55298718/article/details/125208673?ops_request_misc=&request_id=&biz_id=102&utm_term=%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA%E9%A2%98%E5%9E%8B&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-4-125208673.nonecase&spm=1018.2226.3001.4187">TYUT太原理工大学2022软工导论大题汇总_太原理工大学软件工程导论_啦啦噜噜^_^的博客-CSDN博客</a></p><h2 id="数据流图（常考）"><a href="#数据流图（常考）" class="headerlink" title="数据流图（常考）"></a>数据流图（常考）</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824153408565.png" class="" title="image-20230824153408565"><h3 id="数据流图（DFD）分层"><a href="#数据流图（DFD）分层" class="headerlink" title="数据流图（DFD）分层"></a>数据流图（DFD）分层</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/20201025130336120.png" class="" title="在这里插入图片描述"><h4 id="分层说明"><a href="#分层说明" class="headerlink" title="分层说明"></a>分层说明</h4><p>数据流图分层 , 最上层是 顶层数据流图 , 第二层是 层数据流图 , 最底层是 底层数据流图 ,</p><p>“顶层数据流图” 与 “底层数据流图” 之间是若干 中层数据流图 </p><p>中层数据流图 需要进行编号 , 从 开始编号 </p><h4 id="顶层数据流图"><a href="#顶层数据流图" class="headerlink" title="顶层数据流图"></a>顶层数据流图</h4><p><strong>顶层数据流图 :</strong> 中间的椭圆 是需要开发的 系统 , 周边的矩形 表示的是 外部实体人或组织 , 外部实体 与 系统 之间 , 有数据传输关系 ;</p><p>一个形象的说明是 多个人吃火锅 , 外层周边是人 , 中心位置火锅是系统 ;</p><p>（顶层数据流图 能够表达的信息是非常有限的 , 其将整个系统 , 使用一个节点表示 ,其可以体现出 系统与外界实体之间的交互 ,但是系统内部的情况 , 系统内部模块之间的数据交换 是没有体现的 ;）</p><h4 id="中层数据流图"><a href="#中层数据流图" class="headerlink" title="中层数据流图"></a>中层数据流图</h4><p><strong>与 顶层数据流图 比较没有变化的部分 :</strong> 外部实体 , 外部实体与系统之间的数据流 , 是没有变化的 ;</p><p><strong>变化部分 :</strong> 有变化的部分是系统内部 , 系统内部进行了细化 , 原来系统是一个节点 , 在 中层数据流图中 , 会将一个节点拆分成多个节点 , 这些节点就是系统中的数据处理部件 , 即加工 ;</p><p>这些数据处理部件 ( 加工 ) 之间会有数据流的交互 </p><h4 id="底层数据流图"><a href="#底层数据流图" class="headerlink" title="底层数据流图"></a>底层数据流图</h4><p><strong>针对每个加工节点 , 将其拆分 , 绘制其中的更详细的数据流转情况 ;</strong></p><p>数据流图 ( DFD ) 分层 , 是从 顶层 -&gt; 中层 -&gt; 底层 , 逐层进行分解 , 这种分解思路 , 与结构化的开发方法 , 是完全匹配的 ;</p><p>因此 , 数据流图是结构化开发方法中 , 最常用的工具 ;</p><h3 id="例一"><a href="#例一" class="headerlink" title="例一"></a>例一</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824153438191.png" class="" title="image-20230824153438191"><h4 id="1识别外部实体及输入输出数据流"><a href="#1识别外部实体及输入输出数据流" class="headerlink" title="1识别外部实体及输入输出数据流"></a>1识别外部实体及输入输出数据流</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824153454880.png" class="" title="image-20230824153454880"><h4 id="2画出环境图（顶层数据流图）"><a href="#2画出环境图（顶层数据流图）" class="headerlink" title="2画出环境图（顶层数据流图）"></a>2画出环境图（顶层数据流图）</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824153731116.png" class="" title="image-20230824153731116"><h4 id="3画出一层数据流图"><a href="#3画出一层数据流图" class="headerlink" title="3画出一层数据流图"></a>3画出一层数据流图</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824153754046.png" class="" title="image-20230824153754046"><h4 id="4画出二层数据流图"><a href="#4画出二层数据流图" class="headerlink" title="4画出二层数据流图"></a>4画出二层数据流图</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824153820674.png" class="" title="image-20230824153820674"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824153832322.png" class="" title="image-20230824153832322"><h3 id="例二"><a href="#例二" class="headerlink" title="例二"></a>例二</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824161236052.png" class="" title="image-20230824161236052"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824161301875.png" class="" title="image-20230824161301875"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824161307380.png" class="" title="image-20230824161307380"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824161327772.png" class="" title="image-20230824161327772"><h3 id="例三"><a href="#例三" class="headerlink" title="例三"></a>例三</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824162316315.png" class="" title="image-20230824162316315"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824162331632.png" class="" title="image-20230824162331632"><h3 id="例四"><a href="#例四" class="headerlink" title="例四"></a>例四</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824163444229.png" class="" title="image-20230824163444229"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824163452123.png" class="" title="image-20230824163452123"><h3 id="例五"><a href="#例五" class="headerlink" title="例五"></a>例五</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824163701201.png" class="" title="image-20230824163701201"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230824163938234.png" class="" title="image-20230824163938234"><h2 id="软件结构图（不常考）"><a href="#软件结构图（不常考）" class="headerlink" title="软件结构图（不常考）"></a>软件结构图（不常考）</h2><h3 id="例一-1"><a href="#例一-1" class="headerlink" title="例一"></a>例一</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825145609410.png" class="" title="image-20230825145609410"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825145625844.png" class="" title="image-20230825145625844"><h4 id="1（没有分顶层数据流图和第一层数据流图）"><a href="#1（没有分顶层数据流图和第一层数据流图）" class="headerlink" title="1（没有分顶层数据流图和第一层数据流图）"></a>1（没有分顶层数据流图和第一层数据流图）</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825145700481.png" class="" title="image-20230825145700481"><h4 id="2软件结构图"><a href="#2软件结构图" class="headerlink" title="2软件结构图"></a>2软件结构图</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825145832119.png" class="" title="image-20230825145832119"><h3 id="例二-1"><a href="#例二-1" class="headerlink" title="例二"></a>例二</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825150637020.png" class="" title="image-20230825150637020"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825150813784.png" class="" title="image-20230825150813784"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825150820870.png" class="" title="image-20230825150820870"><h2 id="流程图（常考）"><a href="#流程图（常考）" class="headerlink" title="流程图（常考）"></a>流程图（常考）</h2><p>“跑道圆”形状代表开始或者结束</p><p>平行四边形框是输入/输出框</p><p>处理过程，“矩形”</p><p>判断，“菱形”</p><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825151929306.png" class="" title="image-20230825151929306"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825152256265.png" class="" title="image-20230825152256265"><h2 id="对象模型（不常考）"><a href="#对象模型（不常考）" class="headerlink" title="对象模型（不常考）"></a>对象模型（不常考）</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825153441664.png" class="" title="image-20230825153441664"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825153826588.png" class="" title="image-20230825153826588"><h2 id="ER图"><a href="#ER图" class="headerlink" title="ER图"></a>ER图</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/v2-c85cf685ae647519ae1b469b4d5321b1_b.webp" class="" title="img"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825160232239.png" class="" title="image-20230825160232239"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825160446606.png" class="" title="image-20230825160446606"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825160415263.png" class="" title="image-20230825160415263"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825160348954.png" class="" title="image-20230825160348954"><h2 id="N-S图"><a href="#N-S图" class="headerlink" title="N-S图"></a>N-S图</h2><p>记abcd即可</p><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825161042201.png" class="" title="image-20230825161042201"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825163200993.png" class="" title="image-20230825163200993"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825163237173.png" class="" title="image-20230825163237173"><h3 id="例一-2"><a href="#例一-2" class="headerlink" title="例一"></a>例一</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/d5fadafa450449689e9f31c48588940e.png" class="" title="在这里插入图片描述"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/ccff849e073d40baa490987396d08fa3.png" class="" title="在这里插入图片描述"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/5c3962a9e462449b9dd6f2278d2e2576.png" class="" title="在这里插入图片描述"><h3 id="例二-2"><a href="#例二-2" class="headerlink" title="例二"></a>例二</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826155204087.png" class="" title="image-20230826155204087"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/221bfa2d76aa4a0b957280d11428145c.png" class="" title="img"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/eb891af0c3e148809940a2589462a71a.png" class="" title="img"><h2 id="PAD图"><a href="#PAD图" class="headerlink" title="PAD图"></a>PAD图</h2><p>记abcd即可</p><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825164516171.png" class="" title="image-20230825164516171"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230825164824317.png" class="" title="image-20230825164824317"><h3 id="例一-3"><a href="#例一-3" class="headerlink" title="例一"></a>例一</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/221bfa2d76aa4a0b957280d11428145c.png" class="" title="img"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/49959fa3dce646e0aef7440a074459f3.png" class="" title="在这里插入图片描述"><h2 id="流图"><a href="#流图" class="headerlink" title="流图"></a>流图</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826151047981.png" class="" title="image-20230826151047981"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826151237603.png" class="" title="image-20230826151237603"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826151302995.png" class="" title="image-20230826151302995"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826150923690.png" class="" title="image-20230826150923690"><h2 id="判定表-1"><a href="#判定表-1" class="headerlink" title="判定表"></a>判定表</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826160431987.png" class="" title="image-20230826160431987">    <h3 id="例一-4"><a href="#例一-4" class="headerlink" title="例一"></a>例一</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/93f83211b7594151bf016bfa9d64563f.png" class="" title="在这里插入图片描述"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826160528797.png" class="" title="image-20230826160528797"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826160746281.png" class="" title="image-20230826160746281"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826160753840.png" class="" title="image-20230826160753840"><h3 id="例二-3"><a href="#例二-3" class="headerlink" title="例二"></a>例二</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826160911280.png" class="" title="image-20230826160911280"><h2 id="几种常见的逻辑覆盖"><a href="#几种常见的逻辑覆盖" class="headerlink" title="几种常见的逻辑覆盖"></a>几种常见的逻辑覆盖</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826163345723.png" class="" title="image-20230826163345723"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826163359891.png" class="" title="image-20230826163359891"><h3 id="例一-5"><a href="#例一-5" class="headerlink" title="例一"></a>例一</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/dc794840482e43e2ad7cd1edbf24aaa2.jpeg" class="" title="img"><h4 id="语句覆盖"><a href="#语句覆盖" class="headerlink" title="语句覆盖"></a>语句覆盖</h4><p>要求：每个语句至少执行一次，意思就是测试路径要走遍所有菱形和矩形</p><p>例：A=2,B=0,X=4 执行路径为sacbed</p><h4 id="判定覆盖"><a href="#判定覆盖" class="headerlink" title="判定覆盖"></a>判定覆盖</h4><p>要求：不仅测试路径要走遍所有菱形和矩形，而且要走遍所有菱形的所有分支</p><p>例：(1)A=3,B=0,X=3 执行路径为sacbd</p><p>​    (2)A=2,B=1,X=1 执行路径为sabed</p><h4 id="条件覆盖"><a href="#条件覆盖" class="headerlink" title="条件覆盖"></a>条件覆盖</h4><p>要求：不仅测试路径要走遍所有菱形和矩形，而且菱形中的中的每个条件要取到各种可能的结果</p><p>即：a菱形中的条件要出现A&gt;1,A&lt;=1,B=0,B!=0</p><p>​        b菱形中的条件要出现A=2,A!=2,X&gt;1,X&lt;=1</p><p>例：(1)A=2,B=0,X=4 执行路径为 sacbed</p><p>​        (2)A=1,B=1,X=1 执行路径为 sabd</p><h4 id="判定-条件覆盖"><a href="#判定-条件覆盖" class="headerlink" title="判定/条件覆盖"></a>判定/条件覆盖</h4><p>要求：同时满足判定覆盖、条件覆盖</p><p>例：(1)A=2,B=0,X=4 执行路径为 sacbed</p><p>​    (2)A=1,B=1,X=1 执行路径为 sabd</p><h4 id="条件组合覆盖"><a href="#条件组合覆盖" class="headerlink" title="条件组合覆盖"></a>条件组合覆盖</h4><p>要求：每个菱形中的条件的各种可能组合都出现至少一次</p><p>  上题共覆盖8种组合条件：</p><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/ce07b8ddaf064d5a8126891ccd27acb7.jpeg" class="" title="img"><p>例：(1) 输入：A=2,B=0,X=4   预计输出：略（考试要写）</p><p>​        (2) 输入：A=2,B=1,X=1   预计输出：略（考试要写）</p><p>​        (3) 输入：A=1,B=0,X=2   预计输出：略（考试要写）</p><p>​       (4) 输入：A=1,B=1,X=1   预计输出：略（考试要写）</p><h4 id="路径覆盖"><a href="#路径覆盖" class="headerlink" title="路径覆盖"></a>路径覆盖</h4><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826164321000.png" class="" title="image-20230826164321000"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826164338915.png" class="" title="image-20230826164338915"><h3 id="例二-4"><a href="#例二-4" class="headerlink" title="例二"></a>例二</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826163431663.png" class="" title="image-20230826163431663"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826163819386.png" class="" title="image-20230826163819386"><h2 id="等价类划分"><a href="#等价类划分" class="headerlink" title="等价类划分"></a>等价类划分</h2><h3 id="例一-6"><a href="#例一-6" class="headerlink" title="例一"></a>例一</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826172857691.png" class="" title="image-20230826172857691"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826173159539.png" class="" title="image-20230826173159539"><h3 id="例二-5"><a href="#例二-5" class="headerlink" title="例二"></a>例二</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826174034328.png" class="" title="image-20230826174034328"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826174046042.png" class="" title="image-20230826174046042"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230826174115897.png" class="" title="image-20230826174115897"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230827150851001.png" class="" title="image-20230827150851001"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230827150905278.png" class="" title="image-20230827150905278"><h3 id="例三-1"><a href="#例三-1" class="headerlink" title="例三"></a>例三</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230827150926832.png" class="" title="image-20230827150926832"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230827150937853.png" class="" title="image-20230827150937853"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230827151024077.png" class="" title="image-20230827151024077"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230827151040887.png" class="" title="image-20230827151040887"><h3 id="例四-1"><a href="#例四-1" class="headerlink" title="例四"></a>例四</h3><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/0aa35a2821e742788c4ac22531d460cb.png" class="" title="img"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/f9fbbd4cd25a48049c35683a9c6829e1.png" class="" title="img"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/f4264ca598c3475cab50894650a892fc.png" class="" title="img"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/2c6713cf3515420995e1bf32960e9add.png" class="" title="img"><h2 id="边界值分析"><a href="#边界值分析" class="headerlink" title="边界值分析"></a>边界值分析</h2><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230827152430316.png" class="" title="image-20230827152430316"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230827152636929.png" class="" title="image-20230827152636929"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230827152802341.png" class="" title="image-20230827152802341"><img src="/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230827152810840.png" class="" title="image-20230827152810840">]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h1&gt;&lt;img src=&quot;/2023/08/06/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/image-20230806151758522.png&quot; class title=&quot;image-20230806151758522&quot;&gt;

&lt;h2 id=&quot;软件危机和危机的介绍&quot;&gt;&lt;a href=&quot;#软件危机和危机的介绍&quot; class=&quot;headerlink&quot; title=&quot;软件危机和危机的介绍&quot;&gt;&lt;/a&gt;软件危机和危机的介绍&lt;/h2&gt;&lt;p&gt;&lt;font color=&quot;red&quot;&gt;软件危机(软件萧条、软件困扰)&lt;/font&gt;：是指在计算机软件的&lt;font color=&quot;red&quot;&gt;开发&lt;/font&gt;和&lt;font color=&quot;red&quot;&gt;维护过程&lt;/font&gt;中所遇到的一系列严重问题。&lt;/p&gt;
&lt;p&gt;软件危机包含下述&lt;font color=&quot;red&quot;&gt;两方面的问题&lt;/font&gt;：&lt;/p&gt;</summary>
    
    
    
    <category term="考研" scheme="https://aiden-a.gitee.io/categories/%E8%80%83%E7%A0%94/"/>
    
    
  </entry>
  
  <entry>
    <title>每日一句</title>
    <link href="https://aiden-a.gitee.io/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/"/>
    <id>https://aiden-a.gitee.io/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/</id>
    <published>2023-06-30T02:55:36.000Z</published>
    <updated>2023-09-02T03:41:18.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="D19"><a href="#D19" class="headerlink" title="D19"></a>D19</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230630105821422.png" class="" title="image-20230630105821422"><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>✅ <strong>通过谓语动词的数量判断简单句：</strong></p><p>本句中只有一个谓语has been，所以是简单句（一件事），不需要在断开。</p><p>✅ <strong>去修饰找核心：</strong></p><p>介词短语和非谓语动词都是句中的非核心，可以先去掉不看。</p><h2 id="生词"><a href="#生词" class="headerlink" title="生词"></a>生词</h2><p>Philharmonic n. 爱乐乐团    phil-,爱    harmonic *adj.*和声的 *n.*泛音；和声</p><p>music director 音乐总监</p><h2 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h2><p>纽约爱乐乐团决定去聘请Alan Gilbert作为它下一任的音乐总监，这项任命自从2009年突然宣布起就一直是古典音乐界谈论的话题。</p><h2 id="语法重点"><a href="#语法重点" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>通过谓语动词的数量判断简单句：</strong></p><p>本句中只有一个谓语has been，所以是简单句（一件事），不需要在断开。</p><p>✅ <strong>去修饰找核心：</strong></p><p>介词短语和非谓语动词都是句中的非核心，可以先去掉不看。</p><h1 id="D20"><a href="#D20" class="headerlink" title="D20"></a>D20</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230701154535168.png" class="" title="image-20230701154535168"><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>reply/are/are</p></li><li><p><strong>断开：</strong>通过连接词who/that断开</p></li><li><p><strong>简化：</strong></p><p>Devoted concertgoers… are missing the point.</p></li></ul><h2 id="生词-1"><a href="#生词-1" class="headerlink" title="生词"></a>生词</h2><p>✅ devoted adj. 非常热诚的，非常热衷的；专心的；献身的</p><p>✅ concertgoer n. 音乐会听众，现场听众        -goer（常去……的人)</p><p>✅ recording n. 录音；录像<br>✅ substitute  n. 代替，替代；替代品 v. 代替，替代</p><p>✅ live performance n. 现场表演</p><h2 id="翻译-1"><a href="#翻译-1" class="headerlink" title="翻译"></a>翻译</h2><p>那些回应称“音乐录音无法替代现场演出”的音乐会忠实听众没有真正抓住核心问题。</p><h2 id="语法重点-1"><a href="#语法重点-1" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong></p><p>通过连接词who和that找到了从句的开始，从句结束于第二个谓语动词are missing之前。</p><hr><p>✅<strong>嵌套结构</strong></p><p>who引导的定语从句中嵌套了that引导的宾语从句。</p><h1 id="D21"><a href="#D21" class="headerlink" title="D21"></a>D21</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230702154725983.png" class="" title="image-20230702154725983"><h2 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>must compete</p></li><li><p><strong>断开：</strong>通过谓语动词的数量判断简单句</p></li><li><p>简化：</p><p>…instrumentalists must compete…</p></li></ul><h2 id="生词-2"><a href="#生词-2" class="headerlink" title="生词"></a>生词</h2><p>✅ classical instrumentalist 古典音乐演奏家<br>✅ compete v. 比赛，竞赛<br>✅ compete…with… 与……比赛（竞赛）<br>✅ opera house 歌剧院<br>✅ dance troupe 舞团<br>✅ recorded performance 表演的录音（录像）<br>✅ classical musician 古典音乐家</p><h2 id="翻译-2"><a href="#翻译-2" class="headerlink" title="翻译"></a>翻译</h2><p>为了获得艺术爱好者的时间、关注和金钱，古典音乐演奏家们不仅要和歌剧院、舞团、剧团和博物馆竞争，而且还必须和20世纪伟大的古典音乐家的演奏录音展开竞争。</p><h2 id="语法重点-2"><a href="#语法重点-2" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>通过谓语动词数量判断简单句：</strong></p><p>本句中只有一个谓语must compete，所以是简单句（一件事儿），不需要再断开。</p><p>✅ <strong>去修饰找核心</strong><br>介词短语是句子的非核心，可以先去掉不看</p><p>✅ <strong>平行结构</strong><br>准确找到句子中的三个平行机构：</p><ol><li><p>For the time, attention, and money</p></li><li><p>not only with…but also with…</p></li><li><p>opera houses, dance troupes, theater companies, and museums</p></li></ol><h1 id="D22"><a href="#D22" class="headerlink" title="D22"></a>D22</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230703152940017.png" class="" title="image-20230703152940017"><h2 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h2><p><strong>找谓语动词：</strong>has made</p><h2 id="生词-3"><a href="#生词-3" class="headerlink" title="生词"></a>生词</h2><p>无</p><h2 id="翻译-3"><a href="#翻译-3" class="headerlink" title="翻译"></a>翻译</h2><p>金融危机已经使得暂时赋闲在家（待业）以及辞掉不好的工作变得更容易接受。</p><h2 id="语法重点-3"><a href="#语法重点-3" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>形式宾语：</strong></p><p>it在本句中是形式宾语。考研真题中常出现it作形式主语，但形式宾语较少出现，所以提示大家要注意。</p><p>✅ <strong>平行结构：</strong></p><p>真正的宾语是to be between jobs or to leave a bad one，并列连词or连接了两个to do词组，组成平行结构。</p><h1 id="D23"><a href="#D23" class="headerlink" title="D23"></a>D23</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230704153104094.png" class="" title="image-20230704153104094"><h2 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>approach/means/stems</p></li><li><p><strong>断开：</strong>通过连接词that断开</p></li><li><p>简化：The way…means that…</p></li></ul><h2 id="生词-4"><a href="#生词-4" class="headerlink" title="生词"></a>生词</h2><p>✅ consumer n. 消费者，顾客；用户</p><p>✅ approach v. 着手处理；靠近，接近 </p><p>✅ purchase n. 购买 v. 购买 </p><p>✅ stem from 来源于……, 来自于……</p><p>✅ conventional adj. 传统的；常规的；普通的</p><h2 id="翻译-4"><a href="#翻译-4" class="headerlink" title="翻译"></a>翻译</h2><p>现在消费者做出购买决策的方式表明，营销的影响来自于超越传统付费媒介的众多因素。</p><h2 id="语法重点-4"><a href="#语法重点-4" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句：</strong></p><ol><li>通过连接词that，找到宾语从句。</li><li>通过分析主谓，找到省略了关系词的定语从句，修饰先行词the way。</li></ol><h1 id="D24"><a href="#D24" class="headerlink" title="D24"></a>D24</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230705153716504.png" class="" title="image-20230705153716504"><h2 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>define/is/place</p></li><li><p><strong>断开：</strong>通过连接词whose/that断开</p></li></ul><h2 id="生词-5"><a href="#生词-5" class="headerlink" title="生词"></a>生词</h2><p>✅ define… as… 把……定义为……</p><p>✅ sold media  出售的媒体</p><p>✅ owned media  自有媒体</p><p>✅ traffic n. 流量；交通</p><p>✅ organization n. 组织，机构</p><p>✅ content n. 内容</p><p>✅ e-commerce engine 电子商务引擎</p><p>✅ environment n. 环境</p><p>✅ place v. 放在某地 n. 地方；场所</p><h2 id="翻译-5"><a href="#翻译-5" class="headerlink" title="翻译"></a>翻译</h2><p>我们把这样的出售媒介定义为“访问量如此之大，以至于其他机构也将广告内容或电子商务引擎放置在它的网络环境中”的自有媒体。</p><h2 id="语法重点-5"><a href="#语法重点-5" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>嵌套结构</strong></p><p>通过连接词whose和第一个that就找到了从句。</p><p>whose引导的定语从句，修饰先行词owned media；</p><p>whose定语从句中又嵌套了so… that… 引导的结果状语从句。</p><h1 id="D25"><a href="#D25" class="headerlink" title="D25"></a>D25</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230706150043280.png" class="" title="image-20230706150043280"><h2 id="分析-6"><a href="#分析-6" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>alleviate/include</p></li><li><p><strong>断开：</strong>通过连接词which断开</p></li></ul><h2 id="生词-6"><a href="#生词-6" class="headerlink" title="生词"></a>生词</h2><p>✅ Toyota Motor 丰田汽车公司</p><p>✅ alleviate v. 减轻；缓和，缓解</p><p>✅ recall crisis 召回的危机</p><p>✅ relatively adv. 相对地</p><p>✅ well-orchestrated adj. 精心策划的</p><p>✅ social-media n. 社交媒体</p><p>✅ campaign n. 活动；竞选活动 </p><p>✅ engage with sb. 与……接洽；与……交流</p><h2 id="翻译-6"><a href="#翻译-6" class="headerlink" title="翻译"></a>翻译</h2><p>例如，丰田汽车公司通过发动相对迅速、协调有致的社交媒介回应活动，包括在微博Twitter和社会新闻网Digg等网站上与消费者直接互动，缓解了今年早些时候的召回危机所造成的部分损害。</p><h2 id="语法重点-6"><a href="#语法重点-6" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>去修饰找核心</strong>:</p><p>插入语和多个介词短语是句子的非核心成分，可以先不看，尤其注意非常长的with介词短语。</p><p>主句的核心：Toyota Motor … alleviated some of the damage …</p><h1 id="D26"><a href="#D26" class="headerlink" title="D26"></a>D26</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230707153210399.png" class="" title="image-20230707153210399"><h2 id="分析-7"><a href="#分析-7" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>can be / writes / dampen / can be </p></li><li><p><strong>断开：</strong>通过连接词that断开</p></li></ul><h2 id="生词-7"><a href="#生词-7" class="headerlink" title="生词"></a>生词</h2><p>✅ day-to-day adj. 日复一日的</p><p>✅ raising kids 养育孩子</p><p>✅ soul-crushingly 摧毁灵魂般地</p><p>✅ in the moment 在此刻；当下</p><p>✅ dampen one’s moods 使某人心情沮丧</p><p>✅ intense  adj. 强烈的，极度的；非常的</p><p>✅ gratification n. 满足</p><p>✅ very adj.恰好的，正是的</p><h2 id="翻译-7"><a href="#翻译-7" class="headerlink" title="翻译"></a>翻译</h2><p>尽管日复一日的育儿经历艰难到摧残灵魂的地步，但“恰恰是当下打击我们情绪的事情日后会成为我们极度满足和快乐的源泉”，西尼尔写道</p><h2 id="语法重点-7"><a href="#语法重点-7" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong>：</p><p>通过逗号、连接词even though、两个that可以把长难句断开。</p><ul><li>Even Though引导让步状语从句。</li><li>第一个that引导宾语从句。</li><li>第二个that引导定语从句，修饰先行词the very things。</li></ul><p>✅ <strong>嵌套结构:</strong></p><p>主句中嵌套了that宾语从句，而宾语从句中又嵌套了that定语从句。</p><h1 id="D27"><a href="#D27" class="headerlink" title="D27"></a>D27</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230708145647619.png" class="" title="image-20230708145647619"><h2 id="分析-8"><a href="#分析-8" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>are provoked/shouldn’t have had/are bothered/are/must be</p></li><li><p><strong>断开：</strong>通过标点符号和连接词that断开</p></li></ul><h2 id="生词-8"><a href="#生词-8" class="headerlink" title="生词"></a>生词</h2><p>✅ provoke v. 激怒，惹怒；刺激；煽动</p><p>✅ wonder v. 想知道</p><p>✅ be bothered with… 被……所困扰</p><p>✅ misery n. 悲惨</p><p>✅ gape v. 裂开，张开</p><p>✅ gaping adj. 裂开的，或开的</p><h2 id="翻译-8"><a href="#翻译-8" class="headerlink" title="翻译"></a>翻译</h2><p>不幸福的父母很少被激起对“自己是否本不该要孩子”的思考；但不幸福的无子女者会不断被“孩子是世界上唯一最重要的事情”这一信息所烦扰：显然他们的痛苦必定是他们生活中那些豁开的、孩子大小的窟窿所带来的直接后果。</p><h2 id="语法重点-8"><a href="#语法重点-8" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong>：</p><p>通过第一个逗号、冒号以及连接词if、but和that断开长难句。</p><ul><li>连接词if表示“是否”，引导宾语从句，跟在及物动词wonder后。</li><li>逗号和连接词but前后连接两句话，构成并列句。</li><li>连接词that引导同位语从句，解释说明前面的抽象名词the message。</li><li>冒号后引出的句子是对前面的内容进一步解释说明。</li></ul><h1 id="D28"><a href="#D28" class="headerlink" title="D28"></a>D28</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230709145943702.png" class="" title="image-20230709145943702"><h2 id="分析-9"><a href="#分析-9" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>found/will have to/increases</p></li><li><p><strong>断开：</strong>通过2个连接词that断开</p></li></ul><h2 id="生词-9"><a href="#生词-9" class="headerlink" title="生词"></a>生词</h2><p>✅ departure n.离开<br>✅ depart v. 离开<br>✅ probability  n. 可能性；可能<br>✅ probably adv. 可能地<br>✅ probable adj. 可能的<br>✅ subsequently  adv. 接下来地；随后地；接着地<br>✅ subsequent adj. 随后的，接着的<br>✅ consequently adv. 所以地<br>✅ restate  v. 重申；重新申报<br>✅ increases v. 增加</p><h2 id="翻译-9"><a href="#翻译-9" class="headerlink" title="翻译"></a>翻译</h2><p>他们发现，（董事）突然离职后，其所在公司随后需要重申盈利的可能性增加了近20%。</p><h2 id="语法重点-9"><a href="#语法重点-9" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong>：</p><p>本句话中标点符号不能用来断开长难句，可以通过2个连接词that进行断开。</p><p>✅ <strong>嵌套结构</strong></p><h1 id="D29"><a href="#D29" class="headerlink" title="D29"></a>D29</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230710150337181.png" class="" title="image-20230710150337181"><h2 id="分析-10"><a href="#分析-10" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>believe / have / leave / breaks / shows / were / occurred</li><li><strong>断开：</strong>通过标点逗号、连接词或词组that/if/before/even if/at the time、以及分析主谓来断开句子</li></ul><h2 id="生词-10"><a href="#生词-10" class="headerlink" title="生词"></a>生词</h2><p>✅ reputation n. 名声；声誉 </p><p>✅ a blow to reputations 对声誉的打击</p><p>✅ review n. 检查；审查；回顾</p><p>✅ a review of history 历史记录</p><p>✅ board n. 董事会；板子，纸板，木板，黑板</p><p>✅ be on the board 在董事会上；在板子上；在飞机上，在车上，在轮船（甲板）上</p><p>✅ wrongdoing n. 错事；坏事</p><p>✅ occur v. 发生</p><h2 id="翻译-10"><a href="#翻译-10" class="headerlink" title="翻译"></a>翻译</h2><p>但研究者认为，如果外部董事在坏消息爆发前就已离开公司，那么他们会更容易避免声誉受损——即便历史记录显示“错误行为形成时，董事们尚在其职”（依然如此）。</p><h2 id="语法难点"><a href="#语法难点" class="headerlink" title="语法难点"></a>语法难点</h2><p>✅ <strong>断开长难句</strong>：</p><p>通过逗号和连接词（或词组）but、that、if、before、even if、at the time以及分析主谓，来断开长难句，如下：</p><ul><li>But the researchers believe 主句（But在句首，表示与上一句是转折关系）</li><li>that outside directors have an easier time of avoiding a blow to their reputations 宾语从句</li><li>if they leave a firm 条件状语从句</li><li>before bad news breaks, 时间状语从句</li><li>even if a review of history shows 让步状语从句</li><li>they were on the board 省略了连接词的宾语从句</li><li>at the time any wrongdoing occurred. 时间状语从句</li></ul><h1 id="D30"><a href="#D30" class="headerlink" title="D30"></a>D30</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230711112347308.png" class="" title="image-20230711112347308"><h2 id="分析-11"><a href="#分析-11" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>swept/ harmed/has been concentrated / are</li><li><strong>断开：</strong>通过连接词that/where断开</li></ul><h2 id="生词-11"><a href="#生词-11" class="headerlink" title="生词"></a>生词</h2><p>✅ whirlwind n. 旋风 </p><p>✅ sweep  v. 扫；刮 （过去式swept，过去分词swept）</p><p>✅ sweep through…  （一阵风）扫过/刮过……</p><p>✅ concentrate v. 集中</p><p>✅ distinctive adj. 有特色的；与众不同的</p><p>✅ least distinctive 最没有特色的</p><h2 id="翻译-11"><a href="#翻译-11" class="headerlink" title="翻译"></a>翻译</h2><p>这场席卷整个新闻编辑部的旋风伤及每个人，但大部分损失集中于报纸内容最缺乏特色的部门。</p><h2 id="语法难点-1"><a href="#语法难点-1" class="headerlink" title="语法难点"></a>语法难点</h2><p>✅ <strong>断开长难句</strong></p><p>连接词that、where和逗号是断开句子的标志。</p><ol><li><p>连接词that引导定语从句，结束于第二个谓语动词harmed之前，修饰先行词the whirlwind。</p></li><li><p>连接词where引导定语从句，结束于句尾，修饰先行词areas。</p></li></ol><h1 id="D31"><a href="#D31" class="headerlink" title="D31"></a>D31</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230712150512026.png" class="" title="image-20230712150512026"><h2 id="分析-12"><a href="#分析-12" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>tend </li><li><strong>简化</strong>：We tend to think of the decades… as a time… </li></ul><h2 id="生词-12"><a href="#生词-12" class="headerlink" title="生词"></a>生词</h2><p>✅ tend to do sth. 倾向于做某事；往往……</p><p>✅ think of A as B  把A认作为B</p><p>✅ prosperity  n. 繁荣</p><p>✅ G. I. Bill 《退伍军人权利法案》</p><p>✅ bill  n. 法案；账单；钞票</p><p>✅ line up 排队</p><p>✅ bureau n. 局；处</p><p>✅ marriage bureau 婚姻登记处</p><h2 id="翻译-12"><a href="#翻译-12" class="headerlink" title="翻译"></a>翻译</h2><p>我们往往将二战结束后的几十年看作一个繁荣与增长的时代，数以百万计的士兵们返回家乡；他们在《退伍军人权利法案》的帮助下去上大学；在婚姻登记处排队登记结婚。</p><h2 id="语法难点-2"><a href="#语法难点-2" class="headerlink" title="语法难点"></a>语法难点</h2><p>✅ <strong>去修饰找核心</strong>：</p><p>句中非谓语动词词组immediately following World War II和介词短语of prosperity and growth，分别修饰前面的名词decades和time，可以先去掉不看。</p><p><strong>✅</strong> <strong>伴随结构</strong>+<strong>平行结构:</strong></p><ul><li>with+名词+非谓语动词，作伴随结构，表示“伴随着有……”。（其实就是独立主格，但术语～你懂的～不重要～）</li><li>三个doing词组returning…, going … and lining …平行并列，一起补充soldiers（主动）做什么。</li></ul><h1 id="D32"><a href="#D32" class="headerlink" title="D32"></a>D32</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230713113117187.png" class="" title="image-20230713113117187"><h2 id="分析-13"><a href="#分析-13" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>was/emigrated/took</li><li><strong>断开：</strong>通过连接词who断开</li></ul><h2 id="生词-13"><a href="#生词-13" class="headerlink" title="生词"></a>生词</h2><p>✅ phrase n. 短语，词组；简短的句子；说法</p><p>✅ popularize v. 使……受欢迎；普及，推广</p><p>✅ architect n. 建筑学家</p><p>✅ architecture n. 建筑学；建筑风格</p><p>✅ architecture schools  建筑学校</p><p>✅ associated with… 与……有联系；与……相关联</p><p>✅ emigrate v. 移出（从本国移出到其他国家）</p><p>✅ immigrate  v. 移入（从其他国家移入）</p><p>✅ take up posts 就职</p><h2 id="翻译-13"><a href="#翻译-13" class="headerlink" title="翻译"></a>翻译</h2><p>“少即是多”这句话实际上是首先由一位名叫路德维希•密斯•凡德罗的德国建筑家推广开来的，像其他与包豪斯建筑学院相关的设计师一样，他在二战之前移民到美国，并曾在美国多个建筑学院任职。</p><h2 id="语法难点-3"><a href="#语法难点-3" class="headerlink" title="语法难点"></a>语法难点</h2><p>✅分裂结构</p><p>✅断开长难句</p><p>找到断开位置标志和找从句结束位置，理清整体句子结构</p><h1 id="D33"><a href="#D33" class="headerlink" title="D33"></a>D33</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230715151737721.png" class="" title="image-20230715151737721"><h2 id="分析-14"><a href="#分析-14" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>may have mispredicted/would impact/acquired/got/was/was </li><li><strong>断开：</strong>通过连接词how/that/though断开</li></ul><h2 id="生词-14"><a href="#生词-14" class="headerlink" title="生词"></a>生词</h2><p>✅ mispredict v. 错误的预测；错误的预估</p><p>✅ mechanical revolution 机械革命</p><p>✅ acquire v. 需要；需求</p><p>✅ helicopter n. 直升飞机   helico-,螺旋，-pter,翅膀</p><p>✅ clothes dryer 干衣机，烘干机</p><p>✅ belief n. 信念，信仰</p><p>✅ self-sufficiency n. 自给自足，自我满足</p><p>✅ desirable adj. 令人满意的，值得拥有的</p><p>✅ inevitable adj. 不可避免的；必然会发生的</p><h2 id="翻译-14"><a href="#翻译-14" class="headerlink" title="翻译"></a>翻译</h2><p>在罗夫•雷普森的案例研究住宅中，他可能错误预测了机械革命对日常生活可能产生的影响——尽管大多数美国家庭都拥有了干衣机，但很少有能拥有直升机的——但他认为自给自足既是理想的，也是必然的，这一信念却得到了广泛传播。</p><h2 id="语法难点-4"><a href="#语法难点-4" class="headerlink" title="语法难点"></a>语法难点</h2><p>✅ <strong>找从句</strong>:</p><ul><li>连接词how引导宾语从句，跟在及物动词mispredicted后。</li><li>连接词that引导的同位语从句，解释说明抽象名词his belief。</li><li>连接词though引导让步状语从句。</li></ul><h1 id="D34"><a href="#D34" class="headerlink" title="D34"></a>D34</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230715153608056.png" class="" title="image-20230715153608056"><h2 id="分析-15"><a href="#分析-15" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>have lost/will converge/denies</li><li><strong>断开：</strong>通过连接词that/which断开</li></ul><h2 id="生词-15"><a href="#生词-15" class="headerlink" title="生词"></a>生词</h2><p>✅ faith n. 信任；信念；信仰</p><p>✅ lose faith 失去信心</p><p>✅ euro zone 欧元区</p><p>✅ converge v. (线条、运动的物体等)汇于一点, 向一点会合；使聚集</p><p>✅ thanks to 由于，多亏了</p><p>✅ discipline n. 纪律，原则；学科；训练；处罚</p><p>✅ currency n. 货币</p><p>✅ deny v. 否认，拒绝</p><p>✅ uncompetitive adj. 无竞争力的，缺乏竞争力的</p><p>✅ quick fix 应急措施，权宜之计</p><p>✅ devaluation n. （货币）贬值</p><h2 id="翻译-15"><a href="#翻译-15" class="headerlink" title="翻译"></a>翻译</h2><p>欧元区国家，无论强弱，会由于共有单一货币这一原则——这让缺乏竞争力的成员国无法采取货币贬值这一权宜之计——而走向联合，对此，市场已然失去信心。</p><h2 id="语法重点-10"><a href="#语法重点-10" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong>：</p><p>通过连接词that和which断开句子。</p><ul><li>连接词that引导同位语从句，解释说明抽象名词faith。</li><li>连接词which引导定语从句，修饰the discipline of sharing a single currency。</li><li>主句：Markets have lost faith …</li></ul><h1 id="D35"><a href="#D35" class="headerlink" title="D35"></a>D35</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230716151541571.png" class="" title="image-20230716151541571"><h2 id="分析-16"><a href="#分析-16" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>insists/should involve/is/fears/favour</li><li><strong>断开：</strong>通过连接词that/whom断开</li></ul><h2 id="生词-16"><a href="#生词-16" class="headerlink" title="生词"></a>生词</h2><p>✅ insist v. 坚持，坚持认为；强调</p><p>✅ co-ordination n. 协作；协调，和谐</p><p>✅ EU = European Union 欧盟</p><p>✅ a small majority 微弱多数</p><p>✅ liberalism n. 自由主义</p><p>✅ rigour n. 严格，严苛</p><p>✅ favour v. 赞成；喜爱；有助于</p><p>✅ favourite adj. 特别受喜爱的  n. 特别喜爱的人(或物)</p><p>✅ favourable adj. 赞许的, 赞同的；有利的, 顺利的</p><p>✅ interference n. 干涉, 介入；阻碍, 干扰</p><h2 id="翻译-16"><a href="#翻译-16" class="headerlink" title="翻译"></a>翻译</h2><p>它（德国）坚持认为经济协作应该包含欧盟俱乐部的所有27国成员，在它们当中，支持自由市场自由主义和从严的经济政策占微弱多数；（不过）单从内部核心来看，德国担心，微弱多数会支持法国的干涉。</p><h2 id="语法重点-11"><a href="#语法重点-11" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong></p><ul><li>连接词that引导宾语从句，跟在及物动词insists后面。</li><li>whom引导的定语从句，注意介词among被提前。</li><li>省略了连接词that的宾语从句，跟在及物动词fears后面。</li></ul><p><strong>✅</strong> <strong>准确找到定语从句的先行词：</strong></p><p>among whom 是介词提前的定语从句，修饰的先行词不是距离最近的EU club，而是修饰先行词all 27 members。</p><p><strong>✅</strong> <strong>for的熟词僻义</strong></p><p>介词for常用的意思有2个，一个表示目的“为了……”，另一个表示针对的对象“对于……”，但在本句中考察熟词僻义，意思为“支持”。</p><h1 id="D36"><a href="#D36" class="headerlink" title="D36"></a>D36</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230717112252972.png" class="" title="image-20230717112252972"><h2 id="分析-17"><a href="#分析-17" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>contends / can be / calls / use</li><li><strong>断开：</strong>通过标点逗号和连接词that/what/(in) which断开</li></ul><h2 id="生词-17"><a href="#生词-17" class="headerlink" title="生词"></a>生词</h2><p>✅ contend v. 主张；坚决认为，坚持认为</p><p>✅ peer pressure  同侪压力</p><p>✅ social cure  社会治疗</p><p>✅ organization  n. 机构；组织</p><p>✅ official  n. 官员</p><p>✅ group dynamics  群体的力量；群体的互动</p><p>✅ individual  n. 个人，个体</p><h2 id="翻译-17"><a href="#翻译-17" class="headerlink" title="翻译"></a>翻译</h2><p>但Tina Rosenberg在其新作《加入俱乐部》中声称，通过她所谓的“社会治疗”，同侪压力也可以成为一种积极的力量。在“社会治疗”中，组织机构和官员们利用群体互动的力量来帮助个人改善生活，甚至可能改进整个世界。</p><h2 id="语法重点-12"><a href="#语法重点-12" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>找到从句，并判断从句的种类：</strong></p><ul><li><p>that引导宾语从句，跟在及物动词contends后面。</p></li><li><p>what引导的宾语从句，跟在介词through后面。</p></li><li><p>in which介词提前的定语从句，修饰先行词social cure。</p></li></ul><p>✅ 注意从句2和从句3介词所属：</p><p>   2个句子均为介词+从句的结构，但是：</p><ul><li>从句2的介词不属于从句（介词+what宾语从句）</li><li>从句3的介词属于从句（in which介词提前的定语从句）</li></ul><p>⚠️ 如何判断呢？最简单的办法是看连接词。</p><ul><li>如果连接词是which或者是whom，有可能是介词提前的定语从句；</li><li>如果是其他连接词，则介词不属于从句。</li></ul><h1 id="D37"><a href="#D37" class="headerlink" title="D37"></a>D37</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230718150531475.png" class="" title="image-20230718150531475"><h2 id="分析-18"><a href="#分析-18" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>raised / made</li><li><strong>断开：</strong>通过标点破折号和连接词after断开</li></ul><h2 id="生词-18"><a href="#生词-18" class="headerlink" title="生词"></a>生词</h2><p>✅ a string of accidents 一系列的事故；一连串的事故</p><p>✅ partial  adj. 局部的</p><p>✅ collapse  n./v. 坍塌</p><p>✅ discovery  n. 发现</p><p>✅ underground  adj. 地下的</p><p>✅ leakage  n. 泄露</p><p>✅ raise  v. 举起，抬起；升起</p><p>✅ question  n. 疑问；问题</p><p>✅ raise question 引起质疑，引发质疑</p><p>✅ misleading  adj. 误导的</p><h2 id="翻译-18"><a href="#翻译-18" class="headerlink" title="翻译"></a>翻译</h2><p>一系列的事故，包括2007年冷却塔局部倒塌以及地下管道系统泄露为人所知，使得人们既对Vermont Yankee核电厂的安全也对Entergy公司的管理提出了严重质疑。尤其是在该公司对（问题）管道做出了误导性陈述之后更是如此。</p><h2 id="语法重点-13"><a href="#语法重点-13" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong>：</p><p>通过破折号和后面的连接词after断开，其后的句子为after时间状语从句，前半句为主句。</p><p><strong>✅</strong> <strong>去修饰找核心：</strong></p><p>插入语、形容词以及介词短语是句子的非核心，可以先去掉不看</p><ul><li>主句的核心：<strong>A</strong> <strong>string of accidents…raised…questions…</strong></li><li>从句的核心：<strong>…after the company made…statements…</strong></li></ul><h1 id="D38"><a href="#D38" class="headerlink" title="D38"></a>D38</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230719111803983.png" class="" title="image-20230719111803983"><h2 id="分析-19"><a href="#分析-19" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>are/has ruled/do have/say/will offer/extend</li><li><strong>断开：</strong>通过通过标点、连接词whereas/that/how和分析主谓断开</li></ul><h2 id="生词-19"><a href="#生词-19" class="headerlink" title="生词"></a>生词</h2><p>✅ obscure adj. 模糊不清的；晦涩难懂的，费解的</p><p>✅ whereas  conj. 然而，但是；虽然，尽管</p><p>✅ Supreme Court  最高法院</p><p>✅ regulatory authority  管理权，管辖权</p><p>✅ nuclear power  核能</p><p>✅ precedent-setting  adj. 开创先例的，开创先河的</p><h2 id="翻译-19"><a href="#翻译-19" class="headerlink" title="翻译"></a>翻译</h2><p>此案件中的法律问题模糊不清：虽然最高法院已经判定各州对核能确实具有某些管理权，但法律学者说，Vermont州案件将会对检验“州政府的权利究竟有多大”提供一个先例。</p><h2 id="语法重点-14"><a href="#语法重点-14" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>判断长难句中包含了几件事：</strong></p><p>根据谓语动词的数量（are, has ruled, do have, say, will offer, extend共 6个谓语动词），可以判断出长难句中包含了6件事，可以断成6段。</p><p><strong>✅</strong> <strong>断开长难句：</strong></p><p>通过标点、连接词和分析主谓3种办法断开长难句。</p><h1 id="D39"><a href="#D39" class="headerlink" title="D39"></a>D39</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230724145121567.png" class="" title="image-20230724145121567"><h2 id="分析-20"><a href="#分析-20" class="headerlink" title="分析"></a>分析</h2><p>​    标点、连接词、分析主谓</p><ul><li><strong>找谓语动词：</strong>is done / are waiting / use</li><li><strong>断开：</strong>通过通过标点、连接词that/who断开</li></ul><h2 id="生词-20"><a href="#生词-20" class="headerlink" title="生词"></a>生词</h2><p>✅ idealize v. 理想化</p><p>✅ idealized version 理想化的版本   </p><p>✅ observe  v. 观察；观测 </p><p>✅ collect  v. 收集</p><p>✅ objective researcher  客观的研究人员/研究者 </p><p>✅ carry out one’s work  开展/进行某人的工作</p><h2 id="翻译-20"><a href="#翻译-20" class="headerlink" title="翻译"></a>翻译</h2><p>在理想化的科学研究中，有关这个世界的真相，正在等待着运用科学方法开展研究的研究者们，来观察和收集。</p><h2 id="语法重点-15"><a href="#语法重点-15" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ 断开+<strong>判断长难句：</strong></p><p>通过逗号和连接词how、who断开长难句。<br>\1. how引导的从句跟在介词后面，因此是宾语从句。<br>\2. who引导定语从句，修饰先行词researchers。    </p><p>⚠️ </p><p>“名词+从句”有2种可能性：定语从句或同位语从句。</p><p>今天的句子中researchers+who从句，其中名词researchers表示“研究人员”，不需要进一步解释说明（既不需要同位语从句），因此本句话为定语从句。</p><p>但如果从句前的名词是事实fact、理论theory、消息information这类抽象名词，需要进一步解释说明，则后面有可能接同位语从句。</p><h1 id="D40"><a href="#D40" class="headerlink" title="D40"></a>D40</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230724150133163.png" class="" title="image-20230724150133163"><h2 id="分析-21"><a href="#分析-21" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong> works / transforms</li><li><strong>断开：</strong>通过标点和连接词as断开长难句。</li></ul><h2 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h2><p>✅ a discovery claim 发现声明</p><p>✅ works one’s way through… 排除困难通过……</p><p>✅ community n. 社会，社区，社团（文中指科学界）</p><p>✅ interaction n. 相互作用，相互影响，互动</p><p>✅ confrontation n. 对抗, 对抗的事物</p><p>✅ science and technology 科学与技术，科技</p><p>✅ transform… into… 把……转变成……</p><h2 id="翻译-21"><a href="#翻译-21" class="headerlink" title="翻译"></a>翻译</h2><p>在发现声明通过科学界的逐级审查之时，与该科技相容或相抗的理念间的相互作用、相互对抗，把个人的研究发现转变成科学界的可信发现。</p><h2 id="语法重点-16"><a href="#语法重点-16" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>动词</strong>-ed/ing<strong>转变为形容词来使用：</strong></p><ul><li>shared and competing beliefs </li><li>the science and the technology involved</li></ul><p><strong>✅</strong> <strong>断开长难句</strong>+去修饰找核心</p><p>通过标点和连接词as断开长难句。</p><p>介词短语是句子的非核心，可以先去掉不看。</p><p>从句的核心：As a discovery claim works its way…主句的核心：the interaction and confrontation… transforms an individual’s discovery claim into the community’s credible discovery.</p><h1 id="D41"><a href="#D41" class="headerlink" title="D41"></a>D41</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230724151053616.png" class="" title="image-20230724151053616"><h2 id="分析-22"><a href="#分析-22" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong> is / is / have fought</li><li><strong>断开：</strong>根据标点逗号和连接词Even though/that来断开句子</li></ul><h2 id="生词-21"><a href="#生词-21" class="headerlink" title="生词"></a>生词</h2><p>✅ variable n. 变量，可变因素</p><p>✅ teachers’ union  教师工会</p><p>✅ fight v. 吵架，打架；战斗，斗争 （过去式/过去分词fought）</p><p>✅ fight against… 与……打架</p><p>✅ get rid of… 除掉, 去掉；摆脱</p><p>✅ promote  v. 推动，促进；提拔；促销</p><h2 id="翻译-22"><a href="#翻译-22" class="headerlink" title="翻译"></a>翻译</h2><p>尽管众多证据表明，教师素质是（影响教育水平的）最重要可变因素，但教师工会还是一直抗议对教师行业进行优胜劣汰。</p><h2 id="语法重点-17"><a href="#语法重点-17" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>嵌套结构：</strong></p><p>even though让步状语从句中嵌套了that同位语从句。 </p><p><strong>✅ 平行结构：</strong><br>getting rid of bad ones 与 promoting good ones两个doing平行并列，跟在介词against作宾语</p><h1 id="D42"><a href="#D42" class="headerlink" title="D42"></a>D42</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230724152045333.png" class="" title="image-20230724152045333"><h2 id="分析-23"><a href="#分析-23" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong> is giving / do not do / is going / need</p></li><li><p><strong>断开：</strong>通过标点和连接词if、who、that断开长难句</p></li></ul><h2 id="生词-22"><a href="#生词-22" class="headerlink" title="生词"></a>生词</h2><p>✅ essentially adv. 本质上的，根本上的<br>✅ give a pass to… 对……给予通行证<br>✅ complicated adj.复杂的；棘手的，难以对付的；难懂的<br>✅ go close to… 走近/接近/靠近……<br>✅ implication n. 含义；暗示</p><h2 id="翻译-23"><a href="#翻译-23" class="headerlink" title="翻译"></a>翻译</h2><p>但如果地区（学区）本质上是在给那些因家庭复杂而不做作业的学生以通行证，则近于冒险暗示应降低对贫困孩子的标准</p><h2 id="语法重点-18"><a href="#语法重点-18" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong>：</p><p>通过标点和连接词if、who、that断开长难句。</p><ol><li>if引导条件状语从句；</li><li>who引导定语从句，修饰先行词students；</li><li>that引导同位语从句，解释说明抽象名词implication。 </li></ol><p><strong>✅</strong> <strong>应用拓展</strong>：</p><ol><li><p>如果句首出现并列连词and、but、or通常是不能用来断开长难句的，但可以帮助大家知道这句话与上一句话之间的关系。比如今天句子中的but就表示本句话和上一句话是转折的关系。</p></li><li><p>如果是because单独出现，后面是可以接句子的；但是because of这个词组出现，后面只能接词或词组，不能接句子。</p></li></ol><h1 id="D43"><a href="#D43" class="headerlink" title="D43"></a>D43</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230724153205414.png" class="" title="image-20230724153205414"><h2 id="分析-24"><a href="#分析-24" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong> is not / is / is / may celebrate / fuses</p></li><li><p><strong>断开：</strong>通过标点和连接词断开长难句</p></li></ul><h2 id="生词-23"><a href="#生词-23" class="headerlink" title="生词"></a>生词</h2><p>✅ intrinsically adv. 从本质上来说；跟本地</p><p>✅ a tiny slice of…  ……中的一小片；……当中的一小部分</p><p>✅ celebrate  v. 庆祝；颂扬，赞美，歌颂</p><p>✅ in one way  在某一个方面，从某一部分/某一个方面来说</p><p>✅ repeatedly  adv. 重复地；再三地</p><p>✅ firmly  adv. 坚定地；坚决地；坚固地；强有力地</p><p>✅ fuse  v. 熔化 n. 保险丝</p><p>✅ fuse A to B  把A和B熔合在一起</p><p>✅ identity  n. 身份；特性</p><p>✅ appearance  n. 出现，露面；外貌，外表</p><h2 id="翻译-24"><a href="#翻译-24" class="headerlink" title="翻译"></a>翻译</h2><p>并不是粉色本身不好，而是它只是七色彩虹中那么一丝而已。虽说粉色在某种程度上能为少女时代添色，但它一而再地，强有力地将女孩儿特质与其外表相熔合。</p><h2 id="语法重点-19"><a href="#语法重点-19" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong>：</p><p>通过标点和连接词断开长难句。整个句子通过but、and并列了3件事，并且句子中插入了though引出的让步状语从句。</p><p><strong>✅</strong> <strong>准确判断四个it分别指代什么</strong>：</p><p>第一个it是构成强调句的搭配it is…that…，无指代；余下三个it均指代前半句中提到的单数名词pink。</p><h1 id="D44"><a href="#D44" class="headerlink" title="D44"></a>D44</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230727113925962.png" class="" title="image-20230727113925962"><h2 id="分析-25"><a href="#分析-25" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong> was / became / came / began / defined</p></li><li><p><strong>断开：</strong>通过标点逗号和连接词when/when/what来断开句子。</p></li></ul><p> ⚠️（注意这里面有强调句It was… that不断开）</p><h2 id="生词-24"><a href="#生词-24" class="headerlink" title="生词"></a>生词</h2><p>✅ not until… 直到……才</p><p>✅ amplify v. 扩大，增强</p><p>✅ dominant adj. 首要的；支配的，统治的；占优势的；显性的</p><p>✅ marketing strategy 市场策略</p><p>✅ come into its own 显示出用处</p><p>✅ inherently adv. 天性地，固有地</p><p>✅ critical adj. 关键的，决定性的；评论的，批评的</p><h2 id="翻译-25"><a href="#翻译-25" class="headerlink" title="翻译"></a>翻译</h2><p>直到20世纪80年代中期，随着强化年龄和性别差异成为儿童市场主要营销策略时，当粉色开始显示出对女孩儿天然的吸引力时，才开始充分发挥其将女孩儿定义为女性的作用，至少在最初关键的几年里是如此。</p><h2 id="语法重点-20"><a href="#语法重点-20" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>分裂结构：</strong></p><p>两个when从句分别作了插入语，插入到句子的中间，造成句子分裂。</p><p><strong>✅</strong> <strong>准确判断2个when从句的作用：</strong></p><ol><li><p>第一个when引导非限定性定语从句，补充说明mid-1980s；</p></li><li><p>第二个when引导时间状语从句。</p></li></ol><p><strong>✅</strong> <strong>准确判断it  was…that…是强调句：</strong><br>在考研真题中，如果遇到it is…that或it was…that要提高警惕，很有可能会是强调句。如果把it is/was…that去掉，剩下的部分能构成一个完整的句子，那么就是强调句，例如本句。</p><p><strong>✅</strong> <strong>准确理解词句及特殊成分：</strong></p><ol><li><p>not until的含义“直到……才”；</p></li><li><p>amplifying age and sex differences是doing的词组作主语；</p></li><li><p>part of what… 介词后接的是宾语从句。</p><pre><code>                                            ⚠️</code></pre></li></ol><p>not until意为“直到……才”，很多同学会好奇not表示否定，但是翻译成中文却没有“不”的意思，为什么？</p><p>例：I did not sleep until 9:00.<br>我没睡的状态持续到九点钟，换句话说就是“直到九点钟我才睡”。</p><p>再比如本句中：<br>It was not until the mid-1980s that pink fully came into its own.<br>直到20世纪80年代中期，……才开始充分发挥其将女孩儿定义为女性的作用。</p><h1 id="D45"><a href="#D45" class="headerlink" title="D45"></a>D45</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230801112519140.png" class="" title="image-20230801112519140"><h2 id="分析-26"><a href="#分析-26" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>make / is / may not be patented / suppress / restrict</p></li><li><p><strong>断开：</strong>通过标点冒号/分号和连接词so/and断开长难句</p></li></ul><h2 id="生词-25"><a href="#生词-25" class="headerlink" title="生词"></a>生词</h2><p>✅ critic n. 批评者，评论家</p><p>✅ argument n. 争吵；论据，论证</p><p>✅ make arguments against… 提出反对……的理由</p><p>✅ gene n. 基因</p><p>✅ genetic adj. 基因的；遗传的</p><p>✅ patent n. 专利权；专利品 v. 取得…的专利权；授予专利</p><p>✅ a product of nature 自然的产物</p><p>✅ suppress v. 抑制；压制，镇压</p><p>✅ suppress innovation 抑制创新</p><p>✅ reward v. 奖赏，奖励；酬谢</p><p>✅ monopoly n. 垄断；垄断者</p><p>✅ restrict access to… 限制对……使用      </p><h2 id="翻译-26"><a href="#翻译-26" class="headerlink" title="翻译"></a>翻译</h2><p>批评者主要提出了三条反对基因专利的理由：基因是自然的产物，所以不可申请专利；基因专利抑制了创新而非给创新以奖励；专利垄断限制了人们对基因测试的使用，如对Myriad基因测试的使用。</p><h2 id="语法重点-21"><a href="#语法重点-21" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>标点：</strong></p><p>通过冒号，逗号和分号断开长难句。</p><p>⚠️注意：标点不仅可以用来断开长难句，不同的标点还可以帮助理解句意。</p><ol><li><p>冒号：表示进一步的解释说明，考研真题中往往出现总分结构，冒号前总说，冒号后进一步的解释说明；</p></li><li><p>分号：表示并列，本句中2个分号并列3个内容；</p></li><li><p>逗号：普通的停顿。</p></li></ol><h1 id="D46"><a href="#D46" class="headerlink" title="D46"></a>D46</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230801113928220.png" class="" title="image-20230801113928220"><h2 id="分析-27"><a href="#分析-27" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>suggests / see / catch / would have been / had graduated / is / are left</p></li><li><p><strong>断开：</strong>通过标点冒号/分号和连接词that/where/if可以断开长难句</p></li></ul><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/eO88dzLS64Faz2FPkgvicia3oEIpEibIdsRGA41LoVpXBwWkunFfrohLzue1E0hPKAULDM8uv6lEZK9euQhDuxHZg/640?wx_fmt=png" alt="img"></p><h2 id="生词-26"><a href="#生词-26" class="headerlink" title="生词"></a>生词</h2><p>✅ graduate v. (从…)大学毕业, 获得(学士)学位</p><p>✅ recession n. 经济衰退; 不景气</p><p>✅ dim v. (使)变暗淡, (使)变模糊</p><p>✅ catch up to… 赶上</p><p>✅ be left behind 被落下，被落在后面      </p><h2 id="翻译-27"><a href="#翻译-27" class="headerlink" title="翻译"></a>翻译</h2><p>哥伦比亚大学经济学家Till Von Wachter在报告中指出，不是所有坠入衰退时期的人都认为人生机会渺茫：那些毕业于名牌大学的人会相当快地到达其繁荣时期毕业时本该置身其中的位置，落后的是那些不如他们的普通大众。</p><h2 id="语法重点-22"><a href="#语法重点-22" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>通过标点判断句子之间的关系：</strong></p><p>冒号前是总说；冒号后是分说，进一步的解释说明。</p><p>分号表示并列。</p><p><strong>✅</strong> <strong>通过连接词及从句位置判断从句：</strong></p><ol><li><p>第一个that引导宾语从句，跟在及物动词suggests后面;</p></li><li><p>where引导宾语从句，跟在介词to后面；</p></li><li><p>if引导条件状语从句。</p></li></ol><p><strong>✅</strong> <strong>理解强调和虚拟两种特殊句式：</strong></p><ol><li><p>If引导虚拟条件句，假设过去；</p></li><li><p>It is… that… 构成强调句，强调the masses beneath them。</p></li></ol><p><strong>✅</strong> 强调句和it形式主语的区分</p><p>判断是不是强调句的标准是去掉“it is/was”和“that(who/whom/which)”,如果余下部分是一个完整的句子,说明原句是一个强调句,否则就是一个由it作形式主语的句子。</p><h1 id="D48"><a href="#D48" class="headerlink" title="D48"></a>D48</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230804112132409.png" class="" title="image-20230804112132409"><h2 id="分析-28"><a href="#分析-28" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>encourage / don’t advertise</li><li><strong>断开：</strong>通过标点破折号和连接词although来断开长难句</li></ul><h2 id="生词-27"><a href="#生词-27" class="headerlink" title="生词"></a>生词</h2><p>✅ style-conscious consumers 有时尚意识的消费者</p><p>✅ disposable adj. 一次使用后即丢掉的, 一次性的；可支配的</p><p>✅ mean to do 打算做某事（过去式/过去分词meant）</p><p>✅ last only a wash or two 只禁得住洗一两次</p><p>✅ advertise v. 公布, 宣传；做广告</p><p>✅ wardrobe n. 衣柜；行头</p><h2 id="翻译-28"><a href="#翻译-28" class="headerlink" title="翻译"></a>翻译</h2><p>这些品牌鼓动那些追求时尚的消费者们将衣服视为用完即弃的物品——原本就只用来穿一两水，虽然它们并非如此宣扬——且隔不了几周就要更新一次衣橱。</p><h2 id="语法重点-23"><a href="#语法重点-23" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>平行结构作宾语的补足语：</strong></p><p>根据并列连词and判断to see…和to renew…平行并列，一起作宾语的补足语，补充说明consumers 。</p><p><strong>✅ 准确理解插入语：</strong><br>插入语是由词组及although引导的让步状语从句组成的，进一步解释说明disposable。</p><p><strong>⚠️</strong></p><p><strong>如果在考研阅读真题中遇到了成对的逗号、破折号或括号，可以直接判断出成对的标点中间的部分为插入语，表示额外的补充说明，可以后看。</strong></p><h2 id="D49"><a href="#D49" class="headerlink" title="D49"></a>D49</h2><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230804112656397.png" class="" title="image-20230804112656397"><h2 id="分析-29"><a href="#分析-29" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>has / are wasted/ is/ knows</li><li><strong>断开：</strong>通过标点破折号/逗号和连接词that来断开长难句</li></ul><h2 id="生词-28"><a href="#生词-28" class="headerlink" title="生词"></a>生词</h2><p>✅ budget n. 预算，经费<br>✅ advertising budget 广告预算</p><h2 id="翻译-29"><a href="#翻译-29" class="headerlink" title="翻译"></a>翻译</h2><p>常言道，一半的广告预算都被浪费了——问题是，没人知道是哪一半。</p><h2 id="语法重点-24"><a href="#语法重点-24" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>代词it和同位语从句：</strong></p><p>连接词that引导同位语从句，解释说明前面的代词it。</p><p>反过来也可以理解为it指代的是that同位语从句。</p><p><strong>✅ 表语从句that的省略：</strong></p><p>the trouble is后面应该接表语从句that…，但是本句中that被省略，换成了逗号。</p><p>**✅ 破折号的用法：<br>**</p><p>考研真题中，出现一个破折号和两个破折号的意思是完全不一样的：</p><ul><li>一个破折号通常表示后面进一步解释说明前面的，用法类似于冒号；</li><li>两个破折号意味着破折号中间夹的部分是插入语，可以先去掉不看。</li></ul><p><strong>⚠️</strong></p><ol><li><p>同位语从句的写作模版：在考研中，如果要表示群体的观点，可以使用An old saying has it that…，that后面接普通的陈述句，表示“人们常说/常言道……”。这是一个常用的固定搭配的句型，推荐使用哦～</p></li><li><p>表语从句的写作模版：The trouble is that…，that后面接普通的陈述句，表示“麻烦的事/困扰/问题是…”。</p></li></ol><h1 id="D50"><a href="#D50" class="headerlink" title="D50"></a>D50</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230807113208672.png" class="" title="image-20230807113208672"><h2 id="分析-30"><a href="#分析-30" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>proposed / could tell / did not want</p></li><li><p><strong>断开：</strong>通过连接词so that/that来断开长难句</p></li></ul><h2 id="生词-29"><a href="#生词-29" class="headerlink" title="生词"></a>生词</h2><p>✅ Federal Trade Commission (FTC) 美国联邦贸易委员会</p><p>✅ propose v. 提议，建议</p><p>✅ track v. 追踪，留下痕迹</p><p>✅ option n. 选项；选择权</p><p>✅ internet browser 互联网浏览器</p><h2 id="翻译-30"><a href="#翻译-30" class="headerlink" title="翻译"></a>翻译</h2><p>2010年12月，美国联邦贸易委员会（FTC）建议在互联网浏览器中添加“禁止追踪（DNT）”选项，以便用户可以告知广告商他们不想被追踪。</p><h2 id="语法重点-25"><a href="#语法重点-25" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>so that表达两种不同的含义，引出两种不同的状语从句：</strong></p><p>区别在于后面有没有情态动词，如果有情态动词则为目的状语从句，如没有情态动词则为结果状语从句。</p><p><strong>✅</strong> <strong>嵌套结构：</strong></p><p>so that 引导的目的状语从句中嵌套了that引导的宾语从句。</p><h2 id="D51"><a href="#D51" class="headerlink" title="D51"></a>D51</h2><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230807113733081.png" class="" title="image-20230807113733081"><h2 id="分析-31"><a href="#分析-31" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>is trying/ relies/ has chosen/ is/ will become</li><li><strong>断开：</strong>通过标点符号及连接词 if/whicht/that来断开长难句</li></ul><h2 id="生词-30"><a href="#生词-30" class="headerlink" title="生词"></a>生词</h2><p>✅ upset v. 打乱, 扰乱；打翻；使苦恼，使心烦 adj. 不安的，心烦的</p><p>✅ rely on… 依靠，依赖</p><p>✅ advertising n. 广告</p><p>✅ an indirect method 一种间接的方式/方法</p><p>✅ guarantee n. 担保，保证</p><p>✅ by default 通过默认的方法，默认情况下；默认值</p><p>✅ norm n. 行规；规范，基准</p><p>✅ DNT=Do Not Track  不要跟踪</p><h2 id="翻译-31"><a href="#翻译-31" class="headerlink" title="翻译"></a>翻译</h2><p>如果它（微软）这是试图去击败几乎全部依赖广告的谷歌的话，那它选择了一种间接的方法：无法保证DNT（禁止追踪）默认值会成为行规。</p><h2 id="语法重点-26"><a href="#语法重点-26" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>there be句型的含义</strong></p><p>There be句型的基本结构是“There be + n.”，含义表示“有”（客观存在），是一个倒装句。**</p><p>✅ <strong>判断that引导什么从句</strong></p><p>n. + that从句，且that不作成分，那么that引导的就是同位语从句, 解释说明前面的抽象名词guarantee。</p><p>✅<strong>非限定性的定语从句</strong></p><p>非限定性的定语从句，除了可以修饰它前面的名词，还可以修饰它前面的整个句子，或句子的部分内容，</p><h1 id="D52"><a href="#D52" class="headerlink" title="D52"></a>D52</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230807114723331.png" class="" title="image-20230807114723331"><h2 id="分析-32"><a href="#分析-32" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>is/’s(is) left/can envisage</p></li><li><p><strong>断开：</strong>通过标点逗号、连接词and和分析主谓来断开长难句</p></li></ul><h2 id="生词-31"><a href="#生词-31" class="headerlink" title="生词"></a>生词</h2><p>✅ potential adj. 潜在的，有可能的</p><p>✅ evolution n. 发展；演变；进化</p><p>✅ consequence n. 影响；结果, 后果</p><p>✅ social consequence 生活影响</p><p>✅ dazzlingly adv. 灿烂地,耀眼地（文中表示令人眩晕地）</p><p>✅ complicated adj. 复杂的</p><p>✅ science fiction writer 科幻小说家</p><p>✅ futurologist n. 未来学家</p><p>✅ envisage v. 想象</p><h2 id="翻译-32"><a href="#翻译-32" class="headerlink" title="翻译"></a>翻译</h2><p>当代技术可能会有的发展及其社会影响复杂得令人眩晕，或许最好的办法是将我们能够想象的各种可能性留给科幻小说家和未来学家去探索。</p><h2 id="语法重点-27"><a href="#语法重点-27" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong></p><p>通过标点、连接词以及分析主谓将句子断成3部分，分别是and连接的并列句以及省略连接词的定语从句。</p><p><strong>✅ 判断it的指代</strong></p><p>在考研真题中it主要有三种可能性：</p><ul><li>作代词，指代上文中的单数名词，意思为“它”；</li><li>作形式主语，指代句子后面出现的真正主语（例如to do或从句）；</li><li>构成it is/was… that…强调句。</li></ul><p>⚠️ <strong>判断具体表示哪个意思，优先考虑句子内部：</strong></p><ul><li>如果句子里能找到真正的主语，则为形式主语；</li><li>反之，去找上文中它可能替代的可数名词单数。</li></ul><p>很明显本句it作形式主语，真正的主语是to explore the many possibilities we can envisage。</p><h1 id="D53"><a href="#D53" class="headerlink" title="D53"></a>D53</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230808112440816.png" class="" title="image-20230808112440816"><h2 id="分析-33"><a href="#分析-33" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>holds / have identified / will find</li><li><strong>断开：</strong>通过标点冒号和连接词(in) which来断开长难句</li></ul><h2 id="生词-32"><a href="#生词-32" class="headerlink" title="生词"></a>生词</h2><p>✅ identify  v. 识别出，辨认出</p><p>✅ long-term patterns 长期的模式</p><p>✅ make evidence-based forecasts 作出有根据的预测</p><p>✅ descendants 子孙后代</p><h2 id="翻译-33"><a href="#翻译-33" class="headerlink" title="翻译"></a>翻译</h2><p>正如通常情况那样，过去掌握着通向未来的钥匙：我们现在已经确定了足够多的地球以及人类历史何以形成的长期模式，使我们能够对子孙后代的生存环境做出有根据的预测。</p><h2 id="语法重点-28"><a href="#语法重点-28" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong></p><p>通过冒号、连接词which断开长难句，其中in which是介词提前的定语从句，修饰situations。</p><p><strong>✅ 判断非谓语动词的修饰</strong></p><ul><li>一般非谓语动词的修饰原则都是“就近修饰”，所以shaping the history of the planet修饰前面的名词patterns； </li><li>如果to do 前面有逗号，则修饰整个句子（作状语），所以to make evidence-based forecasts about the situations 修饰前面整个句子（结果状语）。</li></ul><p>to do除了目的状语，还可以作<strong>结果状语</strong>和<strong>原因状语</strong></p><p>例句如下：<br>I am too tired to stay up late.我太累了以至于不能熬夜了。（逻辑关系是：因为太累了，所以不能熬夜。to do 作结果状语）<br>I am so excited to be here. 我到这儿真的很兴奋。（逻辑关系是：因为到这儿，所以兴奋。to do作原因状语。）</p><h1 id="D54"><a href="#D54" class="headerlink" title="D54"></a>D54</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230808114439766.png" class="" title="image-20230808114439766"><h2 id="分析-34"><a href="#分析-34" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong> relates/ has been automated/has/is/is</li><li><strong>断开：</strong>通过标点冒号和连接词how以及分析主谓来断开长难句</li></ul><h2 id="生词-33"><a href="#生词-33" class="headerlink" title="生词"></a>生词</h2><p>✅ entitle v. 称做…；定名为…；给…称号</p><p>✅ relate v. 讲述；把……联系起来</p><p>✅ a modern textile mill 一个现代纺织厂</p><p>✅ automate v. 自动化，自动操作</p><p>✅ employee n. 雇员，员工</p><p>✅ mill n.磨坊，磨粉厂；工厂，制造厂 v.（用磨粉机）碾碎，磨成粉</p><h2 id="翻译-34"><a href="#翻译-34" class="headerlink" title="翻译"></a>翻译</h2><p>《在美国制造》一文中，作者亚当•戴维森提及一个有关棉花产地某现代纺织厂自动化程度的笑话：该普通纺织厂如今只有两名员工，“一个人和一只狗。人负责喂狗，而狗负责让人远离机器。”</p><h2 id="语法重点-29"><a href="#语法重点-29" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>去修饰找核心</strong></p><p>前半句中去掉了介词短语、非谓语动词和同位语后，核心内容只有：… the author… relates a joke…，简化之后极大地帮助了大家理解句子内容。</p><p><strong>✅</strong> <strong>名词后的并列</strong></p><p>名词a joke后面，介词短语from cotton country 和介词加从句about just how much a modern textile mill has been automated都是修饰名词a joke的，这类多个修饰语并列（短的放前，长的在后）考研中经常考。</p><p><strong>✅ 熟词僻意</strong><br>relate此处不表示“联系”，表示“讲述”。</p><h1 id="D55"><a href="#D55" class="headerlink" title="D55"></a>D55</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230809114521531.png" class="" title="image-20230809114521531"><h2 id="分析-35"><a href="#分析-35" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>is / have appeared / have / is / is / are</li><li><strong>断开：</strong>通过标点，连接词和分析主谓来断开长难句</li></ul><h2 id="生词-34"><a href="#生词-34" class="headerlink" title="生词"></a>生词</h2><p>✅ make the point 发表观点</p><p>✅ stubbornly adv. 倔强地；顽固地</p><p>✅ unemployment n. 失业，失业率</p><p>✅ decline v. 下降，减少，衰退；谢绝</p><p>✅ the Great Recession 大衰退; 大萧条</p><p>✅ recession n. 经济衰退，不景气；后退，撤回</p><p>✅ advance n. 前进，发展；增长，提高</p><p>✅ globalization n. 全球化，全球性</p><p>✅ information technology revolution 信息技术革命</p><p>✅ more… than ever 比以往任何时候都更……</p><p>✅ replace… with… 用来……代替……</p><h2 id="翻译-35"><a href="#翻译-35" class="headerlink" title="翻译"></a>翻译</h2><p>Davidson此文只不过是新近涌现的诸多同类文章中的一篇，这些文章都提出这样一种观点：当前失业率居高不下以及中产阶级收入缩水，很大程度上是由于大萧条造成的需求大幅降低，但同时也由于全球化和信息技术革命的发展，这种发展使机器或外来雇工取代劳力的速度超过了以往任何时期。</p><h2 id="语法重点-30"><a href="#语法重点-30" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>定位谓语动词</strong></p><p>谓语动词的数量和位置可以帮助同学们更准确地断开长难句。</p><p><strong>✅</strong> <strong>断开长难句</strong></p><p>通过标点、连接词及分析主谓三种办法断开长难句。</p><p><strong>✅</strong> <strong>判断句子的修饰</strong></p><p>看句子的过程中，一定要搞清楚句子修饰谁（如下从句2、3、4、6）。</p><p><strong>✅</strong> <strong>理清句与句之间的关系</strong></p><p>理清句子之间的关系，能更好的看懂句意（如下4和5并列表示两个原因）。</p><p>本句详细解读：</p><p>⚠️ 主句：Davidson’s article is one of a number of pieces</p><p>👉 定语从句：that have recently appeared making the point （修饰前面的名词pieces）</p><p>👉 定语从句：we have such stubbornly high unemployment and declining middle-class incomes today （修饰前面的名词reason）</p><p>👉 同位语从句：that the reason… is largely because of the big drop in demand because of the Great Recession, （解释说明前面的抽象名词point）</p><p>👉 并列句：but it is also because of the advances in both globalization and the information technology revolution （与前面的同位语从句并列，一起说明两个原因分别是什么）</p><p>👉 非限定性定语从句：, which are more rapidly than ever replacing labor with machines or foreign workers. （补充说明前面的名词词组the advances in both globalization and the information technology revolution）</p><h1 id="D56"><a href="#D56" class="headerlink" title="D56"></a>D56</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230817085731221.png" class="" title="image-20230817085731221"><h2 id="分析-36"><a href="#分析-36" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>know / is / will require</li><li><strong>断开：</strong>通过连接词that和分析主谓来断开长难句</li></ul><h2 id="生词-35"><a href="#生词-35" class="headerlink" title="生词"></a>生词</h2><p>✅ for sure 确实，确定，肯定；毫无疑问地<br>✅ advance n. 前进，发展；增长，提高<br>✅ globalization n. 全球化，全球性<br>✅ I. T. revolution = information technology revolution 信息技术革命<br>✅ require sb. to do sth.要求某人做某事<br>✅ above average 高于平均水平，超越平庸</p><h2 id="翻译-36"><a href="#翻译-36" class="headerlink" title="翻译"></a>翻译</h2><p>但有一点我们确信无疑，随着全球化和信息技术革命的发展，最佳岗位将要求员工掌握更多更好的教育以使自己超越平庸。</p><h2 id="语法重点-31"><a href="#语法重点-31" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong></p><p>通过标点、连接词及分析主谓三种办法断开长难句，找到从句。</p><p>从句1：we know for sure （定语从句，修饰前面的名词the one thing）</p><p>从句2：that with each advance in globalization and the I. T. revolution, the best jobs will require workers to have more and better education to make themselves above average. （表语从句）</p><p><strong>✅</strong> <strong>验证断开开长难句是否成功</strong></p><p>通过谓语动词的位置来判断长难句是否断开成功。</p><p>注意：并不是所有的标点和连接词都可以用来断开长难句。</p><p>⚠️ 一般情况下，大家可以按照三个办法（标点、连接词、分析主谓）来断开长难句。</p><p>但是对于断开没有把握的句子，大家可以先数一下句子中的谓语动词，谓语动词的数量可以帮大家确认句子中有几件事，可以断成几段；并且谓语动词的位置可以帮助大家确认断开得是否成功，以及帮助大家找到从句结束的地方。</p><h1 id="D57"><a href="#D57" class="headerlink" title="D57"></a>D57</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230817090525200.png" class="" title="image-20230817090525200"><h2 id="分析-37"><a href="#分析-37" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>is / are / need / would be / ensures / has</p></li><li><p><strong>断开：</strong>通过标点逗号、连接词where / but / that / that和分析主谓来断开句子</p></li></ul><h2 id="生词-36"><a href="#生词-36" class="headerlink" title="生词"></a>生词</h2><p>✅ employment n. 就业，雇佣</p><p>✅ ensure v. 保证，确保</p><p>✅ access to sth. 接近……的方法，取得……的权利</p><p>✅ post-high school education 高中以后的教育</p><h2 id="翻译-37"><a href="#翻译-37" class="headerlink" title="翻译"></a>翻译</h2><p>在一个已正式告别平庸的世界里，我们需要做很多事情以扶持就业，但对21世纪来讲，最重要的事情莫过于出台《美国退伍军人权利法案》之类的法案，以确保每个美国人都有机会接受高中后教育。</p><h2 id="语法难点-5"><a href="#语法难点-5" class="headerlink" title="语法难点"></a>语法难点</h2><p>✅ 定语从句</p><p>详见《句句真研》语法书第二部分长难句-第二章复合句-第二节定语从句</p><p>✅ 倒装句</p><p>详见《句句真研》语法书第二部分长难句-第三章特殊句式-倒装（There be 句型)</p><p>✅ 同位语从句</p><p>详见《句句真研》语法书第二部分长难句-第二章复合句-第一节名词性从句</p><p>✅ 形容词的比较级</p><p>详见《句句真研》语法书第一部分简单句-第二章简单句的扩展-第一节词性角度的扩展-形容词副词</p><h1 id="D58"><a href="#D58" class="headerlink" title="D58"></a>D58</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230817091355259.png" class="" title="image-20230817091355259"><h2 id="分析-38"><a href="#分析-38" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>came / had / would make / (would) go</p></li><li><p><strong>断开：</strong>通过标点逗号和连接词who / and who来断开长难句</p><p>⚠️ 注意：</p><p>最后的and那里不能断开，因为后面的并列句不完整则不能断开</p></li></ul><h2 id="生词-37"><a href="#生词-37" class="headerlink" title="生词"></a>生词</h2><p>✅ along with… 与……一道，连同……一起</p><p>✅ folks n. 人们</p><p>✅ look to do sth. 寻找做某事的机会</p><p>✅ make a permanent home 建立永久的家园，长留此地</p><p>✅ permanent adj. 永久的，固定的</p><p>✅ have no intention to do sth. 没有做某事的计划、意图</p><p>✅ intention n. 意图，意向；目的；打算</p><p>✅ make money 赚钱</p><h2 id="翻译-38"><a href="#翻译-38" class="headerlink" title="翻译"></a>翻译</h2><p>和许多找机会想在美国安家的人们一起来的，还有那些没打算留下来和想赚完钱然后回家的人们。</p><h2 id="语法重点✅-倒装句"><a href="#语法重点✅-倒装句" class="headerlink" title="语法重点✅ 倒装句"></a>语法重点✅ <strong>倒装句</strong></h2><p><strong>本句为倒装句，正常语序应该是Those… came along with the many folks looking to make a permanent home in the United States.</strong></p><p><strong>✅</strong> <strong>主语中两个并列的定语从句</strong></p><p>本句主语部分的核心词是those，完整的主语是those who had no intention to stay, and who would make some money and then go home。</p><p>由于主语部分较长，有两个who引导的定语从句并列，所以倒装。</p><p>⚠️ </p><p>and/but/or等并列连词后，如果是完整的句子，那么它就是独立的一件事，可以进行断开；</p><p>但如果接的不是完整的句子，则说明后面的句子需要和前面的句子共享某些成分，因此不能进行断开。</p><h1 id="D59"><a href="#D59" class="headerlink" title="D59"></a>D59</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230818112512396.png" class="" title="image-20230818112512396"><h2 id="分析-39"><a href="#分析-39" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>means / requires / are not</li><li><strong>断开：</strong>通过连接词that/that来断开长难句</li></ul><h2 id="生词-38"><a href="#生词-38" class="headerlink" title="生词"></a>生词</h2><p>✅ culture war 文化战争</p><p>✅ middle ground 中间地带，中间立场</p><p>✅ immigration n. 移民</p><p>✅ multiple adj. 多样的；许多的；多重的</p><p>✅ outcome n. 结果</p><p>✅ accomplish v.完成，实现；达到</p><p>✅ the existing system 现有制度</p><h2 id="翻译-39"><a href="#翻译-39" class="headerlink" title="翻译"></a>翻译</h2><p>超越这种非对即错文化战争的逻辑，意味着要打开中间地带，并知晓当今的移民管理需要多种途径及多样结果，包括一些现有制度下通过法律难以达成的途径和结果。</p><h2 id="语法重点-32"><a href="#语法重点-32" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>找到主语</strong></p><p>本句主语为Looking beyond the culture war logic of right or wrong，比较长。</p><p><strong>✅ 两个doing并列作宾语</strong></p><p>本句opening up the middle ground 和 understanding…并列作句子的宾语。</p><p><strong>✅ 判断从句</strong></p><p>本句中有两个从句，分别由that引导：</p><ul><li><p>第一个that引导宾语从句，跟在及物动词understanding后。</p></li><li><p>第二个that引导定语从句，修饰代词some（代词相当于名词用）。</p></li></ul><p>⚠️ </p><p>如果想确保分析长难句比较准确，可以先找谓语动词。谓语动词既能帮助大家进行断开，又能帮助大家检验断开是否准确。</p><p>但要提醒大家一下，找只找谓语动词，所有的非谓语动词都不是句子的核心，不能用来断开句子。比如单独出现的doing，done，to to不能断开句子，可以不看</p><h1 id="D60"><a href="#D60" class="headerlink" title="D60"></a>D60</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230818112914891.png" class="" title="image-20230818112914891"><h2 id="分析-40"><a href="#分析-40" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>can be / are judging / is / are</p></li><li><p><strong>断开：</strong>通过标点分号/逗号和连接词if来断开长难句</p></li></ul><h2 id="生词-39"><a href="#生词-39" class="headerlink" title="生词"></a>生词</h2><p>✅ snap decision 快速决定，仓促决定</p><p>✅ snap adj. 仓促的，匆忙的；突然的</p><p>✅ important defense mechanism 重要防御机制</p><p>✅ mechanism n. 机制；机械装置；办法，技巧，途径</p><p>✅ be hard-wired to do sth. 天生会做某事</p><p>✅ hard-wired adj. 天生的，直觉的，本能的</p><p>✅ millisecond n. 毫秒</p><h2 id="翻译-40"><a href="#翻译-40" class="headerlink" title="翻译"></a>翻译</h2><p>快速决策可能是重要防御机制；如果要判断某人是否具有危险性，毫秒间我们的大脑和身体便会本能地快速做出反应。</p><h2 id="语法重点-33"><a href="#语法重点-33" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>嵌套结构</strong></p><p>if 引导的条件句中嵌套了whether 引导的宾语从句。</p><p><strong>✅ 断开长难句</strong></p><p>通过标点、连接词及分析主谓断开句子，需要不断尝试练习。</p><p>⚠️ </p><p>不是所有的句子都要通过先数谓语动词进行断开。</p><p>对于像今天这么简单的句子，大家可以直接用我讲过的三种办法：标点、连接词和分析主谓进行断开即可。</p><h1 id="D61"><a href="#D61" class="headerlink" title="D61"></a>D61</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230818113719793.png" class="" title="image-20230818113719793"><h2 id="分析-41"><a href="#分析-41" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>have found / are / take / think / are / can reduce / eliminate</p></li><li><p><strong>断开：</strong>根据标点逗号和连接词that/although/if/how来断开长难句</p></li></ul><h2 id="生词-40"><a href="#生词-40" class="headerlink" title="生词"></a>生词</h2><p>✅ be prone to do sth.易于去做某事；倾向于做某事</p><p>✅ prone adj. 易于……，倾向于……<br>✅ snap adj. 仓促的，匆忙的；突然的<br>✅ overreaction 过激反应，反应过度<br>✅ take a moment and think about… 花点时间想想……<br>✅ be likely to do sth.有可能去做某事<br>✅ eliminate v. 消除，排除；忽略，淘汰<br>✅ negative effect 负面影响<br>✅ hard-wired adj. 天生的，直觉的，本能的<br>✅ quick, hard-wired response 快速的、本能的反应</p><h2 id="翻译-41"><a href="#翻译-41" class="headerlink" title="翻译"></a>翻译</h2><p>科学家已经发现：我们虽然易于做出快速应激反应，但是，如果花点时间揣度一下我们可能会做何反应，就可以减少甚至消除快速本能反应的负面影响。</p><h2 id="语法重点-34"><a href="#语法重点-34" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>嵌套结构</strong></p><ol><li><p>that宾语从句（动宾）中嵌套了although让步状语从句和if条件状语从句。</p></li><li><p>if条件状语从句中嵌套了how宾语从句（介宾）。</p></li></ol><p>⚠️ </p><p>不是所有的标点和并列连词都能用来断开长难句：<br>不连接句子的标点不能用来断开长难句；如果遇到并列连词，不管是and、but、or还是其他的并列连词，记住一句话“不完整则不能断”，只要后面不是完整的句子，就不能进行断开，如本句中and think，缺少主语，则不能断开。</p><h1 id="D62"><a href="#D62" class="headerlink" title="D62"></a>D62</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230824114234356.png" class="" title="image-20230824114234356"><h2 id="分析-42"><a href="#分析-42" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>do break / did / attract / remain</p></li><li><p><strong>断开：</strong>根据标点破折号和连接词when/because可以断开长难句</p></li></ul><h2 id="生词-41"><a href="#生词-41" class="headerlink" title="生词"></a>生词</h2><p>✅ break through to… 突破……</p><p>✅ summit of corporate power 公司权利高层</p><p>✅ summit n. (山等的)最高点，顶点；高层；高层会议</p><p>✅ corporate adj. 社团的, 法人的</p><p>✅ attract massive attention 吸引大量关注</p><p>✅ massive adj. 大量的，可观的，巨大的</p><p>✅ precisely adv. 确实，的确如此；精确地；恰好地</p><p>✅ precisely because… 正是因为……</p><p>✅ exception to the rule 规则中的例外</p><p>✅ exception n. 例外</p><h2 id="翻译-42"><a href="#翻译-42" class="headerlink" title="翻译"></a>翻译</h2><p>当女性确实打入公司权力高层时——例如，就像Sheryl Sandberg（雪莉•桑德伯格）最近在脸书所做的那样——她们会备受瞩目，而这恰恰是因为她们仍然属于规则中的例外</p><h2 id="语法重点-35"><a href="#语法重点-35" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong></p><p>通过点和连接词断开长难句。</p><ul><li><p>两个破折号中间是插入语，可以先断开不看；</p></li><li><p>通过连接词when、because断开长难句；</p></li></ul><p>✅ <strong>理清句子间逻辑关系</strong></p><p>想理清楚句子之间的逻辑关系，最重要的是找到关键的连接词，比如今天的句子中，主句之前的when表示时间，主句之后的because表示原因，中间插入语as引出方式状语从句。找到这些连接词，句子之间的关系就一目了然了。</p><h1 id="D63"><a href="#D63" class="headerlink" title="D63"></a>D63</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230824115408009.png" class="" title="image-20230824115408009"><h2 id="分析-43"><a href="#分析-43" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>arrive / register / start / will be / should report</p></li><li><p><strong>断开：</strong>通过标点破折号和连接词only if/and来断开长难句</p></li></ul><h2 id="生词-42"><a href="#生词-42" class="headerlink" title="生词"></a>生词</h2><p>✅ the jobless 失业者，没有工作的人<br>✅ CV = Curriculum Vitae（拉丁语） 个人履历<br>✅ register v. 登记，注册<br>✅ eligible adj. 有资格的，符合条件的<br>✅ be eligible for… 有……资格的，符合……条件的<br>✅ benefit n. 救济金，保险金；益处，好处<br>✅ fortnightly adv. 两星期一次地，每两周地</p><h2 id="翻译-43"><a href="#翻译-43" class="headerlink" title="翻译"></a>翻译</h2><p>失业者只有带着简历到求职中心，注册网上求职，并开始寻找工作，才有资格领取救济金。此后，他们必须每周而不是每两周汇报一次。</p><h2 id="语法重点-36"><a href="#语法重点-36" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong></p><p>if条件句中并列了三个动作（三件事），通过逗号和and进行连接，共享相同的主语the jobless。</p><p>✅ <strong>倒装</strong></p><p>当only位于句首，表示强调“只有/仅有的情况”，句子需要部分倒装。</p><h1 id="D64"><a href="#D64" class="headerlink" title="D64"></a>D64</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230825112507298.png" class="" title="image-20230825112507298"><h2 id="分析-44"><a href="#分析-44" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>motivated / were /was/ received</p></li><li><p><strong>断开：</strong>通过标点逗号和连接词what/that来断开长难句</p></li></ul><h2 id="生词-43"><a href="#生词-43" class="headerlink" title="生词"></a>生词</h2><p>✅ motivate v. 刺激，激发…的积极性；使有动机</p><p>✅ zeal n. 热心， 热情</p><p>✅ fundamental fairness 基本公平</p><p>✅ fundamental adj. 基本的；重要的，必要的</p><p>✅ taxpayer n. 纳税人</p><p>✅ claimant n. 申请人，要求者</p><p>✅ benefit  n.  救济金 , 补助金</p><h2 id="翻译-44"><a href="#翻译-44" class="headerlink" title="翻译"></a>翻译</h2><p>不过我们要明白，真正激励他的是对“基本公平”的热情——保护纳税人，控制开支并确保只有最需要帮助的申请者才能领到救济金。</p><h2 id="语法重点-37"><a href="#语法重点-37" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>分析标点</strong></p><p>并不是所有的标点都能用来断开长难句，因为有些标点前后连接的不是句子。但是大家要注意分析每个标点的用处。</p><p><strong>✅ 去修饰找核心</strong></p><p>主句的核心是：What motivated him… was his zeal…</p><p><strong>✅ 看懂核心后，再去看非核心</strong></p><p>看懂句子的核心后，再把去掉的非核心加回来，逐步看懂细节，例如：插入语、介词短语等。</p><h1 id="D65"><a href="#D65" class="headerlink" title="D65"></a>D65</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230825112938421.png" class="" title="image-20230825112938421"><h2 id="分析-45"><a href="#分析-45" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>is / had / has eamed</p></li><li><p><strong>断开：</strong>通过连接词who和分析主谓来断开长难句</p></li></ul><h2 id="生词-44"><a href="#生词-44" class="headerlink" title="生词"></a>生词</h2><p>✅ very adj. 恰好是，正是；特有的</p><p>✅ phrase n. 说法，术语；短语，词组</p><p>✅ jobseeker’s allowance 求职者津贴，找工作的人的津贴</p><p>✅ allowance n. 津贴，补助，零用钱</p><p>✅ fundamental adj. 基本的；重要的，必要的</p><p>✅ insurance n. 保险；保障，保障措施</p><p>✅ contribution n. 捐献，贡献</p><h2 id="翻译-45"><a href="#翻译-45" class="headerlink" title="翻译"></a>翻译</h2><p>甚至“求职者津贴”这一术语就是意在将失业者定义为不具有领取救济金这一基本权利的“求职者”，而这一权利是他或她通过缴纳国民保险所赢得的。</p><h2 id="语法重点-38"><a href="#语法重点-38" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong></p><p>断开长难句无外乎就三种办法：标点、连接词和分析主谓。随着大家对于断开的方法逐渐熟练，很多时候步骤是可以简化的，找到一对主谓直接断开即可。</p><h1 id="D66"><a href="#D66" class="headerlink" title="D66"></a>D66</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230825113734339.png" class="" title="image-20230825113734339"><h2 id="分析-46"><a href="#分析-46" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>is / insist/ isolates</p></li><li><p><strong>断开：</strong>通过标点符号逗号和连接词but和that来断开长难句</p></li></ul><h2 id="生词-45"><a href="#生词-45" class="headerlink" title="生词"></a>生词</h2><p>✅ pressure n. 压力</p><p>✅ profession n. 职业，行业</p><p>✅ opponent n. 反对者</p><p>✅ regulator n. 管理者，管理机构</p><p>✅ isolate v. 隔离，孤立</p><p>✅ ethically adv. 伦理上地，按照职业道德地</p><p>✅  ethnically  *adv.*人种上；民族上</p><h2 id="翻译-46"><a href="#翻译-46" class="headerlink" title="翻译"></a>翻译</h2><p>律师行业内部存在变革呼声，但监管人员中反对变革的人坚持认为，禁止外行涉足法律事务所有助于律师远离挣钱压力，而按照职业道德为委托人服务。</p><h2 id="语法重点-39"><a href="#语法重点-39" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>去修饰找核心</strong></p><p>所有介词短语都是句子非核心，可以先去掉不看。前面两个并列的主句的核心为：</p><ol><li><p>There is pressure…</p></li><li><p>but opponents…insist…</p></li></ol><p><strong>✅</strong> <strong>从句的主语</strong></p><p>that宾语从句中，主语是doing sth.的词组构成的，即keeping outsiders out of a law firm。</p><h1 id="D67"><a href="#D67" class="headerlink" title="D67"></a>D67</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230825114731996.png" class="" title="image-20230825114731996"><h2 id="分析-47"><a href="#分析-47" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>has been outgrown /must be living/ will be demonstrated / is ignored /comes</p></li><li><p><strong>断开：</strong>通过标点符号逗号，破折号和连接词of whom/as/who/when来断开长难句</p></li></ul><h2 id="生词-46"><a href="#生词-46" class="headerlink" title="生词"></a>生词</h2><p>✅ foundation n. 基金会</p><p>✅ recipient n. 接受者，领受者</p><p>✅ outgrow v. 长得太大而不适用（outgrown是过去分词）</p><p>✅ collaborative adj. 合作的，协作的</p><p>✅ demonstrate vt. 论证，证明；说明，演示</p><p>✅ inevitable adj. 不可避免的, 必然发生的</p><p>✅ row n. 争吵，争论，争议</p><p>✅ when it comes to + n./doing 当提及、涉及……的时候</p><p>✅ acknowledge v. 承认</p><h2 id="翻译-47"><a href="#翻译-47" class="headerlink" title="翻译"></a>翻译</h2><p>但是诺贝尔基金会的限定——每个奖项获奖人数不超三人，且必须都在世——早就因为现代研究的协作性质而不再适用了，这一点会在确认希格斯玻色子的发现时得到证明，因为届时必然会出现关于“哪位（科学家）遭到忽视”的结论。</p><h2 id="语法重点-40"><a href="#语法重点-40" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>定语从句</strong></p><p>准确找到本句中的定语从句：</p><ol><li><p>each of whom非限定性定语从句，前面加了限定词each of。</p></li><li><p>as非限定性定语从句，修饰前面整件事。</p></li></ol><p><strong>✅</strong> <strong>断开长难句</strong></p><p>根据标点和连接词断开长难句，注意不同的标点有不同的作用。如本句中的两个逗号表示插入语，一个破折号表示解释说明。</p><p><strong>✅</strong> <strong>名词词组</strong></p><p>名词前后会有多个修饰语同时进行修饰。</p><p>比如本句中的the Nobel Foundation’s limit of three recipients per prize，limit是核心名词，加上它前后的修饰语就构成了比较复杂的名词词组。</p><h1 id="D68"><a href="#D68" class="headerlink" title="D68"></a>D68</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230825115317411.png" class="" title="image-20230825115317411"><h2 id="分析-48"><a href="#分析-48" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>sent /identify/could be taken</p></li><li><p><strong>断开：</strong>通过连接词that来断开长难句</p></li></ul><h2 id="生词-47"><a href="#生词-47" class="headerlink" title="生词"></a>生词</h2><p>✅ congressional adj. 国会的，议会的</p><p>✅ Democrat n. 民主党人</p><p>✅ Republican n. 共和党人</p><p>✅ individual benefactor  个人捐助者</p><p>✅ maintain v. 维护；保持</p><p>✅ excellence n. 卓越地位；优秀，长处</p><p>✅ humanity n. 人文学科</p><p>✅ social scientific scholarship 社会科学学术研究、学术成就</p><h2 id="翻译-48"><a href="#翻译-48" class="headerlink" title="翻译"></a>翻译</h2><p>2010年，全国民主党及共和党要员向美国人文与科学院致函，要求其界定出能够被“联邦/州/地方政府、大学、基金会、教育工作者、私人捐助者等”采取的行动，以“维护国家在人文与社会科学学术研究及教育领域的卓越地位”。</p><h2 id="语法重点-41"><a href="#语法重点-41" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>平行并列结构</strong></p><p>大家要注意搞清楚平行并列结构，尤其是多个平行并列结构嵌套在一起（大平行里面还嵌套了小平行）的时候，一定要搞清楚什么跟什么平行并列才能把句子意思看懂，避免产生混淆。</p><p><strong>✅</strong> <strong>判断主句从句</strong><br>通过句子中的连接词that分清楚主句从句，并且能够捋顺意思。相信通过了我们每日长难句的学习大家已经很熟练了。</p><h1 id="D69"><a href="#D69" class="headerlink" title="D69"></a>D69</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230825115959193.png" class="" title="image-20230825115959193"><h2 id="分析-49"><a href="#分析-49" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>calls / improve</p></li><li><p><strong>断开：</strong>通过标点符号逗号和连接词that来断开长难句</p></li></ul><h2 id="生词-48"><a href="#生词-48" class="headerlink" title="生词"></a>生词</h2><p>✅ innovation n. 创新；革新</p><p>✅ competition n. 竞争，比赛，竞赛</p><p>✅ call for 呼吁</p><p>✅ investment n. 投资</p><p>✅ craft v. 精制</p><p>✅ coherent adj. 连贯的</p><p>✅ curricula n. 课程，课程体系（curriculum的复数）</p><p>✅ solve problems 解决问题</p><p>✅ communicate v. 交流，沟通</p><p>✅ challenge n. 挑战  v. 向……挑战；对……质疑</p><h2 id="翻译-49"><a href="#翻译-49" class="headerlink" title="翻译"></a>翻译</h2><p>为鼓励创新和竞争，报告呼吁加大科研投资、精心制定协调一致的课程以提供21世纪学生解决问题及有效沟通的能力、增加对教师的资助、鼓励学者应用自己的学识来应对当今的巨大挑战。</p><h2 id="语法重点-42"><a href="#语法重点-42" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>平行并列结构</strong><br>今天的句子其实是由多个平行并列结构构成的，其中包含两个简单的平行+一个非常难的平行（4个非常不像的名词词组平行并列，如下图的分叉）。</p><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/640" class="" title="img"><h1 id="D70"><a href="#D70" class="headerlink" title="D70"></a>D70</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230826113919457.png" class="" title="image-20230826113919457"><h2 id="分析-50"><a href="#分析-50" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>is /are/are consumed</p></li><li><p><strong>断开：</strong>通过标点符号逗号和连接词and /when来断开长难句</p></li></ul><h2 id="生词-49"><a href="#生词-49" class="headerlink" title="生词"></a>生词</h2><p>✅ charity n. 慈善；慈善团体</p><p>✅ pleasurable adj. 令人快乐的，愉快的，舒适的</p><p>✅ purchase v. 购买；获得</p><p>✅ luxury n. 奢侈，豪华；奢侈品</p><p>✅ enjoyable adj. 愉快的，快乐的</p><p>✅ consume v. 消费，消耗</p><p>✅ sparingly adv. 节俭地，爱惜地，谨慎使用地</p><h2 id="翻译-50"><a href="#翻译-50" class="headerlink" title="翻译"></a>翻译</h2><p>给他人买礼物或捐款给慈善机构通常比给自己买东西更令人愉悦，有节制地消费奢侈品才能带来最大快乐。</p><h2 id="语法重点-43"><a href="#语法重点-43" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>主语</strong></p><p>今天的句子的主语是由两个doing的词组并列构成。</p><p><strong>✅</strong> <strong>比较对象</strong></p><p>than后面的比较对象也是由doing的词组构成。</p><h1 id="D71"><a href="#D71" class="headerlink" title="D71"></a>D71</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230826114315631.png" class="" title="image-20230826114315631"><h2 id="分析-51"><a href="#分析-51" class="headerlink" title="分析"></a>分析</h2><ul><li><strong>找谓语动词：</strong>can be seen/enhances</li><li><strong>断开：</strong>通过标点符号逗号和连接词and 来断开长难句</li></ul><h2 id="生词-50"><a href="#生词-50" class="headerlink" title="生词"></a>生词</h2><p>✅ scarcity n. 缺乏；不足</p><p>✅ enhance v. 提高, 增加, 加强</p><h2 id="翻译-51"><a href="#翻译-51" class="headerlink" title="翻译"></a>翻译</h2><p>然而，全世界范围内，无论穷人还是富人中，都可以看到“将钱用到别人身上”和“感觉愉悦”的联系，且对大部分人来讲，稀缺性提升了大部分事物的愉悦感。</p><h2 id="语法重点-44"><a href="#语法重点-44" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>找主语</strong></p><p>无论主语有多么长多么复杂，只要先找到谓语动词，那么主语往前一找就会发现，很容易。前半句话的主语是：the link between feeling good and spending money on others（名词+介词短语）。</p><p><strong>✅</strong> <strong>去修饰找核心</strong></p><p>我一直在给大家强调，介词短语是句子的非核心，可以先去掉不看，前半句话的核心为：the link … can be seen…。</p><h1 id="D72"><a href="#D72" class="headerlink" title="D72"></a>D72</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230826114911793.png" class="" title="image-20230826114911793"><h2 id="分析-52"><a href="#分析-52" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>have amassed/shown/call/rate</p></li><li><p><strong>断开：</strong>通过连接词what/that来断开长难句</p></li></ul><h2 id="生词-51"><a href="#生词-51" class="headerlink" title="生词"></a>生词</h2><p>✅ social psychologist 社会心理学家</p><p>✅ amass v. 聚集，积累</p><p>✅ oceans of… 海量的，大量的</p><p>✅ above average effect 高于平均水平的效果</p><p>✅ illusory adj. 错觉的；虚假的</p><p>✅ superiority n. 优越，优越感</p><p>✅ illusory superiority 虚幻的优越感</p><p>✅ rate… as… 把……评估为……</p><p>✅ get on well with… 与……相处融洽</p><p>✅ statistical adj. 统计学的, 以数据表示的</p><p>✅ impossibility n. 不可能(性)；不可能的事</p><h2 id="翻译-52"><a href="#翻译-52" class="headerlink" title="翻译"></a>翻译</h2><p>社会心理学家就其所称的“高于平均水平效应”或“虚幻的优越感”收集了大量的研究，并指出，我们当中有70%的人自认为领导力高于常人，93%的人自认为驾驶能力高于常人，85%的人自认为与人相处的能力高于常人——这些显然都是统计学上的不可能事件。</p><h2 id="语法重点-45"><a href="#语法重点-45" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>平行并列结构</strong></p><p>句子中有三处平行并列结构，其中主语+have带出两个过去分词amassed和shown并列比较难掌握，大家要多多注意。</p><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/640" class="" title="img"><h1 id="D73"><a href="#D73" class="headerlink" title="D73"></a>D73</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230827213948531.png" class="" title="image-20230827213948531"><h2 id="分析-53"><a href="#分析-53" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>is/were thought/ become</p></li><li><p><strong>断开：</strong>通过标点符号逗号和连接词when/that 来断开长难句</p></li></ul><h2 id="生词-52"><a href="#生词-52" class="headerlink" title="生词"></a>生词</h2><p>✅ improvement n. 改进，改善<br>✅ performance n. 表现，性能，绩效<br>✅ be immune from… 对……免疫，不受……影响的<br>✅ automation n. 自动化(技术)<br>✅ threaten v. 威胁</p><h2 id="翻译-53"><a href="#翻译-53" class="headerlink" title="翻译"></a>翻译</h2><p>当技术在价格、性能方面大为改善时，那些曾经被认为对自动化免疫的工作也就会突然受到威胁。</p><h2 id="语法重点-46"><a href="#语法重点-46" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>断开长难句</strong></p><p>通过标点和连接词断开长难句：</p><ol><li><p>When引导时间状语从句；</p></li><li><p>that引导定语从句，就近修饰名词jobs。</p></li></ol><ol><li><p>When there is rapid improvement in…（in后面接名词、代词或者doing）<br>意思：“当有大幅度的改善……方面的时候”<br>例：When there is rapid improvement in English/learning English…</p></li><li><p>be immune from…意思：“不受……影响的”<br>例：I am immune from social epidemics.</p></li></ol><h1 id="D74"><a href="#D74" class="headerlink" title="D74"></a>D74</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230827214329225.png" class="" title="image-20230827214329225"><h2 id="分析-54"><a href="#分析-54" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>should look/ would have</p></li><li><p><strong>断开：</strong>通过标点符号逗号和连接词which来断开长难句</p></li></ul><h2 id="生词-53"><a href="#生词-53" class="headerlink" title="生词"></a>生词</h2><p>✅ look at 仔细考虑，研究；着眼于，看</p><p>✅ the rental environment 租赁环境</p><p>✅ have a significant impact on… 对……有重要影响</p><p>✅ registered providers 注册供应者</p><p>✅ registered adj. 注册的，登记过的</p><p>✅ fund v. 为…提供资金</p><p>✅ revenue n. 收入, 收益</p><h2 id="翻译-54"><a href="#翻译-54" class="headerlink" title="翻译"></a>翻译</h2><p>部长大臣们还应该考虑提高房屋租赁市场的稳定性，这将对注册供应者凭借营业收入为新建住房提供资金的能力产生重大影响。</p><h2 id="语法重点-47"><a href="#语法重点-47" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>定语从句的修饰</strong></p><p>遇到“逗号+which”非限定性定语从句有可能出现两种不同的修饰：正常情况下定语从句修饰前面的名词；也可以修饰前面的整句话。</p><p>大家可以采用“代入法”来判断具体是修饰一个单词还是修饰一句话。</p><p>本句中，which引导非限定性定语从句，修饰前面一整句话。</p><p><strong>✅</strong> <strong>词本无意，意由境生</strong></p><p>大家在理解句子时要注意“词本无意，意由境生”，如本句中“look at”不能翻译成”看“，而应该翻译成”仔细研究/着眼于……”。</p><h1 id="D75"><a href="#D75" class="headerlink" title="D75"></a>D75</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230827214827888.png" class="" title="image-20230827214827888"><h2 id="分析-55"><a href="#分析-55" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>are warning/is/should be</p></li><li><p><strong>断开：</strong>通过标点符号逗号和连接词when/that来断开长难句</p></li></ul><h2 id="生词-54"><a href="#生词-54" class="headerlink" title="生词"></a>生词</h2><p>✅ inequalityn. 不平等</p><p>✅ inherit  v. 继承，继承所得；世袭</p><p>✅ bizarre adj. 奇怪的，奇异的，奇特的</p><p>✅ wealthy aristocratic families 富有的贵族世家</p><p>✅ aristocratic  adj. 贵族的；贵族气派的</p><p>✅ symbolic adj. 象征的，象征性的</p><p>✅ modern democratic states 现代民主国家</p><p>✅ democratic  adj. 民主的；民主主义的</p><h2 id="翻译-55"><a href="#翻译-55" class="headerlink" title="翻译"></a>翻译</h2><p>在Thomas Piketty及其他一些经济学家纷纷就“日益加剧的不平等”和“日益增强的世袭财权”发出警告之时，富有的贵族世家竟然还是现代民主国家的核心象征，这非常怪异。</p><h2 id="语法重点-48"><a href="#语法重点-48" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>it is…that…</strong></p><p>遇到it is…that…的时候大家要警惕，它既有可能是强调句，也有可能是主语从句。因为强调句有2种东西不能强调：形容词和动词。</p><p>所以大家可以通过判断it is…that中间夹的内容，来判断是否是强调句。如今天的句子中bizarre是形容词，所以不是强调句，而是主语从句（后置），it为形式主语。</p><p><strong>✅</strong> <strong>分清主句和从句</strong></p><p>when引出定语从句，修饰名词a time，表示“在……的一段时间”；</p><p>that引出主语从句，句首的it为形式主语；</p><p>则余下的部分为主句：At a time…, it is bizarre…</p><p><strong>✅</strong> <strong>非谓语动词修饰名词</strong></p><p>句子中有三个非谓语动词rising、increasing和inherited，分别修饰名词inequality、power和wealth。</p><h1 id="D76"><a href="#D76" class="headerlink" title="D76"></a>D76</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230827215259924.png" class="" title="image-20230827215259924"><h2 id="分析-56"><a href="#分析-56" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>has asked/ upsets/ may search</p></li><li><p><strong>断开：</strong>通过连接词that/that来断开长难句</p></li></ul><h2 id="生词-55"><a href="#生词-55" class="headerlink" title="生词"></a>生词</h2><p>✅ refrain v. 抑制，节制，克制<br>✅ sweeping adj. 彻底的；广泛的；全面的<br>✅ upset v. 打乱，扰乱；推翻<br>✅ assumption n. 假定，假设<br>✅ authority n. 当局，官方<br>✅ search through… 搜查<br>✅ possession n. 财产，所有物<br>✅ suspect n. 嫌疑犯<br>✅ at the time of one’s arrest 在逮捕某人时</p><h2 id="翻译-56"><a href="#翻译-56" class="headerlink" title="翻译"></a>翻译</h2><p>加州已请求大法官们（克制住）不要做出全面性裁定，尤其是不要破坏“执法当局在实施逮捕时可搜查嫌疑人财物”这一古老假定。</p><h2 id="语法重点-49"><a href="#语法重点-49" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>名词+that从句</strong></p><p>名词+that从句有两种可能性：一种是<strong>定语从句</strong>，修饰限定名词的范围，可以往前翻译为“……样的（名词）”；另一种是<strong>同位语从句</strong>，解释说明名词的含义，顺着往下翻译。区别这两种，可以通过that是否作成分来判断，如下：</p><ol><li><p>第一个that从句中，that作成分（主语），所以是定语从句。</p></li><li><p>第二个that从句中，that不作成分，所以是同位语从句。</p></li></ol><h1 id="D77"><a href="#D77" class="headerlink" title="D77"></a>D77</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230827220638721.png" class="" title="image-20230827220638721"><h2 id="分析-57"><a href="#分析-57" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>compares/had to specify/must sort/applies</p></li><li><p><strong>断开：</strong>通过标点符号冒号/分号和连接词how来断开长难句</p></li></ul><h2 id="生词-56"><a href="#生词-56" class="headerlink" title="生词"></a>生词</h2><p>✅ compare… with… 比较……和……<br>✅ explosion n. 爆炸，爆发；激增<br>✅ accessibility n. 易接近，可达到<br>✅ digital information 数字信息<br>✅ establishment n. 建立, 确立<br>✅ automobile use 汽车使用<br>✅ virtual adj. 事实上的，实际上的；几乎的<br>✅ necessity n. 必要(性)；(迫切)需要；必需品<br>✅ specify vt. 具体指定；详细说明<br>✅ novel rules 新规矩，新规定<br>✅ domain n. 领域，范围<br>✅ passenger car 小客车<br>✅ sort out 解决</p><h2 id="翻译-57"><a href="#翻译-57" class="headerlink" title="翻译"></a>翻译</h2><p>法学教授Orin Kerr把“21世纪数学信息爆炸及其可获取性”与“20世纪汽车确立为生活必需“相较：当时法官们不得不为小轿车这一新兴私人领域明确新规；现在他们也必须解决第四修正案如何适用于数字信息的问题。</p><h2 id="语法重点-50"><a href="#语法重点-50" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅<strong>标点</strong></p><p>通过标点把握全局，分清楚句子前后之间的关系。如本句中第一个句子后面是冒号，说明后面是解释说明，第二个句子和第三个句子中间是分号，说明两个句子并列一起解释说明前面的第一个句子。</p><p><strong>✅</strong> <strong>去扩展找核心</strong></p><p>通过去修饰找核心，找到冒号之前的句子核心部分先看懂，再看非核心部分。</p><p>句子核心：</p><p><strong>Orin Kerr… compares the explosion and accessibility…</strong></p><h1 id="D78"><a href="#D78" class="headerlink" title="D78"></a>D78</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230829114915122.png" class="" title="image-20230829114915122"><h2 id="分析-58"><a href="#分析-58" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>had impelled/said/should be</p></li><li><p><strong>断开：</strong>通过标点符号逗号/冒号/引号和连接词whether和分析主谓（主谓主谓）来断开长难句</p></li></ul><h2 id="生词-57"><a href="#生词-57" class="headerlink" title="生词"></a>生词</h2><p>✅ impel v. 促成；驱使，推动；激励，敦促<br>✅ statistics board 统计委员会<br>✅ statistics n. 统计，统计数据，统计资料；统计学<br>✅ motivate v. 刺激；使有动机；激发……的积极性<br>✅ application n. 应用；申请，申请书<br>✅ data analysis 数据分析<br>✅ scientific research 科学研究<br>✅ overall drive 全面的努力<br>✅ drive n. 驱动力，积极性，干劲；压力，紧迫<br>✅ reproducibility n. 可复制性，重复能力，再现性</p><h2 id="翻译-58"><a href="#翻译-58" class="headerlink" title="翻译"></a>翻译</h2><p>当被问及是否因为某些特定的论文而促成了这次改变，麦克纳特说：“‘统计委员会’的创建是受对科学研究中统计和数据分析应用的广泛关切的驱动，也是《科学》为提升其发表研究的可复制性的全面努力的一部分。”</p><h2 id="语法重点-51"><a href="#语法重点-51" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>找到从句</strong> </p><p>通过标点、连接词和分析主谓可以断开长难句并找到3个从句，如下：</p><p>1 whether引导宾语从句，跟在及物动词asked后；</p><p>2 冒号引出宾语从句，省略了连接词；</p><p>3 we publish是省略了连接词的定语从句，修饰前面的名词research。</p><p><strong>✅</strong> <strong>平行并列结构</strong></p><p>找到两处and连接的平行并列结构，但是并列的内容不同。</p><p>1 and平行并列了名词statistics和名词词组data analysis；</p><p>2 and平行并列了was motivated…和is…谓语动词及之后的部分。</p><p><strong>✅</strong> <strong>去扩展找核心</strong></p><p>从句2的前半部分原本是：…The creation of the ‘statistics board’ was motivated by concerns broadly with the application of statistics and data analysis in scientific research…</p><p><strong>简化后，这句话的核心是：The creation…was motivated…</strong></p><h1 id="D79"><a href="#D79" class="headerlink" title="D79"></a>D79</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230829115353294.png" class="" title="image-20230829115353294"><h2 id="分析-59"><a href="#分析-59" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>will be/may want</p></li><li><p><strong>断开：</strong>通过连接词that来断开长难句</p></li></ul><h2 id="生词-58"><a href="#生词-58" class="headerlink" title="生词"></a>生词</h2><p>✅ impact n. 影响，效果，冲击力<br>✅ publication n. 出版物；出版，发表, 公布<br>✅ publishing places 出版单位<br>✅ model v. 模仿，以……为模版<br>✅ approach n. （处理问题的）方法，途径，态度</p><h2 id="翻译-59"><a href="#翻译-59" class="headerlink" title="翻译"></a>翻译</h2><p>这种影响不仅会体现在《科学》杂志上刊发的文章中，还有望会影响后来更多想要以《科学》杂志为榜样的出版机构。</p><h2 id="语法重点-52"><a href="#语法重点-52" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ <strong>如何找到平行结构</strong> </p><p>“三步法”找平行结构</p><p>第一步，找并列连词词组“not noly… but…”；</p><p>第二步，先往后看，找并列的什么形式；</p><p>第三步，再往前找一样的形式。</p><p>本句中，并列连词词组not only…but…平行并列了两个through引出的介词短语，即through the publications in Science itself和hopefully through a larger group of publishing places。</p><h1 id="D80"><a href="#D80" class="headerlink" title="D80"></a>D80</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230831120024517.png" class="" title="image-20230831120024517"><h2 id="分析-60"><a href="#分析-60" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>was/knew/went/thought/inquired/arrived</p></li><li><p><strong>断开：</strong>通过标点符号逗号，以及连接词how/what/how/that/how来断开长难句</p></li></ul><h2 id="生词-59"><a href="#生词-59" class="headerlink" title="生词"></a>生词</h2><p>✅ astonishing adj. 使人吃惊的，惊人的</p><p>✅ revelation n. 揭发，暴露，泄露</p><p>✅ go on 继续进行，发生</p><p>✅ inquire v. 打听，询问；查问</p><h2 id="翻译-60"><a href="#翻译-60" class="headerlink" title="翻译"></a>翻译</h2><p>其中揭露的惊人真相之一是丽贝卡•布鲁克斯对于其新闻编辑室中所发生的事竟几乎毫不知情，她几乎没想过要去问，而且事实上她从未询问过这些新闻报道的题材到底是怎么来的。</p><h2 id="语法重点-53"><a href="#语法重点-53" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ 平行并列结构</p><p>通过and和前面的逗号，找到两个how表语从句和the fact名词（后接从句）构成平行并列结构。</p><p>⚠️ 注意：表语从句属于名词性从句中的一种，可以当名词来用，因此两个表语从句与名词构成平行并列结构是可以的；但这种情况比较少见，大家了解即可。</p><p>✅ 嵌套结构</p><p>第一个how表语从句中嵌套what（介宾）宾语从句。</p><p>the fact后that引出的同位语从句中嵌套how（动宾）宾语从句。</p><p>✅ how的用法</p><p>⚠️ 注意句中的三个how连接词的含义：</p><p>how不仅可以表示程度，“多么”；也可以表示方式方法，“怎么样”。</p><h1 id="D81"><a href="#D81" class="headerlink" title="D81"></a>D81</h1><img src="/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230902113954354.png" class="" title="image-20230902113954354"><h2 id="分析-61"><a href="#分析-61" class="headerlink" title="分析"></a>分析</h2><ul><li><p><strong>找谓语动词：</strong>measured/is/were/found/is supposed</p></li><li><p><strong>断开：</strong>通过标点符号逗号，以及连接词which/while/（and）while/what来断开长难句</p></li></ul><h2 id="生词-60"><a href="#生词-60" class="headerlink" title="生词"></a>生词</h2><p>✅ measure v. 测量；估量；权衡</p><p>✅ cortisol n. 皮质醇</p><p>✅ a stress marker 压力的一种标志、标记</p><p>✅ be supposed to do/be… 应该做/是……，被认为做/是……</p><p>✅ a place of refuge 一处避难所</p><h2 id="翻译-61"><a href="#翻译-61" class="headerlink" title="翻译"></a>翻译</h2><p>研究者分别对人们在工作和家里的皮质醇（精神压力的一种标志）进行了检测，结果显示，在人们普遍认为是避风港的环境中，皮质醇的含量更高</p><h2 id="语法重点-54"><a href="#语法重点-54" class="headerlink" title="语法重点"></a>语法重点</h2><p>✅ 平行并列结构</p><ul><li>第一处and平行并列了两个while时间状语从句；</li><li>第二处and平行并列了两个谓语动词measured和found及其后的成分，也就是主语researchers发出了两个动作：measured…和found…。</li></ul><p>✅ 理清从句</p><ul><li>which引导非限制性定语从句，修饰people’s cortisol；</li><li>两个while引导时间状语从句；</li><li>what引导（介宾）宾语从句；</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;D19&quot;&gt;&lt;a href=&quot;#D19&quot; class=&quot;headerlink&quot; title=&quot;D19&quot;&gt;&lt;/a&gt;D19&lt;/h1&gt;&lt;img src=&quot;/2023/06/30/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%8F%A5/image-20230630105821422.png&quot; class title=&quot;image-20230630105821422&quot;&gt;

&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;✅ &lt;strong&gt;通过谓语动词的数量判断简单句：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本句中只有一个谓语has been，所以是简单句（一件事），不需要在断开。&lt;/p&gt;</summary>
    
    
    
    <category term="考研" scheme="https://aiden-a.gitee.io/categories/%E8%80%83%E7%A0%94/"/>
    
    
  </entry>
  
  <entry>
    <title>搞定数据结构</title>
    <link href="https://aiden-a.gitee.io/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/"/>
    <id>https://aiden-a.gitee.io/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/</id>
    <published>2023-06-29T08:15:19.000Z</published>
    <updated>2023-10-12T13:16:15.266Z</updated>
    
    <content type="html"><![CDATA[<h1 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h1><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629174433552.png" class="" title="image-20230629174433552"><h2 id="顺序表"><a href="#顺序表" class="headerlink" title="顺序表"></a>顺序表</h2><h3 id="顺序表的结构体定义及初始化"><a href="#顺序表的结构体定义及初始化" class="headerlink" title="顺序表的结构体定义及初始化"></a>顺序表的结构体定义及初始化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//静态顺序表</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MaxSize 10</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data[MaxSize];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化一个静态顺序表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(SqList &amp;L)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MaxSize;i++)&#123;</span><br><span class="line">        L.data[i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    L.length=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//动态顺序表    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> InitSize 10</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> *data;</span><br><span class="line">    <span class="keyword">int</span> MaxSize;<span class="comment">//顺序表最大容量</span></span><br><span class="line">    <span class="keyword">int</span> length;<span class="comment">//顺序表当前长度</span></span><br><span class="line">&#125;SeqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化一个动态顺序表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(SeqList &amp;L)</span></span>&#123;</span><br><span class="line">    L.data=(<span class="keyword">int</span> *)<span class="built_in">malloc</span>(InitSize*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    L.length=<span class="number">0</span>;</span><br><span class="line">  L.MaxSize=InitSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//增加动态数组的长度</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IncreaseSize</span><span class="params">(SeqList &amp;L,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *p=L.data;</span><br><span class="line">    L.data=(<span class="keyword">int</span> *)<span class="built_in">malloc</span>((InitSize+len)*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    <span class="comment">//将数据复制到新区域</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L.length;i++)&#123;</span><br><span class="line">        L.data[i]=p[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//顺序表最大长度增加len</span></span><br><span class="line">    L.MaxSize=L.MaxSize+len;</span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="顺序表插入-顺序表中第i个位置插入元素e"><a href="#顺序表插入-顺序表中第i个位置插入元素e" class="headerlink" title="顺序表插入-顺序表中第i个位置插入元素e"></a>顺序表插入-顺序表中第i个位置插入元素e</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顺序表中第i个位置插入元素e</span></span><br><span class="line"><span class="comment">//因为线性表长为 L.length 删除只能删除1到L.length上的东西</span></span><br><span class="line"><span class="comment">//插入可以插入第一个位置，也可以插入最后一个的后面所以是1~Llength+1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//顺序表中第i个位置插入元素e</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListInsert</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> i, <span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//判断i的范围是否有效</span></span><br><span class="line">    <span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L.length + <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//当前存储空间已满，不能插入</span></span><br><span class="line">    <span class="keyword">if</span> (L.length &gt;= MaxSize) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将i位置元素依次后移</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = L.length; j &gt;= i; j--) &#123;</span><br><span class="line">        L.data[j] = L.data[j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将e插入到i位置</span></span><br><span class="line">    L.data[i<span class="number">-1</span>] = e;</span><br><span class="line">    L.length += <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序表删除-顺序表中删除第i个位置的元素"><a href="#顺序表删除-顺序表中删除第i个位置的元素" class="headerlink" title="顺序表删除-顺序表中删除第i个位置的元素"></a>顺序表删除-顺序表中删除第i个位置的元素</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顺序表中删除第i个位置的元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListDelete</span><span class="params">(SqList&amp; L, <span class="keyword">int</span> i, <span class="keyword">int</span>&amp; e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    e = L.data[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; L.length; j++) &#123;</span><br><span class="line">        L.data[j - <span class="number">1</span>] = L.data[j];</span><br><span class="line">    &#125;</span><br><span class="line">    L.length--;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序表查找-查找顺序表中值为e的数据元素所在位置（按值查找）"><a href="#顺序表查找-查找顺序表中值为e的数据元素所在位置（按值查找）" class="headerlink" title="顺序表查找-查找顺序表中值为e的数据元素所在位置（按值查找）"></a>顺序表查找-查找顺序表中值为e的数据元素所在位置（按值查找）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找顺序表中值为e的数据元素所在位置</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Search_e</span><span class="params">(SqList L, <span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; L.length; k++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L.data[k] == e) &#123;</span><br><span class="line">            <span class="keyword">return</span> k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序表查找-查找顺序表中第i个位置的数据元素值-按位查找-（简单基本不考）"><a href="#顺序表查找-查找顺序表中第i个位置的数据元素值-按位查找-（简单基本不考）" class="headerlink" title="顺序表查找-查找顺序表中第i个位置的数据元素值(按位查找)（简单基本不考）"></a>顺序表查找-查找顺序表中第i个位置的数据元素值(按位查找)（简单基本不考）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找顺序表中第i个位置的数据元素值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Get_i</span><span class="params">(SqList L, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= <span class="number">1</span> &amp;&amp; i &lt;= L.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> L.data[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序表合并-两个有序顺序表合并成为一个新的顺序表C-常考）"><a href="#顺序表合并-两个有序顺序表合并成为一个新的顺序表C-常考）" class="headerlink" title="顺序表合并-两个有序顺序表合并成为一个新的顺序表C (常考）"></a>顺序表合并-两个有序顺序表合并成为一个新的顺序表C (常考）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Merge</span><span class="params">(SqList A, SqList B, SqList&amp; C)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (A.length + B.length &gt; C.MaxSize) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; A.length &amp;&amp; j &lt; B.length) &#123;</span><br><span class="line">        <span class="keyword">if</span> (A.data[i] &lt; B.data[j]) &#123;</span><br><span class="line">            C.data[k] = A.data[i];</span><br><span class="line">            k++;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            C.data[k] = B.data[j];</span><br><span class="line">            k++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; A.length) &#123;</span><br><span class="line">        C.data[k] = A.data[i];</span><br><span class="line">        k++;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (j &lt; B.length) &#123;</span><br><span class="line">        C.data[k] = B.data[j];</span><br><span class="line">        k++;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    C.length = k;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><h3 id="单链表的结构体定义"><a href="#单链表的结构体定义" class="headerlink" title="单链表的结构体定义"></a>单链表的结构体定义</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;LNode ,*LinkList;  </span><br></pre></td></tr></table></figure><h3 id="单链表的查找-带头结点"><a href="#单链表的查找-带头结点" class="headerlink" title="单链表的查找-带头结点"></a>单链表的查找-带头结点</h3><h4 id="单链表的按位查找"><a href="#单链表的按位查找" class="headerlink" title="单链表的按位查找"></a>单链表的按位查找</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LNode* <span class="title">Search_i</span><span class="params">(LinkList L, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">1</span>;</span><br><span class="line">    LNode* p = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span> &amp;&amp; k &lt; i) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回查找到的节点</span></span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="单链表的按值查找"><a href="#单链表的按值查找" class="headerlink" title="单链表的按值查找"></a>单链表的按值查找</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LNode* <span class="title">Search_e</span><span class="params">(LinkList L, <span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">    LNode* p = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span> &amp;&amp; p-&gt;data != e) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回查找到的节点</span></span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单链表的修改"><a href="#单链表的修改" class="headerlink" title="单链表的修改"></a>单链表的修改</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单链表的修改</span></span><br><span class="line"><span class="comment">//链表内容的修改,在链表中修改值为x的元素变为k</span></span><br><span class="line"><span class="function">LinkList <span class="title">List_Replace</span><span class="params">(LinkList&amp; L, <span class="keyword">int</span> x, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    LNode* p = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;data == x) &#123;</span><br><span class="line">            p-&gt;data = k;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单链表的遍历输出-带头节点"><a href="#单链表的遍历输出-带头节点" class="headerlink" title="单链表的遍历输出-带头节点"></a>单链表的遍历输出-带头节点</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//遍历链表（带头结点）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ListVisit</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">    LNode* p = L-&gt;next;</span><br><span class="line">    <span class="comment">//p为遍历指针</span></span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, p-&gt;data);</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单链表的插入"><a href="#单链表的插入" class="headerlink" title="单链表的插入"></a>单链表的插入</h3><h4 id="头插法建立单链表"><a href="#头插法建立单链表" class="headerlink" title="头插法建立单链表"></a>头插法建立单链表</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629171452930.png" class="" title="image-20230629171452930"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LinkList <span class="title">List_HeadInsert</span><span class="params">(LinkList&amp; L)</span> </span>&#123;</span><br><span class="line">    L = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">    <span class="comment">//头节点的next指针指向NULL必要</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>; </span><br><span class="line">    <span class="comment">//s为指向每次新创建节点的指针</span></span><br><span class="line">    LNode* s;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    <span class="keyword">while</span> (x != <span class="number">-1</span>) &#123;</span><br><span class="line">        s=(LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">        s-&gt;data = x;</span><br><span class="line">        <span class="comment">//头插法核心代码</span></span><br><span class="line">        s-&gt;next = L-&gt;next;</span><br><span class="line">        L-&gt;next = s;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="尾插法建立单链表"><a href="#尾插法建立单链表" class="headerlink" title="尾插法建立单链表"></a>尾插法建立单链表</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629171509734.png" class="" title="image-20230629171509734"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LinkList <span class="title">List_TailInsert</span><span class="params">(LinkList&amp; L)</span> </span>&#123;</span><br><span class="line">    L=(LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">    <span class="comment">//这里头节点的next指针是否指向NULL可有可无,尾部新插一个元素就没有null的事了</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">//r指针为指向最后一个节点的指针</span></span><br><span class="line">    LNode* s, * r = L;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    <span class="keyword">while</span> (x != <span class="number">-1</span>) &#123;</span><br><span class="line">        s=(LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">        s-&gt;data = x;</span><br><span class="line">        <span class="comment">//尾插法核心代码</span></span><br><span class="line">        r-&gt;next = s;</span><br><span class="line">        r = s;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建完成后尾部结点指针记得指向NULL</span></span><br><span class="line">    r-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="位置插法"><a href="#位置插法" class="headerlink" title="位置插法"></a>位置插法</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629170425171.png" class="" title="image-20230629170425171"><h3 id="单链表的删除"><a href="#单链表的删除" class="headerlink" title="单链表的删除"></a>单链表的删除</h3><h4 id="头删除"><a href="#头删除" class="headerlink" title="(头删除)"></a>(头删除)</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629170545698.png" class="" title="image-20230629170545698"><h4 id="尾删除"><a href="#尾删除" class="headerlink" title="(尾删除)"></a>(尾删除)</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629170909813.png" class="" title="image-20230629170909813"><h4 id="位置删除"><a href="#位置删除" class="headerlink" title="(位置删除)"></a>(位置删除)</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629171151377.png" class="" title="image-20230629171151377"><h3 id="单链表的合并"><a href="#单链表的合并" class="headerlink" title="单链表的合并"></a>单链表的合并</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//两个有序单链表合并为一个有序单链表</span></span><br><span class="line"><span class="function">LinkList <span class="title">MergeList</span><span class="params">(LinkList&amp; A, LinkList&amp; B)</span> </span>&#123;</span><br><span class="line">    LNode* p = A-&gt;next, * q = B-&gt;next;</span><br><span class="line">    <span class="comment">//防断链指针r(一想到头插法就需想到定义防断链指针）</span></span><br><span class="line">    LNode* r;</span><br><span class="line">    <span class="comment">//头节点A先断开</span></span><br><span class="line">    A-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span> &amp;&amp; q != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;data &lt;= q-&gt;data) &#123;</span><br><span class="line">            r = p-&gt;next;</span><br><span class="line">            <span class="comment">//头插法核心代码</span></span><br><span class="line">            p-&gt;next = A-&gt;next;</span><br><span class="line">            A-&gt;next = p;</span><br><span class="line">            p = r;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            r = q-&gt;next;</span><br><span class="line">            q-&gt;next = A-&gt;next;</span><br><span class="line">            A-&gt;next = q;</span><br><span class="line">            q = r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//只写一套代码实现剩余部分的插入</span></span><br><span class="line">    <span class="keyword">if</span> (q != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = q;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        r=p-&gt;next;</span><br><span class="line">        p-&gt;next=A-&gt;next;</span><br><span class="line">        A-&gt;next = p;</span><br><span class="line">        p = r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(B);</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单链表的反转"><a href="#单链表的反转" class="headerlink" title="单链表的反转"></a>单链表的反转</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629173938311.png" class="" title="image-20230629173938311"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单链表的就地逆置（头插法实现）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reverse</span><span class="params">(LinkList&amp; L)</span></span>&#123;</span><br><span class="line">    <span class="comment">//p指向第一个节点(即从第一个节点开始遍历),r指针为防断链指针(断链了之后还能找到下个节点的位置)</span></span><br><span class="line">    LNode* p = L-&gt;next, * r;</span><br><span class="line">    <span class="comment">//头节点先和后边的节点先断开</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        r = p-&gt;next;</span><br><span class="line">        p-&gt;next = L-&gt;next;</span><br><span class="line">        L-&gt;next = p;</span><br><span class="line">        p = r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态链表"><a href="#静态链表" class="headerlink" title="静态链表"></a>静态链表</h3><p>C语言具有指针能力，可以非常容易地操作内存中的地址和数据。但如早期的编程语言并没有指针，链表结构应该怎么样实现呢？</p><p>所以人们通过数组来代替指针进而描述单链表。通过让数组元素由data和cur两个数据域组成，也就是说每一个数组下标都对应一个data和cur。data域用来存放数据元素，cur则相当于单链表中的next指针，存放该元素的后继在数组中的下标，通常把cur叫做游标，这种用数组来描述单链表的方法称作游标实现法。</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/63a004b6bc24430a8c846bdbcfc600b4.png" class="" title="在这里插入图片描述"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Maxsize 10<span class="comment">//定义静态链表的最大长度</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>//定义静态链表结构类型</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ElemType data;</span><br><span class="line"><span class="keyword">int</span> next;<span class="comment">//游标：为下一个数据元素的数组下标，类似于指针</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testSLinkList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> <span class="title">a</span>[<span class="title">Maxsize</span>];</span><span class="comment">//数组a作为静态链表</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/m0_64365419/article/details/126431032">https://blog.csdn.net/m0_64365419/article/details/126431032</a></p><h3 id="双链表的结构体定义"><a href="#双链表的结构体定义" class="headerlink" title="双链表的结构体定义"></a>双链表的结构体定义</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">line</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">line</span> *<span class="title">pre</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">line</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;line,*a</span><br><span class="line"><span class="comment">//分别表示该节点的前驱(pre),后继(next),以及当前数据(data)</span></span><br></pre></td></tr></table></figure><h3 id="双链表的插入"><a href="#双链表的插入" class="headerlink" title="双链表的插入"></a>双链表的插入</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629173445050.png" class="" title="image-20230629173445050"><h3 id="双链表的删除"><a href="#双链表的删除" class="headerlink" title="双链表的删除"></a>双链表的删除</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629173745601.png" class="" title="image-20230629173745601"><h3 id="循环链表-一般不考"><a href="#循环链表-一般不考" class="headerlink" title="循环链表(一般不考)"></a>循环链表(一般不考)</h3><h4 id="循环单链表"><a href="#循环单链表" class="headerlink" title="循环单链表"></a>循环单链表</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629174242292.png" class="" title="image-20230629174242292"><h4 id="循环双链表"><a href="#循环双链表" class="headerlink" title="循环双链表"></a>循环双链表</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629174302085.png" class="" title="image-20230629174302085"><h1 id="栈和队列"><a href="#栈和队列" class="headerlink" title="栈和队列"></a>栈和队列</h1><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230701164910718.png" class="" title="image-20230701164910718"><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><h3 id="栈的定义"><a href="#栈的定义" class="headerlink" title="栈的定义"></a>栈的定义</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230701171911904.png" class="" title="image-20230701171911904"><h3 id="栈的常考题"><a href="#栈的常考题" class="headerlink" title="栈的常考题"></a>栈的常考题</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230701172025480.png" class="" title="image-20230701172025480"><h3 id="栈的顺序存储实现"><a href="#栈的顺序存储实现" class="headerlink" title="栈的顺序存储实现"></a>栈的顺序存储实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MaxSize 50</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> data[MaxSize];<span class="comment">//存放栈的元素</span></span><br><span class="line">    <span class="keyword">int</span> top;<span class="comment">//栈顶指针</span></span><br><span class="line">&#125;Stack;</span><br></pre></td></tr></table></figure><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230701172121201.png" class=""><h3 id="栈的链式存储实现（了解即可）"><a href="#栈的链式存储实现（了解即可）" class="headerlink" title="栈的链式存储实现（了解即可）"></a>栈的链式存储实现（了解即可）</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230701172138160.png" class="" title="image-20230701172138160"><h3 id="栈的基本操作"><a href="#栈的基本操作" class="headerlink" title="栈的基本操作"></a>栈的基本操作</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230701171932107.png" class="" title="image-20230701171932107"><h4 id="栈的初始化"><a href="#栈的初始化" class="headerlink" title="栈的初始化"></a>栈的初始化</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//栈的初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitStack</span><span class="params">(Stack&amp; S)</span> </span>&#123;</span><br><span class="line">    S.top = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="栈的判空"><a href="#栈的判空" class="headerlink" title="栈的判空"></a>栈的判空</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//栈的判空</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsEmpty</span><span class="params">(Stack S)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (S.top == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="进栈操作"><a href="#进栈操作" class="headerlink" title="进栈操作"></a>进栈操作</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进栈操作</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Push</span><span class="params">(Stack&amp; S, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (S.top == MaxSize - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//以下两步可直接写成 S.data[++S.top]=x;</span></span><br><span class="line">    S.top++;</span><br><span class="line">    S.data[S.top] = x;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="出栈操作"><a href="#出栈操作" class="headerlink" title="出栈操作"></a>出栈操作</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//出栈操作</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pop</span><span class="params">(Stack&amp; S, <span class="keyword">int</span>&amp; x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (S.top == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//以下两步可直接写成 x=S.data[S.top--]</span></span><br><span class="line">    x = S.data[S.top];</span><br><span class="line">    S.top--;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="读取栈顶元素"><a href="#读取栈顶元素" class="headerlink" title="读取栈顶元素"></a>读取栈顶元素</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取栈顶元素</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetTop</span><span class="params">(Stack S, <span class="keyword">int</span>&amp; x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (S.top == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x = S.data[S.top];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="共享栈"><a href="#共享栈" class="headerlink" title="共享栈"></a>共享栈</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230701172253882.png" class="" title="image-20230701172253882"><h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2><h3 id="队列的定义"><a href="#队列的定义" class="headerlink" title="队列的定义"></a>队列的定义</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230702155122252.png" class="" title="image-20230702155122252"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230702155300133.png" class="" title="image-20230702155300133"><h3 id="队列的基本概念"><a href="#队列的基本概念" class="headerlink" title="队列的基本概念"></a>队列的基本概念</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230702182701515.png" class="" title="image-20230702182701515"><h3 id="队列的基本操作"><a href="#队列的基本操作" class="headerlink" title="队列的基本操作"></a>队列的基本操作</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230702155345403.png" class="" title="image-20230702155345403"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230702155419068.png" class="" title="image-20230702155419068"><h4 id="结构体定义"><a href="#结构体定义" class="headerlink" title="结构体定义"></a>结构体定义</h4><h5 id="队列的顺序存储实现"><a href="#队列的顺序存储实现" class="headerlink" title="队列的顺序存储实现"></a>队列的顺序存储实现</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MaxSize 50</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> data[MaxSize];</span><br><span class="line">    <span class="keyword">int</span>  front, rear;<span class="comment">//头尾指针</span></span><br><span class="line">&#125;Queue;</span><br></pre></td></tr></table></figure><h5 id="队列的链式存储实现"><a href="#队列的链式存储实现" class="headerlink" title="队列的链式存储实现"></a>队列的链式存储实现</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230702170910510.png" class="" title="image-20230702170910510"><h4 id="创建空队列"><a href="#创建空队列" class="headerlink" title="创建空队列"></a>创建空队列</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//队列初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitQueue</span><span class="params">(Queue&amp; Q)</span> </span>&#123;</span><br><span class="line">    Q.front = <span class="number">0</span>;</span><br><span class="line">    Q.rear = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="判断为空"><a href="#判断为空" class="headerlink" title="判断为空"></a>判断为空</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断为空</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsEmpty</span><span class="params">(Queue Q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Q.front == Q.rear) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="入队"><a href="#入队" class="headerlink" title="入队"></a>入队</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//入队操作</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EnQueue</span><span class="params">(Queue&amp; Q, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//入队操作尾指针</span></span><br><span class="line">    <span class="keyword">if</span> (Q.rear == MaxSize) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Q.data[Q.rear] = x;</span><br><span class="line">    Q.rear++;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="出队"><a href="#出队" class="headerlink" title="出队"></a>出队</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//出队操作</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DeQueue</span><span class="params">(Queue&amp; Q, <span class="keyword">int</span>&amp; x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Q.front == Q.rear) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    x = Q.data[Q.front];</span><br><span class="line">    Q.front++;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="取头部元素"><a href="#取头部元素" class="headerlink" title="取头部元素"></a>取头部元素</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x=Q.data[Q.front]</span><br></pre></td></tr></table></figure><h4 id="取尾部元素"><a href="#取尾部元素" class="headerlink" title="取尾部元素"></a>取尾部元素</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x=Q.data[Q.rear]</span><br></pre></td></tr></table></figure><h2 id="循环队列"><a href="#循环队列" class="headerlink" title="循环队列"></a>循环队列</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230702171518824.png" class="" title="image-20230702171518824"><h4 id="循环队列的顺序表中，为什么要空一个位置"><a href="#循环队列的顺序表中，为什么要空一个位置" class="headerlink" title="循环队列的顺序表中，为什么要空一个位置"></a>循环队列的顺序表中，为什么要空一个位置</h4><p>1、引入循环队列的目的：为了充分利用向量空间，克服假溢出的现象</p><p>2、循环队列的概念：将向量空间想象为一个首尾相接的圆环，并称这种向量为。循环向量。存储在其中的队列称为循环队列（Circular Queue）。简单来讲，循环队列就把顺序队列尾相连，把存储队列元素的表从逻辑上看成一个环。</p><p><strong>3、明确两个指针：一个指向队列头front,一个指向队列尾rear。在循环队列中，当队列为空时，有front=rear；而当所有队列空间全占满时，也有front=rear。所以，为了区别这两种情况，规定循环队列最多只能有MaxSize-1个队列元素（也就是空一个位置），当循环队列中只剩下一个空存储单元时，队列就已经满了。因此，队列判空的条件是front=rear，而队列判满的条件是front=（rear+1)%MaxSize。</strong></p><p><strong>综上：这个空位置，主要就是为了用来区分队空与队满情况的。</strong></p><h3 id="结构体定义-1"><a href="#结构体定义-1" class="headerlink" title="结构体定义"></a>结构体定义</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230702171759592.png" class="" title="image-20230702171759592"><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><h4 id="入队-1"><a href="#入队-1" class="headerlink" title="入队"></a>入队</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//入队操作</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EnQueue</span><span class="params">(Queue&amp; Q, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//判断队列是否已满</span></span><br><span class="line">    <span class="keyword">if</span> ((Q.rear + <span class="number">1</span>) % MaxSize == Q.front) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Q.data[Q.rear] = x;</span><br><span class="line">    Q.rear = (Q.rear + <span class="number">1</span>) % MaxSize;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="出队-1"><a href="#出队-1" class="headerlink" title="出队"></a>出队</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//出队操作</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DeQueue</span><span class="params">(Queue&amp; Q, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//判断队列是否为空</span></span><br><span class="line">    <span class="keyword">if</span> (Q.front == Q.rear)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x = Q.data[Q.front];</span><br><span class="line">    Q.front = (Q.front + <span class="number">1</span>) % MaxSize;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="双端队列"><a href="#双端队列" class="headerlink" title="双端队列"></a>双端队列</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703154357441.png" class="" title="image-20230703154357441"><h2 id="栈的应用"><a href="#栈的应用" class="headerlink" title="栈的应用"></a>栈的应用</h2><h3 id="栈在括号匹配中的应用"><a href="#栈在括号匹配中的应用" class="headerlink" title="栈在括号匹配中的应用"></a>栈在括号匹配中的应用</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703161122905.png" class="" title="image-20230703161122905"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703155443525.png" class="" title="image-20230703155443525"><h3 id="栈在表达式求值中的应用"><a href="#栈在表达式求值中的应用" class="headerlink" title="栈在表达式求值中的应用"></a>栈在表达式求值中的应用</h3><h4 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703161146106.png" class="" title="image-20230703161146106"><h4 id="运算法则"><a href="#运算法则" class="headerlink" title="运算法则"></a>运算法则</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703161207795.png" class="" title="image-20230703161207795"><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703160454101.png" class="" title="image-20230703160454101"><h4 id="中缀转后缀练习"><a href="#中缀转后缀练习" class="headerlink" title="中缀转后缀练习"></a>中缀转后缀练习</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703161314284.png" class="" title="image-20230703161314284"><h4 id="后缀表达式的计算"><a href="#后缀表达式的计算" class="headerlink" title="后缀表达式的计算"></a>后缀表达式的计算</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703161400081.png" class="" title="image-20230703161400081"><h4 id="栈实现过程"><a href="#栈实现过程" class="headerlink" title="栈实现过程"></a>栈实现过程</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703161533489.png" class="" title="image-20230703161533489"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703161633254.png" class="" title="image-20230703161633254"><h3 id="函数调用栈"><a href="#函数调用栈" class="headerlink" title="函数调用栈"></a>函数调用栈</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703162934344.png" class="" title="image-20230703162934344"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703163002820.png" class="" title="image-20230703163002820"><h2 id="队列的应用"><a href="#队列的应用" class="headerlink" title="队列的应用"></a>队列的应用</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703163623401.png" class="" title="image-20230703163623401"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703163637148.png" class="" title="image-20230703163637148"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230703163650387.png" class="" title="image-20230703163650387"><h1 id="串"><a href="#串" class="headerlink" title="串"></a>串</h1><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706150713045.png" class="" title="image-20230706150713045"><h2 id="串的概念"><a href="#串的概念" class="headerlink" title="串的概念"></a>串的概念</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706150916081.png" class="" title="image-20230706150916081"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706151419337.png" class="" title="image-20230706151419337"><h2 id="串的存储（了解）"><a href="#串的存储（了解）" class="headerlink" title="串的存储（了解）"></a>串的存储（了解）</h2><h3 id="顺序存储"><a href="#顺序存储" class="headerlink" title="顺序存储"></a>顺序存储</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706172254003.png" class="" title="image-20230706172254003"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> ch[MAXLEN + <span class="number">1</span>];<span class="comment">//存储串的一维数组，ch[0]~ch[255],共256个</span></span><br><span class="line"><span class="keyword">int</span> length;<span class="comment">//串的当前长度</span></span><br><span class="line">&#125;String;</span><br></pre></td></tr></table></figure><h3 id="链式存储"><a href="#链式存储" class="headerlink" title="链式存储"></a>链式存储</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706172322011.png" class="" title="image-20230706172322011"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;LinkStrNode;</span><br><span class="line"><span class="keyword">typedef</span> LinkStrNode * LinkString;    <span class="comment">//链式串的指针</span></span><br></pre></td></tr></table></figure><h2 id="串的基本操作"><a href="#串的基本操作" class="headerlink" title="串的基本操作"></a>串的基本操作</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706151451497.png" class="" title="image-20230706151451497"><h3 id="常见操作（太简单，一般不考）"><a href="#常见操作（太简单，一般不考）" class="headerlink" title="常见操作（太简单，一般不考）"></a>常见操作（太简单，一般不考）</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706171851916.png" class="" title="image-20230706171851916"><h2 id="普通的串的模式匹配算法"><a href="#普通的串的模式匹配算法" class="headerlink" title="普通的串的模式匹配算法"></a>普通的串的模式匹配算法</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706152221672.png" class="" title="image-20230706152221672"><h3 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706152556074.png" class="" title="image-20230706152556074"><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706152721249.png" class="" title="image-20230706152721249"><h2 id="KMP算法"><a href="#KMP算法" class="headerlink" title="KMP算法"></a>KMP算法</h2><h3 id="KMP算法的原理"><a href="#KMP算法的原理" class="headerlink" title="KMP算法的原理"></a>KMP算法的原理</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706153209683.png" class="" title="image-20230706153209683"><h3 id="next数组"><a href="#next数组" class="headerlink" title="next数组"></a>next数组</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706170949456.png" class="" title="image-20230706170949456"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706171022159.png" class="" title="image-20230706171022159"><h3 id="next的改进版-nextval"><a href="#next的改进版-nextval" class="headerlink" title="next的改进版 nextval"></a>next的改进版 nextval</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230706171101792.png" class="" title="image-20230706171101792"><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p><strong>知道规律，根据题目推导。注意第一个元素的起始下标</strong></p><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230707155750186.png" class="" title="image-20230707155750186"><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230707155826929.png" class="" title="image-20230707155826929"><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708153255718.png" class="" title="image-20230708153255718"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708153637468.png" class="" title="image-20230708153637468"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708153729846.png" class="" title="image-20230708153729846"><h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><h3 id="特殊矩阵压缩-对称矩阵"><a href="#特殊矩阵压缩-对称矩阵" class="headerlink" title="特殊矩阵压缩-对称矩阵"></a>特殊矩阵压缩-对称矩阵</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230707160708857.png" class="" title="image-20230707160708857"><h3 id="特殊矩阵压缩-三角矩阵"><a href="#特殊矩阵压缩-三角矩阵" class="headerlink" title="特殊矩阵压缩-三角矩阵"></a>特殊矩阵压缩-三角矩阵</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230707162246685.png" class="" title="image-20230707162246685"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230707162413250.png" class="" title="image-20230707162413250"><h3 id="特殊矩阵压缩-对角矩阵"><a href="#特殊矩阵压缩-对角矩阵" class="headerlink" title="特殊矩阵压缩-对角矩阵"></a>特殊矩阵压缩-对角矩阵</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230707162659626.png" class="" title="image-20230707162659626"><h4 id="三对角矩阵"><a href="#三对角矩阵" class="headerlink" title="三对角矩阵"></a>三对角矩阵</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708170754644.png" class="" title="image-20230708170754644"><h3 id="特殊矩阵压缩-稀疏矩阵"><a href="#特殊矩阵压缩-稀疏矩阵" class="headerlink" title="特殊矩阵压缩-稀疏矩阵"></a>特殊矩阵压缩-稀疏矩阵</h3><h4 id="三元组存储稀疏矩阵"><a href="#三元组存储稀疏矩阵" class="headerlink" title="三元组存储稀疏矩阵"></a>三元组存储稀疏矩阵</h4><p>三元组定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">TSMatrix</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Triple data[MAX_SIZE+<span class="number">1</span>];<span class="comment">//多余的一个位置用于存放非零元的个数</span></span><br><span class="line">    <span class="keyword">int</span> m_row,m_col,m_num;<span class="comment">//矩阵的行数、列数(固定)和非零元的个数</span></span><br><span class="line">&#125;TSMatrix;</span><br></pre></td></tr></table></figure><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708170832225.png" class="" title="image-20230708170832225"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708171029404.png" class="" title="image-20230708171029404"><h4 id="十字链表存储稀疏矩阵"><a href="#十字链表存储稀疏矩阵" class="headerlink" title="十字链表存储稀疏矩阵"></a>十字链表存储稀疏矩阵</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708170910492.png" class="" title="image-20230708170910492"><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708171055965.png" class="" title="image-20230708171055965"><h2 id="广义表"><a href="#广义表" class="headerlink" title="广义表"></a>广义表</h2><h3 id="广义表定义"><a href="#广义表定义" class="headerlink" title="广义表定义"></a>广义表定义</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708165050742.png" class="" title="image-20230708165050742"><h3 id="广义表特点"><a href="#广义表特点" class="headerlink" title="广义表特点"></a>广义表特点</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708165119586.png" class="" title="image-20230708165119586"><h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708171934476.png" class="" title="image-20230708171934476"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230708171950914.png" class="" title="image-20230708171950914"><h1 id="树和二叉树"><a href="#树和二叉树" class="headerlink" title="树和二叉树"></a>树和二叉树</h1><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712151649615.png" class="" title="image-20230712151649615"><h2 id="树的定义"><a href="#树的定义" class="headerlink" title="树的定义"></a>树的定义</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712151900954.png" class="" title="image-20230712151900954"><h2 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712152101849.png" class="" title="image-20230712152101849"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712152410951.png" class="" title="image-20230712152410951"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712153741066.png" class="" title="image-20230712153741066"><h2 id="度为m的树和与m叉树的区别"><a href="#度为m的树和与m叉树的区别" class="headerlink" title="度为m的树和与m叉树的区别"></a>度为m的树和与m叉树的区别</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712154443110.png" class="" title="image-20230712154443110"><h2 id="树的性质"><a href="#树的性质" class="headerlink" title="树的性质"></a>树的性质</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712153758287.png" class="" title="image-20230712153758287"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712153810428.png" class="" title="image-20230712153810428"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712154508662.png" class="" title="image-20230712154508662"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712154540907.png" class="" title="image-20230712154540907"><h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712160631857.png" class="" title="image-20230712160631857"><h3 id="二叉树与度为2的树的区别"><a href="#二叉树与度为2的树的区别" class="headerlink" title="二叉树与度为2的树的区别"></a>二叉树与度为2的树的区别</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712160645127.png" class="" title="image-20230712160645127"><h3 id="满二叉树"><a href="#满二叉树" class="headerlink" title="满二叉树"></a>满二叉树</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712171310446.png" class="" title="image-20230712171310446"><h3 id="完全二叉树"><a href="#完全二叉树" class="headerlink" title="完全二叉树"></a>完全二叉树</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712171333657.png" class="" title="image-20230712171333657"><h3 id="二叉排序树"><a href="#二叉排序树" class="headerlink" title="二叉排序树"></a>二叉排序树</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712171359218.png" class="" title="image-20230712171359218"><h4 id="基本概念-2"><a href="#基本概念-2" class="headerlink" title="基本概念"></a>基本概念</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717164715628.png" class="" title="image-20230717164715628"><h4 id="创建二叉排序树"><a href="#创建二叉排序树" class="headerlink" title="创建二叉排序树"></a>创建二叉排序树</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717165100496.png" class="" title="image-20230717165100496"><h4 id="删除二叉排序树的结点"><a href="#删除二叉排序树的结点" class="headerlink" title="删除二叉排序树的结点"></a>删除二叉排序树的结点</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717172120534.png" class="" title="image-20230717172120534"><p><strong>要删除的结点可分为三种情况：</strong><br><strong>1.要删除的结点为叶子结点</strong><br><strong>2.要删除的结点有且仅有一棵子树</strong><br><strong>3.要删除的结点有两棵子树</strong></p><p>参考博客:<a href="https://blog.csdn.net/a982801238/article/details/99205329">https://blog.csdn.net/a982801238/article/details/99205329</a></p><h4 id="二叉排序树的查找效率分析"><a href="#二叉排序树的查找效率分析" class="headerlink" title="二叉排序树的查找效率分析"></a>二叉排序树的查找效率分析</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717172808314.png" class="" title="image-20230717172808314"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717173043931.png" class="" title="image-20230717173043931"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717173150457.png" class="" title="image-20230717173150457"><h3 id="平衡二叉树"><a href="#平衡二叉树" class="headerlink" title="平衡二叉树"></a>平衡二叉树</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230718155406576.png" class="" title="image-20230718155406576"><h4 id="平衡二叉树转换"><a href="#平衡二叉树转换" class="headerlink" title="平衡二叉树转换"></a>平衡二叉树转换</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230718182502137.png" class="" title="image-20230718182502137"><p>需要LL旋转的情况：麻烦结点在不平衡发现者的左子树的左子树上，因而叫LL插入，需要LL旋转；</p><p>需要RR旋转的情况：麻烦结点在不平衡发现者的右子树的右子树上，因而叫RR插入，需要RR旋转；</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230718182634784.png" class="" title="image-20230718182634784"><p>需要LR旋转的情况：麻烦结点在不平衡发现者的左子树的右子树上，因而叫LR插入，需要LR旋转</p><p>需要RL旋转的情况：麻烦结点在不平衡发现者的右子树的左子树上，因而叫RL插入，需要RL旋转；</p><h4 id="平衡二叉排序树"><a href="#平衡二叉排序树" class="headerlink" title="平衡二叉排序树"></a>平衡二叉排序树</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230718170238306.png" class="" title="image-20230718170238306"><p><a href="https://www.bilibili.com/video/BV1mB4y1j739/?spm_id_from=333.337.search-card.all.click&vd_source=b56f8e821959da5c3bdd92155f73e40a">参考视频</a></p><p><a href="https://www.bilibili.com/video/BV16m4y1F7do/?spm_id_from=333.337.search-card.all.click&vd_source=b56f8e821959da5c3bdd92155f73e40a">参考视频</a></p><h4 id="平衡二叉树结点数与树高"><a href="#平衡二叉树结点数与树高" class="headerlink" title="平衡二叉树结点数与树高"></a>平衡二叉树结点数与树高</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230718170312359.png" class="" title="image-20230718170312359"><h3 id="哈夫曼树"><a href="#哈夫曼树" class="headerlink" title="哈夫曼树"></a>哈夫曼树</h3><h4 id="什么是路径"><a href="#什么是路径" class="headerlink" title="什么是路径"></a>什么是路径</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230719145922384.png" class="" title="image-20230719145922384"><h4 id="什么是路径长度"><a href="#什么是路径长度" class="headerlink" title="什么是路径长度"></a>什么是路径长度</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230719145943394.png" class="" title="image-20230719145943394"><h4 id="什么是带权路径长度"><a href="#什么是带权路径长度" class="headerlink" title="什么是带权路径长度"></a>什么是带权路径长度</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230719150028317.png" class="" title="image-20230719150028317"><h4 id="什么是树的带权路径长度"><a href="#什么是树的带权路径长度" class="headerlink" title="什么是树的带权路径长度"></a>什么是树的带权路径长度</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230719150121285.png" class="" title="image-20230719150121285"><h4 id="什么是哈夫曼树"><a href="#什么是哈夫曼树" class="headerlink" title="什么是哈夫曼树"></a>什么是哈夫曼树</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230719150202279.png" class="" title="image-20230719150202279"><h4 id="哈夫曼树的基本概念"><a href="#哈夫曼树的基本概念" class="headerlink" title="哈夫曼树的基本概念"></a>哈夫曼树的基本概念</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230719150656616.png" class="" title="image-20230719150656616"><h4 id="构建哈夫曼树"><a href="#构建哈夫曼树" class="headerlink" title="构建哈夫曼树"></a>构建哈夫曼树</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230719151724682.png" class="" title="image-20230719151724682"><p>如：对 下图中的六个带权叶子结点来构造一棵哈夫曼树，步骤如下：</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/20131205234828406" class="" title="img"><h4 id="哈夫曼编码"><a href="#哈夫曼编码" class="headerlink" title="哈夫曼编码"></a>哈夫曼编码</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230719151821669.png" class="" title="image-20230719151821669"><p><a href="https://blog.csdn.net/QQQZSJ/article/details/98162688">浅谈 前缀编码与哈夫曼编码</a></p><h3 id="二叉树的性质"><a href="#二叉树的性质" class="headerlink" title="二叉树的性质"></a>二叉树的性质</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230715155808688.png" class="" title="image-20230715155808688"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230715160819724.png" class="" title="image-20230715160819724"><h3 id="完全二叉树的顺序存储"><a href="#完全二叉树的顺序存储" class="headerlink" title="完全二叉树的顺序存储"></a>完全二叉树的顺序存储</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712171543205.png" class="" title="image-20230712171543205"><h3 id="普通二叉树的顺序存储"><a href="#普通二叉树的顺序存储" class="headerlink" title="普通二叉树的顺序存储"></a>普通二叉树的顺序存储</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712171618347.png" class="" title="image-20230712171618347"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712171651687.png" class="" title="image-20230712171651687"><h3 id="普通二叉树的链式存储"><a href="#普通二叉树的链式存储" class="headerlink" title="普通二叉树的链式存储"></a>普通二叉树的链式存储</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义结点代码：</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span>&#123;</span></span><br><span class="line">    TElemType data;<span class="comment">//数据</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span> *<span class="title">lchild</span>, *<span class="title">rchild</span>;</span><span class="comment">//左右孩子指针</span></span><br><span class="line">&#125; BiTNode, *BiTree;</span><br></pre></td></tr></table></figure><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230719170659409.png" class="" title="image-20230719170659409"><h3 id="二叉树的遍历"><a href="#二叉树的遍历" class="headerlink" title="二叉树的遍历"></a>二叉树的遍历</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712171822723.png" class="" title="image-20230712171822723"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712171837826.png" class="" title="image-20230712171837826"><h4 id="先序遍历"><a href="#先序遍历" class="headerlink" title="先序遍历"></a>先序遍历</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230713155540062.png" class="" title="image-20230713155540062"><h4 id="中序遍历"><a href="#中序遍历" class="headerlink" title="中序遍历"></a>中序遍历</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230713155607711.png" class="" title="image-20230713155607711"><h4 id="后序遍历"><a href="#后序遍历" class="headerlink" title="后序遍历"></a>后序遍历</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230713155728723.png" class="" title="image-20230713155728723"><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230713155927820.png" class="" title="image-20230713155927820"><h4 id="二叉树遍历的实现"><a href="#二叉树遍历的实现" class="headerlink" title="二叉树遍历的实现"></a>二叉树遍历的实现</h4><h5 id="递归方案实现"><a href="#递归方案实现" class="headerlink" title="递归方案实现"></a>递归方案实现</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230713160108960.png" class="" title="image-20230713160108960"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230713160143748.png" class="" title="image-20230713160143748"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230713160230897.png" class="" title="image-20230713160230897"><h5 id="非递归方案实现"><a href="#非递归方案实现" class="headerlink" title="非递归方案实现"></a>非递归方案实现</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230713161341689.png" class="" title="image-20230713161341689"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230713161357861.png" class="" title="image-20230713161357861"><p><a href="https://www.bilibili.com/video/BV1RP4y1G79Z/?spm_id_from=333.337.search-card.all.click&vd_source=b56f8e821959da5c3bdd92155f73e40a">参考视频</a></p><h3 id="由遍历序列确定二叉树"><a href="#由遍历序列确定二叉树" class="headerlink" title="由遍历序列确定二叉树"></a>由遍历序列确定二叉树</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230713165515219.png" class="" title="image-20230713165515219"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230713170109050.png" class="" title="image-20230713170109050"><h3 id="线索二叉树"><a href="#线索二叉树" class="headerlink" title="线索二叉树"></a>线索二叉树</h3><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716153148608.png" class="" title="image-20230716153148608"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716153351912.png" class="" title="image-20230716153351912"><h4 id="二叉树线索化"><a href="#二叉树线索化" class="headerlink" title="二叉树线索化"></a>二叉树线索化</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716153526341.png" class="" title="image-20230716153526341"><h5 id="先序线索二叉树"><a href="#先序线索二叉树" class="headerlink" title="先序线索二叉树"></a>先序线索二叉树</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716155019086.png" class="" title="image-20230716155019086"><h5 id="中序线索二叉树"><a href="#中序线索二叉树" class="headerlink" title="中序线索二叉树"></a>中序线索二叉树</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716155041512.png" class="" title="image-20230716155041512"><h5 id="后续线索二叉树"><a href="#后续线索二叉树" class="headerlink" title="后续线索二叉树"></a>后续线索二叉树</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716155132515.png" class="" title="image-20230716155132515"><h4 id="线索二叉树的数据结构"><a href="#线索二叉树的数据结构" class="headerlink" title="线索二叉树的数据结构"></a>线索二叉树的数据结构</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716155755043.png" class="" title="image-20230716155755043"><h4 id="线索二叉树求前驱后继"><a href="#线索二叉树求前驱后继" class="headerlink" title="线索二叉树求前驱后继"></a>线索二叉树求前驱后继</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716155853329.png" class="" title="image-20230716155853329"><h5 id="先序线索二叉树求后继"><a href="#先序线索二叉树求后继" class="headerlink" title="先序线索二叉树求后继"></a>先序线索二叉树求后继</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716160217767.png" class="" title="image-20230716160217767"><h5 id="后序线索二叉树求前驱"><a href="#后序线索二叉树求前驱" class="headerlink" title="后序线索二叉树求前驱"></a>后序线索二叉树求前驱</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716160434350.png" class="" title="image-20230716160434350"><h5 id="中序线索二叉树求前驱后继"><a href="#中序线索二叉树求前驱后继" class="headerlink" title="中序线索二叉树求前驱后继"></a>中序线索二叉树求前驱后继</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716160532175.png" class="" title="image-20230716160532175"><h4 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716170415708.png" class="" title="image-20230716170415708"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716170424402.png" class="" title="image-20230716170424402"><h2 id="树与二叉树的性质"><a href="#树与二叉树的性质" class="headerlink" title="树与二叉树的性质"></a>树与二叉树的性质</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230712153541893.png" class="" title="image-20230712153541893(1)"><h2 id="树、二叉树、森林"><a href="#树、二叉树、森林" class="headerlink" title="树、二叉树、森林"></a>树、二叉树、森林</h2><h3 id="树、二叉树、森林的转换"><a href="#树、二叉树、森林的转换" class="headerlink" title="树、二叉树、森林的转换"></a>树、二叉树、森林的转换</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716163956191.png" class="" title="image-20230716163956191"><h4 id="例题-3"><a href="#例题-3" class="headerlink" title="例题"></a>例题</h4><h5 id="树转换二叉树"><a href="#树转换二叉树" class="headerlink" title="树转换二叉树"></a>树转换二叉树</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716172424282.png" class="" title="image-20230716172424282"><h5 id="二叉树转换树"><a href="#二叉树转换树" class="headerlink" title="二叉树转换树"></a>二叉树转换树</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716172438094.png" class="" title="image-20230716172438094"><h5 id="森林转换为二叉树"><a href="#森林转换为二叉树" class="headerlink" title="森林转换为二叉树"></a>森林转换为二叉树</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716172447878.png" class="" title="image-20230716172447878"><h5 id="二叉树转换为森林"><a href="#二叉树转换为森林" class="headerlink" title="二叉树转换为森林"></a>二叉树转换为森林</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230716172456427.png" class="" title="image-20230716172456427"><h3 id="树的三种存储结构"><a href="#树的三种存储结构" class="headerlink" title="树的三种存储结构"></a>树的三种存储结构</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717154754304.png" class="" title="image-20230717154754304"><h4 id="孩子兄弟表示法"><a href="#孩子兄弟表示法" class="headerlink" title="孩子兄弟表示法"></a>孩子兄弟表示法</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717154900987.png" class="" title="image-20230717154900987"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717154959933.png" class="" title="image-20230717154959933"><h4 id="双亲表示法"><a href="#双亲表示法" class="headerlink" title="双亲表示法"></a>双亲表示法</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717155030028.png" class="" title="image-20230717155030028"><h4 id="孩子表示法"><a href="#孩子表示法" class="headerlink" title="孩子表示法"></a>孩子表示法</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717155208919.png" class="" title="image-20230717155208919"><h3 id="二叉链表存储树和二叉树"><a href="#二叉链表存储树和二叉树" class="headerlink" title="二叉链表存储树和二叉树"></a>二叉链表存储树和二叉树</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717163340291.png" class="" title="image-20230717163340291"><h3 id="树、森林的遍历"><a href="#树、森林的遍历" class="headerlink" title="树、森林的遍历"></a>树、森林的遍历</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717161528177.png" class="" title="image-20230717161528177"><h4 id="树的遍历"><a href="#树的遍历" class="headerlink" title="树的遍历"></a>树的遍历</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717161823130.png" class="" title="image-20230717161823130"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230925084843997.png" class="" title="image-20230925084843997"><h4 id="森林的遍历"><a href="#森林的遍历" class="headerlink" title="森林的遍历"></a>森林的遍历</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230717161840773.png" class="" title="image-20230717161840773"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230925085343915.png" class="" title="image-20230925085343915"><h1 id="图"><a href="#图" class="headerlink" title="图"></a>图</h1><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723150103764.png" class="" title="image-20230723150103764"><h2 id="图的定义及其特点"><a href="#图的定义及其特点" class="headerlink" title="图的定义及其特点"></a>图的定义及其特点</h2><h3 id="图的定义"><a href="#图的定义" class="headerlink" title="图的定义"></a>图的定义</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723150407231.png" class="" title="image-20230723150407231"><h3 id="无向图、有向图"><a href="#无向图、有向图" class="headerlink" title="无向图、有向图"></a>无向图、有向图</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723150825688.png" class="" title="image-20230723150825688"><h3 id="简单图、多重图"><a href="#简单图、多重图" class="headerlink" title="简单图、多重图"></a>简单图、多重图</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723151219926.png" class="" title="image-20230723151219926"><h3 id="度、入度和出度"><a href="#度、入度和出度" class="headerlink" title="度、入度和出度"></a>度、入度和出度</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723151356912.png" class="" title="image-20230723151356912"><h3 id="路径、回路、连通、强连通"><a href="#路径、回路、连通、强连通" class="headerlink" title="路径、回路、连通、强连通"></a>路径、回路、连通、强连通</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723151811918.png" class="" title="image-20230723151811918"><h3 id="连通图、强连通图"><a href="#连通图、强连通图" class="headerlink" title="连通图、强连通图"></a>连通图、强连通图</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723152217014-1690358221803.png" class="" title="image-20230723152217014"><h3 id="子图、生成子图"><a href="#子图、生成子图" class="headerlink" title="子图、生成子图"></a>子图、生成子图</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723153231249.png" class="" title="image-20230723153231249"><h3 id="连通分量、强连通分量"><a href="#连通分量、强连通分量" class="headerlink" title="连通分量、强连通分量"></a>连通分量、强连通分量</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723153338960.png" class="" title="image-20230723153338960"><p>区别极小连通子图和极大连通子图</p><p>连通分量（极大连通子图）是图的一个不被另外任何一个连通子图所包含的子图。<br>故：<br>1、连通图的极大连通子图就是它本身。<br>2、非连通图中有多个连通分量也就是可以有多个极大连通子图。</p><p>如:</p><p><img src="https://pic2.zhimg.com/80/v2-ad55764dc5553bdaa10e1e61bc409869_720w.webp" alt="img"></p><p>极小就更好理解啦，其实就是包含最少的边，但同时要保证连通。</p><p>一个连通图的生成树是它的极小连通子图</p><h3 id="生成树"><a href="#生成树" class="headerlink" title="生成树"></a>生成树</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723153635092.png" class="" title="image-20230723153635092"><h3 id="生成森林"><a href="#生成森林" class="headerlink" title="生成森林"></a>生成森林</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723153842175.png" class="" title="image-20230723153842175"><h3 id="带权图-网"><a href="#带权图-网" class="headerlink" title="带权图/网"></a>带权图/网</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723153915240.png" class="" title="image-20230723153915240"><h3 id="几种特殊的图"><a href="#几种特殊的图" class="headerlink" title="几种特殊的图"></a>几种特殊的图</h3><h4 id="完全图"><a href="#完全图" class="headerlink" title="完全图"></a>完全图</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723154142737.png" class="" title="image-20230723154142737"><h4 id="稀疏图和稠密图"><a href="#稀疏图和稠密图" class="headerlink" title="稀疏图和稠密图"></a>稀疏图和稠密图</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723154303610.png" class="" title="image-20230723154303610"><h4 id="树、森林、有向树"><a href="#树、森林、有向树" class="headerlink" title="树、森林、有向树"></a>树、森林、有向树</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723154436107.png" class="" title="image-20230723154436107"><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723154800780.png" class="" title="image-20230723154800780"><h2 id="图的存储结构和表示"><a href="#图的存储结构和表示" class="headerlink" title="图的存储结构和表示"></a>图的存储结构和表示</h2><h3 id="邻接矩阵-顺序存储-数组"><a href="#邻接矩阵-顺序存储-数组" class="headerlink" title="邻接矩阵-顺序存储(数组)"></a>邻接矩阵-顺序存储(数组)</h3><h4 id="非带权图"><a href="#非带权图" class="headerlink" title="非带权图"></a>非带权图</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723155200219.png" class="" title="image-20230723155200219"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723155508892.png" class="" title="image-20230723155508892"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723155754936.png" class="" title="image-20230723155754936"><h4 id="带权图-网-1"><a href="#带权图-网-1" class="headerlink" title="带权图/网"></a>带权图/网</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723160019940.png" class="" title="image-20230723160019940"><h4 id="邻接矩阵的效率分析"><a href="#邻接矩阵的效率分析" class="headerlink" title="邻接矩阵的效率分析"></a>邻接矩阵的效率分析</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723160204328.png" class="" title="image-20230723160204328"><h4 id="邻接矩阵的性质"><a href="#邻接矩阵的性质" class="headerlink" title="邻接矩阵的性质"></a>邻接矩阵的性质</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723160617209.png" class="" title="image-20230723160617209"><h3 id="邻接表-顺序存储-链式存储-数组-链表"><a href="#邻接表-顺序存储-链式存储-数组-链表" class="headerlink" title="邻接表-顺序存储+链式存储(数组+链表)"></a>邻接表-顺序存储+链式存储(数组+链表)</h3><h4 id="结构体定义-2"><a href="#结构体定义-2" class="headerlink" title="结构体定义"></a>结构体定义</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723161738789.png" class="" title="image-20230723161738789"><h4 id="孩子表示法的类比（顺序存储-链式存储的另一个应用）"><a href="#孩子表示法的类比（顺序存储-链式存储的另一个应用）" class="headerlink" title="孩子表示法的类比（顺序存储+链式存储的另一个应用）"></a>孩子表示法的类比（顺序存储+链式存储的另一个应用）</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723161830296.png" class="" title="image-20230723161830296"><h4 id="邻接表存储有向图和无向图"><a href="#邻接表存储有向图和无向图" class="headerlink" title="邻接表存储有向图和无向图"></a>邻接表存储有向图和无向图</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723161924936.png" class="" title="image-20230723161924936"><h4 id="逆邻接表和邻接表的区别"><a href="#逆邻接表和邻接表的区别" class="headerlink" title="逆邻接表和邻接表的区别"></a>逆邻接表和邻接表的区别</h4><p>邻接表：反映的是顶点出度的情况。<br>逆邻接表：反映的是顶点的入度情况。</p><p><a href="https://blog.csdn.net/m0_54234010/article/details/122277453">参考博客</a></p><h3 id="邻接表和邻接矩阵的对比"><a href="#邻接表和邻接矩阵的对比" class="headerlink" title="邻接表和邻接矩阵的对比"></a>邻接表和邻接矩阵的对比</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723163252668.png" class="" title="image-20230723163252668"><h3 id="邻接表、邻接矩阵存储无向图"><a href="#邻接表、邻接矩阵存储无向图" class="headerlink" title="邻接表、邻接矩阵存储无向图"></a>邻接表、邻接矩阵存储无向图</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723163809059.png" class="" title="image-20230723163809059"><h3 id="邻接多重表、十字链表简单说明"><a href="#邻接多重表、十字链表简单说明" class="headerlink" title="邻接多重表、十字链表简单说明"></a>邻接多重表、十字链表简单说明</h3><p><strong>无向图特有:邻接多重表。有向图特有:十字链表，边集数组。二者共有:邻接表，邻接矩阵。</strong></p><h2 id="图的基本操作"><a href="#图的基本操作" class="headerlink" title="图的基本操作"></a>图的基本操作</h2><h3 id="判断图G中是否存在顶点v到w的边"><a href="#判断图G中是否存在顶点v到w的边" class="headerlink" title="判断图G中是否存在顶点v到w的边"></a>判断图G中是否存在顶点v到w的边</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723165308982.png" class="" title="image-20230723165308982"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723165514479.png" class="" title="image-20230723165514479"><h3 id="列出图G中与顶点v邻接的边"><a href="#列出图G中与顶点v邻接的边" class="headerlink" title="列出图G中与顶点v邻接的边"></a>列出图G中与顶点v邻接的边</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723165354119.png" class="" title="image-20230723165354119"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723165438595.png" class="" title="image-20230723165438595"><h3 id="在图G中插入顶点v"><a href="#在图G中插入顶点v" class="headerlink" title="在图G中插入顶点v"></a>在图G中插入顶点v</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723165645287.png" class="" title="image-20230723165645287"><h3 id="从图G中删除顶点v"><a href="#从图G中删除顶点v" class="headerlink" title="从图G中删除顶点v"></a>从图G中删除顶点v</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723170235087.png" class="" title="image-20230723170235087"><h3 id="在图中插入一条从顶点v到w的边"><a href="#在图中插入一条从顶点v到w的边" class="headerlink" title="在图中插入一条从顶点v到w的边"></a>在图中插入一条从顶点v到w的边</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723171545323.png" class="" title="image-20230723171545323"><h2 id="图的遍历"><a href="#图的遍历" class="headerlink" title="图的遍历"></a>图的遍历</h2><h3 id="广度优先搜索（树的层次遍历）"><a href="#广度优先搜索（树的层次遍历）" class="headerlink" title="广度优先搜索（树的层次遍历）"></a>广度优先搜索（树的层次遍历）</h3><h4 id="图的广度优先搜索"><a href="#图的广度优先搜索" class="headerlink" title="图的广度优先搜索"></a>图的广度优先搜索</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723171838601.png" class="" title="image-20230723171838601"><h4 id="BFS算法效率分析"><a href="#BFS算法效率分析" class="headerlink" title="BFS算法效率分析"></a>BFS算法效率分析</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723172134054.png" class="" title="image-20230723172134054"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723172206175.png" class="" title="image-20230723172206175"><h4 id="广度优先生成树、生成森林"><a href="#广度优先生成树、生成森林" class="headerlink" title="广度优先生成树、生成森林"></a>广度优先生成树、生成森林</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230723172259676.png" class="" title="image-20230723172259676"><h3 id="深度优先搜索（树的先序遍历）"><a href="#深度优先搜索（树的先序遍历）" class="headerlink" title="深度优先搜索（树的先序遍历）"></a>深度优先搜索（树的先序遍历）</h3><h4 id="图的深度优先搜索"><a href="#图的深度优先搜索" class="headerlink" title="图的深度优先搜索"></a>图的深度优先搜索</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230724172326416.png" class="" title="image-20230724172326416"><p><strong>深度优先搜索（Depth First Search,DFS）</strong>类似于树的先序遍历，是树的先序遍历的推广。</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230727174540455.png" class="" title="image-20230727174540455"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230727174600608.png" class="" title="image-20230727174600608"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230727174629191.png" class="" title="image-20230727174629191"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230727174643042.png" class="" title="image-20230727174643042"><h4 id="DFS算法效率分析"><a href="#DFS算法效率分析" class="headerlink" title="DFS算法效率分析"></a>DFS算法效率分析</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230724172042437.png" class="" title="image-20230724172042437"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230724172054970.png" class="" title="image-20230724172054970"><h4 id="深度优先生成树、生成森林"><a href="#深度优先生成树、生成森林" class="headerlink" title="深度优先生成树、生成森林"></a>深度优先生成树、生成森林</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230724172130493.png" class="" title="image-20230724172130493"><h3 id="图的两种遍历总结"><a href="#图的两种遍历总结" class="headerlink" title="图的两种遍历总结"></a>图的两种遍历总结</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230724172213282.png" class="" title="image-20230724172213282"><h2 id="图的应用"><a href="#图的应用" class="headerlink" title="图的应用"></a>图的应用</h2><h3 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a>最小生成树</h3><h4 id="基本概念-3"><a href="#基本概念-3" class="headerlink" title="基本概念"></a>基本概念</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725151104915.png" class="" title="image-20230725151104915"><h4 id="普里姆-Prime-算法"><a href="#普里姆-Prime-算法" class="headerlink" title="普里姆(Prime)算法"></a>普里姆(Prime)算法</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725150955456.png" class="" title="image-20230725150955456"><h4 id="克鲁斯卡算法"><a href="#克鲁斯卡算法" class="headerlink" title="克鲁斯卡算法"></a>克鲁斯卡算法</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725151242383.png" class="" title="image-20230725151242383"><h4 id="两种算法对比"><a href="#两种算法对比" class="headerlink" title="两种算法对比"></a>两种算法对比</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725151406144.png" class="" title="image-20230725151406144"><h3 id="最短路径"><a href="#最短路径" class="headerlink" title="最短路径"></a>最短路径</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725152015002.png" class="" title="image-20230725152015002"><h4 id="单源最短路径"><a href="#单源最短路径" class="headerlink" title="单源最短路径"></a>单源最短路径</h4><h5 id="广度优先算法BFS（无权图"><a href="#广度优先算法BFS（无权图" class="headerlink" title="广度优先算法BFS（无权图)"></a>广度优先算法BFS（无权图)</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725154748569.png" class="" title="image-20230725154748569"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725154822835.png" class="" title="image-20230725154822835"><h5 id="迪杰斯特拉算法-Dijkstra（无权图、带权图）"><a href="#迪杰斯特拉算法-Dijkstra（无权图、带权图）" class="headerlink" title="迪杰斯特拉算法 Dijkstra（无权图、带权图）"></a>迪杰斯特拉算法 Dijkstra（无权图、带权图）</h5><h6 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h6><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725152203574.png" class="" title="image-20230725152203574"><h6 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h6><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230729175612981.png" class="" title="image-20230729175612981"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230729175625280.png" class="" title="image-20230729175625280"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725154915800.png" class="" title="image-20230725154915800"><h4 id="顶点间最短路径"><a href="#顶点间最短路径" class="headerlink" title="顶点间最短路径"></a>顶点间最短路径</h4><h5 id="弗罗伊德算法-Floyd-无权图、带权图"><a href="#弗罗伊德算法-Floyd-无权图、带权图" class="headerlink" title="弗罗伊德算法 Floyd (无权图、带权图)"></a>弗罗伊德算法 Floyd (无权图、带权图)</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725155024140.png" class="" title="image-20230725155024140"><h6 id="无向图"><a href="#无向图" class="headerlink" title="无向图"></a>无向图</h6><p>1</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725155607531.png" class="" title="image-20230725155607531"><p>2</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725155626926.png" class="" title="image-20230725155626926"><p>3</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725155644773.png" class="" title="image-20230725155644773"><p>4</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725155722708.png" class="" title="image-20230725155722708"><h6 id="有向图"><a href="#有向图" class="headerlink" title="有向图"></a>有向图</h6><p>初始化</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725160532881.png" class="" title="image-20230725160532881"><p>加入顶点V0中转</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725160541602.png" class="" title="image-20230725160541602"><p>加入顶点V1中转</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725160551995.png" class="" title="image-20230725160551995"><p>加入顶点V2中转</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725160602991.png" class="" title="image-20230725160602991"><p>加入顶点V3中转</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725160614676.png" class="" title="image-20230725160614676"><p>加入顶点V4中转</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725160626980.png" class="" title="image-20230725160626980"><h2 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h2><h3 id="拓扑排序-1"><a href="#拓扑排序-1" class="headerlink" title="拓扑排序"></a>拓扑排序</h3><p>拓扑排序：由一个集合上的一个偏序来得到集合上的一个全序。所以只能用在有向图中，且如果有向图存在环的话也无法得到图的所有节点，所以拓扑排序只能用在有向无环图中。 （即产生线性序列的话只有在有向无环图中）</p><p>拓扑排序算法:该算法用在有向图中来检查是否存在环。拓扑排序算法仅能适用于有向无环图（×）</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725164523713.png" class="" title="image-20230725164523713"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725164538400.png" class="" title="image-20230725164538400"><h3 id="逆拓扑排序"><a href="#逆拓扑排序" class="headerlink" title="逆拓扑排序"></a>逆拓扑排序</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725164554153.png" class="" title="image-20230725164554153"><h3 id="算法效率分析"><a href="#算法效率分析" class="headerlink" title="算法效率分析"></a>算法效率分析</h3><p>拓扑排序时间复杂度是O(n+e)    </p><p><a href="https://baijiahao.baidu.com/s?id=1761786726881493665&wfr=spider&for=pc">参考</a></p><h3 id="例题-4"><a href="#例题-4" class="headerlink" title="例题"></a>例题</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725164831876.png" class="" title="image-20230725164831876"><h2 id="关键路径"><a href="#关键路径" class="headerlink" title="关键路径"></a>关键路径</h2><h3 id="AOE网"><a href="#AOE网" class="headerlink" title="AOE网"></a>AOE网</h3><h4 id="AOE网特点"><a href="#AOE网特点" class="headerlink" title="AOE网特点"></a>AOE网特点</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230727181203406.png" class="" title="image-20230727181203406"><h4 id="关键路径和关键活动"><a href="#关键路径和关键活动" class="headerlink" title="关键路径和关键活动"></a>关键路径和关键活动</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230728161106532.png" class="" title="image-20230728161106532"><h4 id="AOE网注意事项"><a href="#AOE网注意事项" class="headerlink" title="AOE网注意事项"></a>AOE网注意事项</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230727181250913.png" class="" title="image-20230727181250913"><h4 id="通常问题"><a href="#通常问题" class="headerlink" title="通常问题"></a>通常问题</h4><p>AOE-网在工程计划和经营管理中有广泛的应用，针对实际的应用问题，通常需要解决以下两个问题：</p><ol><li>估算完成整项工程至少需要多少时间</li><li>判断哪些活动是影响工程进度的关键</li></ol><h3 id="关键路径求解"><a href="#关键路径求解" class="headerlink" title="关键路径求解"></a>关键路径求解</h3><h4 id="题型样式"><a href="#题型样式" class="headerlink" title="题型样式"></a>题型样式</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230727181232049.png" class="" title="image-20230727181232049"><h4 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h4><p><strong>事件最早发生时间按照拓扑排序的顺序计算，最迟发生时间按逆拓扑排序的顺序计算！</strong></p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725171828120.png" class="" title="image-20230725171828120"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725172108298.png" class="" title="image-20230725172108298"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230725172121078.png" class="" title="image-20230725172121078"><h1 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h1><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730150520001.png" class="" title="image-20230730150520001"><h2 id="查找的基本概念"><a href="#查找的基本概念" class="headerlink" title="查找的基本概念"></a>查找的基本概念</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730154350811.png" class="" title="image-20230730154350811"><h2 id="顺序查找"><a href="#顺序查找" class="headerlink" title="顺序查找"></a>顺序查找</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730150818527.png" class="" title="image-20230730150818527"><h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730154425615.png" class="" title="image-20230730154425615"><h3 id="顺序查找优化"><a href="#顺序查找优化" class="headerlink" title="顺序查找优化"></a>顺序查找优化</h3><h4 id="设置哨兵"><a href="#设置哨兵" class="headerlink" title="设置哨兵"></a>设置哨兵</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730154556969.png" class="" title="image-20230730154556969"><h4 id="先排序"><a href="#先排序" class="headerlink" title="先排序"></a>先排序</h4><h5 id="查找代码"><a href="#查找代码" class="headerlink" title="查找代码"></a>查找代码</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730160452771.png" class="" title="image-20230730160452771"><h5 id="效率分析"><a href="#效率分析" class="headerlink" title="效率分析"></a>效率分析</h5><h5 id="无序查找表"><a href="#无序查找表" class="headerlink" title="无序查找表"></a>无序查找表</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730183334570.png" class="" title="image-20230730183334570"><h5 id="有序查找表"><a href="#有序查找表" class="headerlink" title="有序查找表"></a>有序查找表</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730161504871.png" class="" title="image-20230730161504871"><h4 id="跳跃"><a href="#跳跃" class="headerlink" title="跳跃"></a>跳跃</h4><h5 id="查找代码-1"><a href="#查找代码-1" class="headerlink" title="查找代码"></a>查找代码</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730162755524.png" class="" title="image-20230730162755524"><h5 id="效率分析-1"><a href="#效率分析-1" class="headerlink" title="效率分析"></a>效率分析</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730163009817.png" class="" title="image-20230730163009817"><h4 id="按查找概率从小到大排列"><a href="#按查找概率从小到大排列" class="headerlink" title="按查找概率从小到大排列"></a>按查找概率从小到大排列</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730163424101.png" class="" title="image-20230730163424101"><h2 id="折半查找"><a href="#折半查找" class="headerlink" title="折半查找"></a>折半查找</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730163558005.png" class="" title="image-20230730163558005"><h3 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730165255660.png" class="" title="image-20230730165255660"><h3 id="查找过程"><a href="#查找过程" class="headerlink" title="查找过程"></a>查找过程</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730165700016.png" class="" title="image-20230730165700016"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730170135777.png" class="" title="image-20230730170135777"><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730165918080.png" class="" title="image-20230730165918080"><h3 id="效率分析-2"><a href="#效率分析-2" class="headerlink" title="效率分析"></a>效率分析</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730170316188.png" class="" title="image-20230730170316188"><h3 id="查找判定树分析"><a href="#查找判定树分析" class="headerlink" title="查找判定树分析"></a>查找判定树分析</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730170530501.png" class="" title="image-20230730170530501"><h2 id="分块查找"><a href="#分块查找" class="headerlink" title="分块查找"></a>分块查找</h2><h3 id="顺序查找索引表"><a href="#顺序查找索引表" class="headerlink" title="顺序查找索引表"></a>顺序查找索引表</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731153537156.png" class="" title="image-20230731153537156"><h4 id="查找成功"><a href="#查找成功" class="headerlink" title="查找成功"></a>查找成功</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731153412801.png" class="" title="image-20230731153412801"><h4 id="查找失败"><a href="#查找失败" class="headerlink" title="查找失败"></a>查找失败</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731153438300.png" class="" title="image-20230731153438300"><h3 id="折半查找索引表"><a href="#折半查找索引表" class="headerlink" title="折半查找索引表"></a>折半查找索引表</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731154327974.png" class="" title="image-20230731154327974"><h3 id="分块查找效率分析"><a href="#分块查找效率分析" class="headerlink" title="分块查找效率分析"></a>分块查找效率分析</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730172636542.png" class="" title="image-20230730172636542"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731154619109.png" class="" title="image-20230731154619109"><h2 id="三种查找相关公式"><a href="#三种查找相关公式" class="headerlink" title="三种查找相关公式"></a>三种查找相关公式</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730173619058.png" class="" title="image-20230730173619058"><h2 id="B树"><a href="#B树" class="headerlink" title="B树"></a>B树</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230730174341568.png" class="" title="image-20230730174341568"><h3 id="M叉排序树"><a href="#M叉排序树" class="headerlink" title="M叉排序树"></a>M叉排序树</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731160717163.png" class="" title="image-20230731160717163"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731160618753.png" class="" title="image-20230731160618753"><h3 id="B树的性质"><a href="#B树的性质" class="headerlink" title="B树的性质"></a>B树的性质</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731163540255.png" class="" title="image-20230731163540255"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731163549149.png" class="" title="image-20230731163549149"><h3 id="B树的考点"><a href="#B树的考点" class="headerlink" title="B树的考点"></a>B树的考点</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731163933099.png" class="" title="image-20230731163933099"><p><a href="https://www.bilibili.com/video/BV1oN411Q7Yz?p=78&vd_source=b56f8e821959da5c3bdd92155f73e40a">参考视频</a></p><h3 id="B树的插入"><a href="#B树的插入" class="headerlink" title="B树的插入"></a>B树的插入</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801154234446.png" class="" title="image-20230801154234446"><p><a href="https://www.bilibili.com/video/BV1oN411Q7Yz/?p=79&spm_id_from=pageDriver&vd_source=b56f8e821959da5c3bdd92155f73e40a">参考视频</a></p><h3 id="B树的删除"><a href="#B树的删除" class="headerlink" title="B树的删除"></a>B树的删除</h3><h4 id="第一种情况"><a href="#第一种情况" class="headerlink" title="第一种情况"></a>第一种情况</h4><p>删除53</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801154924209.png" class="" title="image-20230801154924209"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801154935303.png" class="" title="image-20230801154935303"><h4 id="第二种情况"><a href="#第二种情况" class="headerlink" title="第二种情况"></a>第二种情况</h4><p>删掉50</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801155611103.png" class="" title="image-20230801155611103"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801155656318.png" class="" title="image-20230801155656318"><h5 id="向右兄弟结点借"><a href="#向右兄弟结点借" class="headerlink" title="向右兄弟结点借"></a>向右兄弟结点借</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801155553915.png" class="" title="image-20230801155553915"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801155716981.png" class="" title="image-20230801155716981"><h5 id="向左兄弟结点借"><a href="#向左兄弟结点借" class="headerlink" title="向左兄弟结点借"></a>向左兄弟结点借</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801155744592.png" class="" title="image-20230801155744592"><h4 id="第三种情况"><a href="#第三种情况" class="headerlink" title="第三种情况"></a>第三种情况</h4><p>删除28</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801160334076.png" class="" title="image-20230801160334076"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801160415054.png" class="" title="image-20230801160415054"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801160450875.png" class="" title="image-20230801160450875"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801160533188.png" class="" title="image-20230801160533188"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801160601601.png" class="" title="image-20230801160601601"> <img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801160719654.png" class="" title="image-20230801160719654"><h4 id="第四种情况"><a href="#第四种情况" class="headerlink" title="第四种情况"></a>第四种情况</h4><h5 id="后继结点代替"><a href="#后继结点代替" class="headerlink" title="后继结点代替"></a>后继结点代替</h5><p>删除70</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801162421976.png" class="" title="image-20230801162421976"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801162548595.png" class="" title="image-20230801162548595"><h5 id="前驱节点代替"><a href="#前驱节点代替" class="headerlink" title="前驱节点代替"></a>前驱节点代替</h5><p>删除81 </p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801162647250.png" class="" title="image-20230801162647250"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801162659686.png" class="" title="image-20230801162659686"><h5 id="演变成第三种情况"><a href="#演变成第三种情况" class="headerlink" title="演变成第三种情况"></a>演变成第三种情况</h5><p>删除69</p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801162750471.png" class="" title="image-20230801162750471"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801162806340.png" class="" title="image-20230801162806340"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801162832236.png" class="" title="image-20230801162832236"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801162903362.png" class="" title="image-20230801162903362"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801162918763.png" class="" title="image-20230801162918763"><h3 id="B树总结"><a href="#B树总结" class="headerlink" title="B树总结"></a>B树总结</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731165341059.png" class="" title="image-20230731165341059"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230731165357748.png" class="" title="image-20230731165357748"><h2 id="B-树"><a href="#B-树" class="headerlink" title="B+树"></a>B+树</h2><h3 id="基本概念-4"><a href="#基本概念-4" class="headerlink" title="基本概念"></a>基本概念</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801182042112.png" class="" title="image-20230801182042112"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801170606162.png" class="" title="image-20230801170606162"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801163554157.png" class="" title="image-20230801163554157"><h3 id="基本性质"><a href="#基本性质" class="headerlink" title="基本性质"></a>基本性质</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801163605257.png" class="" title="image-20230801163605257"><h3 id="B树和B-树的对比"><a href="#B树和B-树的对比" class="headerlink" title="B树和B+树的对比"></a>B树和B+树的对比</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801170646639.png" class="" title="image-20230801170646639"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801170811636.png" class="" title="image-20230801170811636"><h2 id="散列表"><a href="#散列表" class="headerlink" title="散列表"></a>散列表</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801174257675.png" class="" title="image-20230801174257675"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801173213502.png" class="" title="image-20230801173213502"><h3 id="散列表的效率分析"><a href="#散列表的效率分析" class="headerlink" title="散列表的效率分析"></a>散列表的效率分析</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801175034103.png" class="" title="image-20230801175034103"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801175229018.png" class="" title="image-20230801175229018"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801175250599.png" class="" title="image-20230801175250599"><h3 id="散列函数的设计"><a href="#散列函数的设计" class="headerlink" title="散列函数的设计"></a>散列函数的设计</h3><h4 id="除留余数法"><a href="#除留余数法" class="headerlink" title="除留余数法"></a>除留余数法</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801175410487.png" class="" title="image-20230801175410487"><h5 id="链地址法"><a href="#链地址法" class="headerlink" title="链地址法"></a>链地址法</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230803153311778.png" class="" title="image-20230803153311778"><h5 id="开放定址法（最容易考）"><a href="#开放定址法（最容易考）" class="headerlink" title="开放定址法（最容易考）"></a>开放定址法（最容易考）</h5><h6 id="线性探测法"><a href="#线性探测法" class="headerlink" title="线性探测法"></a>线性探测法</h6><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801180755390.png" class="" title="image-20230801180755390"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801181141506.png" class="" title="image-20230801181141506"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/500fd9f9d72a605951bac546d222e597023bbae3.jpeg" class="" title="img"><h6 id="平方探测法"><a href="#平方探测法" class="headerlink" title="平方探测法"></a>平方探测法</h6><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801181352765.png" class="" title="image-20230801181352765"><h6 id="伪随机序列法"><a href="#伪随机序列法" class="headerlink" title="伪随机序列法"></a>伪随机序列法</h6><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801181434090.png" class="" title="image-20230801181434090"><h5 id="再散列"><a href="#再散列" class="headerlink" title="再散列"></a>再散列</h5><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801181510748.png" class="" title="image-20230801181510748"><h4 id="直接定址法（最常用）"><a href="#直接定址法（最常用）" class="headerlink" title="直接定址法（最常用）"></a>直接定址法（最常用）</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801175547578.png" class="" title="image-20230801175547578"><h4 id="数字分析法"><a href="#数字分析法" class="headerlink" title="数字分析法"></a>数字分析法</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801180520753.png" class="" title="image-20230801180520753"><h4 id="平方取中法"><a href="#平方取中法" class="headerlink" title="平方取中法"></a>平方取中法</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801180712477.png" class="" title="image-20230801180712477"><h4 id="随机数法"><a href="#随机数法" class="headerlink" title="随机数法"></a>随机数法</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801180727565.png" class="" title="image-20230801180727565"><h3 id="散列函数的设计原则"><a href="#散列函数的设计原则" class="headerlink" title="散列函数的设计原则"></a>散列函数的设计原则</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230801181528525.png" class="" title="image-20230801181528525"><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804150953194.png" class="" title="image-20230804150953194"><h2 id="基本概念-5"><a href="#基本概念-5" class="headerlink" title="基本概念"></a>基本概念</h2><p><strong>所有相等的数经过某种排序方法后，仍能保持它们在排序之前的相对次序，我们就说这种排序方法是稳定的。反之，就是非稳定的。</strong></p><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804151236294.png" class="" title="image-20230804151236294"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804151552957.png" class="" title="image-20230804151552957"><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><h3 id="直接插入排序"><a href="#直接插入排序" class="headerlink" title="直接插入排序"></a>直接插入排序</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804151643239.png" class="" title="image-20230804151643239"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804152524224.png" class="" title="image-20230804152524224"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804152644450.png" class="" title="image-20230804152644450"><h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804154229574.png" class="" title="image-20230804154229574"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804154951109.png" class="" title="image-20230804154951109"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804154823879.png" class="" title="image-20230804154823879"><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><h3 id="选择排序-1"><a href="#选择排序-1" class="headerlink" title="选择排序"></a>选择排序</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804153214722.png" class=""><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/9210c3dce60441ac978f419bcc8bfb68.png" class="" title="img"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804153427335.png" class="" title="image-20230804153427335"><h3 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h3><h4 id="大根堆"><a href="#大根堆" class="headerlink" title="大根堆"></a>大根堆</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804160342502.png" class="" title="image-20230804160342502"><h4 id="小根堆"><a href="#小根堆" class="headerlink" title="小根堆"></a>小根堆</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804160522003.png" class="" title="image-20230804160522003"><h4 id="排序思想"><a href="#排序思想" class="headerlink" title="排序思想"></a>排序思想</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804160557053.png" class="" title="image-20230804160557053"><h4 id="构造堆"><a href="#构造堆" class="headerlink" title="构造堆"></a>构造堆</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804160652600.png" class="" title="image-20230804160652600"><h4 id="构造大根堆"><a href="#构造大根堆" class="headerlink" title="构造大根堆"></a>构造大根堆</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804160825267.png" class="" title="image-20230804160825267"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804160839284.png" class="" title="image-20230804160839284"><h4 id="构造小根堆"><a href="#构造小根堆" class="headerlink" title="构造小根堆"></a>构造小根堆</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804160900757.png" class="" title="image-20230804160900757"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804160933258.png" class="" title="image-20230804160933258"><table><thead><tr><th>稳定性</th><th>不稳定</th></tr></thead><tbody><tr><td>时间复杂度</td><td>O(nlogn)</td></tr><tr><td>空间复杂度</td><td>O(1)</td></tr></tbody></table><h2 id="交换排序"><a href="#交换排序" class="headerlink" title="交换排序"></a>交换排序</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804153615188.png" class="" title="image-20230804153615188"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/277330-20200310110402028-1046542615.png" class="" title="img"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804154100493.png" class="" title="image-20230804154100493"><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804155141185.png" class="" title="image-20230804155141185"><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804155352690.png" class="" title="image-20230804155352690"><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804155405932.png" class="" title="image-20230804155405932"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804155721055.png" class="" title="image-20230804155721055"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804155733293.png" class="" title="image-20230804155733293"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804155818230.png" class="" title="image-20230804155818230"><h4 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h4><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804155901406.png" class="" title="image-20230804155901406">    <img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804160126689.png" class="" title="image-20230804160126689"><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804161130200.png" class="" title="image-20230804161130200"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804161238479.png" class="" title="image-20230804161238479"><img src="/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230804161354798.png" class="" title="image-20230804161354798">]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;线性表&quot;&gt;&lt;a href=&quot;#线性表&quot; class=&quot;headerlink&quot; title=&quot;线性表&quot;&gt;&lt;/a&gt;线性表&lt;/h1&gt;&lt;img src=&quot;/2023/06/29/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81/image-20230629174433552.png&quot; class title=&quot;image-20230629174433552&quot;&gt;

&lt;h2 id=&quot;顺序表&quot;&gt;&lt;a href=&quot;#顺序表&quot; class=&quot;headerlink&quot; title=&quot;顺序表&quot;&gt;&lt;/a&gt;顺序表&lt;/h2&gt;&lt;h3 id=&quot;顺序表的结构体定义及初始化&quot;&gt;&lt;a href=&quot;#顺序表的结构体定义及初始化&quot; class=&quot;headerlink&quot; title=&quot;顺序表的结构体定义及初始化&quot;&gt;&lt;/a&gt;顺序表的结构体定义及初始化&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//静态顺序表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; MaxSize 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; data[MaxSize];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;SqList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//初始化一个静态顺序表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;InitList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(SqList &amp;amp;L)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;MaxSize;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        L.data[i]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L.length=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//动态顺序表    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; InitSize 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; MaxSize;&lt;span class=&quot;comment&quot;&gt;//顺序表最大容量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length;&lt;span class=&quot;comment&quot;&gt;//顺序表当前长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;SeqList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//初始化一个动态顺序表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;InitList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(SeqList &amp;amp;L)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L.data=(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *)&lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(InitSize*&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L.length=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	L.MaxSize=InitSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//增加动态数组的长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IncreaseSize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(SeqList &amp;amp;L,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p=L.data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L.data=(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *)&lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;((InitSize+len)*&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//将数据复制到新区域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;L.length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        L.data[i]=p[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//顺序表最大长度增加len&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L.MaxSize=L.MaxSize+len;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;free&lt;/span&gt;(p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="考研" scheme="https://aiden-a.gitee.io/categories/%E8%80%83%E7%A0%94/"/>
    
    
  </entry>
  
  <entry>
    <title>搞定数据代码</title>
    <link href="https://aiden-a.gitee.io/2023/06/09/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/"/>
    <id>https://aiden-a.gitee.io/2023/06/09/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/</id>
    <published>2023-06-09T13:32:47.000Z</published>
    <updated>2023-06-29T08:46:53.020Z</updated>
    
    <content type="html"><![CDATA[<h1 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h1><h2 id="顺序表"><a href="#顺序表" class="headerlink" title="顺序表"></a>顺序表</h2><h3 id="顺序表的结构体定义及初始化"><a href="#顺序表的结构体定义及初始化" class="headerlink" title="顺序表的结构体定义及初始化"></a>顺序表的结构体定义及初始化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//静态顺序表</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MaxSize 10</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data[MaxSize];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化一个静态顺序表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(SqList &amp;L)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MaxSize;i++)&#123;</span><br><span class="line">        L.data[i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    L.length=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//动态顺序表    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> InitSize 10</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> *data;</span><br><span class="line">    <span class="keyword">int</span> MaxSize;<span class="comment">//顺序表最大容量</span></span><br><span class="line">    <span class="keyword">int</span> length;<span class="comment">//顺序表当前长度</span></span><br><span class="line">&#125;SeqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化一个动态顺序表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(SeqList &amp;L)</span></span>&#123;</span><br><span class="line">    L.data=(<span class="keyword">int</span> *)<span class="built_in">malloc</span>(InitSize*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    L.length=<span class="number">0</span>;</span><br><span class="line">  L.MaxSize=InitSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//增加动态数组的长度</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IncreaseSize</span><span class="params">(SeqList &amp;L,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *p=L.data;</span><br><span class="line">    L.data=(<span class="keyword">int</span> *)<span class="built_in">malloc</span>((InitSize+len)*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    <span class="comment">//将数据复制到新区域</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L.length;i++)&#123;</span><br><span class="line">        L.data[i]=p[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//顺序表最大长度增加len</span></span><br><span class="line">    L.MaxSize=L.MaxSize+len;</span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="顺序表的遍历及输出"><a href="#顺序表的遍历及输出" class="headerlink" title="顺序表的遍历及输出"></a>顺序表的遍历及输出</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顺序表的遍历及输出</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ListVisit</span><span class="params">(SqList L)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;L.length;k++)&#123;</span><br><span class="line"><span class="built_in">pring</span>(<span class="string">&quot;%d&quot;</span>,L.data[k])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找顺序表中值为e的数据元素所在位置"><a href="#查找顺序表中值为e的数据元素所在位置" class="headerlink" title="查找顺序表中值为e的数据元素所在位置"></a>查找顺序表中值为e的数据元素所在位置</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找顺序表中值为e的数据元素所在位置</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Search_e</span><span class="params">(SqList L, <span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; L.length; k++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L.data[k] == e) &#123;</span><br><span class="line">            <span class="keyword">return</span> k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找顺序表中第i个位置的数据元素值"><a href="#查找顺序表中第i个位置的数据元素值" class="headerlink" title="查找顺序表中第i个位置的数据元素值"></a>查找顺序表中第i个位置的数据元素值</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找顺序表中第i个位置的数据元素值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Get_i</span><span class="params">(SqList L, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= <span class="number">1</span> &amp;&amp; i &lt;= L.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> L.data[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序表的逆置"><a href="#顺序表的逆置" class="headerlink" title="顺序表的逆置"></a>顺序表的逆置</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顺序表的逆置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reverse</span><span class="params">(SqList &amp;L)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L.length / <span class="number">2</span>; i++) &#123;</span><br><span class="line">        temp = L.data[i];</span><br><span class="line">        L.data[i] = L.data[L.length - <span class="number">1</span> - i];</span><br><span class="line">        L.data[L.length - <span class="number">1</span> - i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序表中第i个位置插入元素e"><a href="#顺序表中第i个位置插入元素e" class="headerlink" title="顺序表中第i个位置插入元素e"></a>顺序表中第i个位置插入元素e</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顺序表中第i个位置插入元素e</span></span><br><span class="line"><span class="comment">//因为线性表长为 L.length 删除只能删除1到L.length上的东西</span></span><br><span class="line"><span class="comment">//插入可以插入第一个位置，也可以插入最后一个的后面所以是1~Llength+1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//顺序表中第i个位置插入元素e</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListInsert</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> i, <span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//判断i的范围是否有效</span></span><br><span class="line">    <span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L.length + <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//当前存储空间已满，不能插入</span></span><br><span class="line">    <span class="keyword">if</span> (L.length &gt;= MaxSize) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将i位置元素依次后移</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = L.length; j &gt;= i; j--) &#123;</span><br><span class="line">        L.data[j] = L.data[j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将e插入到i位置</span></span><br><span class="line">    L.data[i<span class="number">-1</span>] = e;</span><br><span class="line">    L.length += <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="有序顺序表插入元素x后依然有序"><a href="#有序顺序表插入元素x后依然有序" class="headerlink" title="有序顺序表插入元素x后依然有序"></a>有序顺序表插入元素x后依然有序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有序顺序表插入元素x后依然有序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ListInsert</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; L.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L.data[i] &gt; x) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = L.length; j &gt;= i + <span class="number">1</span>; j--) &#123;</span><br><span class="line">        L.data[j] = L.data[j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    L.data[i] = x;</span><br><span class="line">    L.length++;</span><br><span class="line">    <span class="comment">//返回插入位置的下标</span></span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序表中删除第i个位置的元素"><a href="#顺序表中删除第i个位置的元素" class="headerlink" title="顺序表中删除第i个位置的元素"></a>顺序表中删除第i个位置的元素</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顺序表中删除第i个位置的元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListDelete</span><span class="params">(SqList&amp; L, <span class="keyword">int</span> i, <span class="keyword">int</span>&amp; e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    e = L.data[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; L.length; j++) &#123;</span><br><span class="line">        L.data[j - <span class="number">1</span>] = L.data[j];</span><br><span class="line">    &#125;</span><br><span class="line">    L.length--;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序表中删除最小值"><a href="#顺序表中删除最小值" class="headerlink" title="顺序表中删除最小值"></a>顺序表中删除最小值</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顺序表中删除最小值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Del_Min</span><span class="params">(SqList&amp; L)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (L.length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//顺序表为空返回-1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> min = L.data[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; L.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L.data[i] &lt; min) &#123;</span><br><span class="line">            min = L.data[i];</span><br><span class="line">            pos = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = pos; j &lt; L.length - <span class="number">1</span>;j++) &#123;</span><br><span class="line">        L.data[j] = L.data[j + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    L.length--;</span><br><span class="line">    <span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序表删除所有值为x的元素"><a href="#顺序表删除所有值为x的元素" class="headerlink" title="顺序表删除所有值为x的元素"></a>顺序表删除所有值为x的元素</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><img src="/2023/06/09/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/image-20230613203457829.png" class="" title="image-20230613203457829"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法一</span></span><br><span class="line"><span class="comment">//每删除一个x元素，则该x后边的元素往前移动k+1个</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Del_x_1</span><span class="params">(SqList&amp; L, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) &#123; </span><br><span class="line">        <span class="keyword">if</span> (L.data[i] ==x) &#123;</span><br><span class="line">            k = k + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            L.data[i - k] = L.data[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    L.length = L.length - k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><img src="/2023/06/09/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/image-20230613210508093.png" class="" title="image-20230613210508093"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法二</span></span><br><span class="line"><span class="comment">//双指针</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Del_x_2</span><span class="params">(SqList&amp; L, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (L.data[i]!=x) &#123;</span><br><span class="line">            L.data[j] = L.data[i];</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    L.length = j;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序表删除所有值在s与t之间的元素"><a href="#顺序表删除所有值在s与t之间的元素" class="headerlink" title="顺序表删除所有值在s与t之间的元素"></a>顺序表删除所有值在s与t之间的元素</h3><h4 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h4><img src="/2023/06/09/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/image-20230613212114257.png" class="" title="image-20230613212114257"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//思想同上</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Del_s_t_1</span><span class="params">(SqList&amp; L, <span class="keyword">int</span> s, <span class="keyword">int</span> t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (L.length == <span class="number">0</span> || s&gt;=t) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L.data[i] &gt;= s &amp;&amp; L.data[i] &lt;= t) &#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            L.data[i - k] = L.data[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    L.length = L.length - k;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法二</span></span><br><span class="line"><span class="comment">//双指针思想同上</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Del_s_t_2</span><span class="params">(SqList&amp; L, <span class="keyword">int</span> s, <span class="keyword">int</span> t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (L.length == <span class="number">0</span> || s&gt;=t) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L.data[i] &lt; s || L.data[i] &gt; t) &#123;</span><br><span class="line">            L.data[j] = L.data[i];</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    L.length = j;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="有序顺序表中删除所有重复的元素"><a href="#有序顺序表中删除所有重复的元素" class="headerlink" title="有序顺序表中删除所有重复的元素"></a>有序顺序表中删除所有重复的元素</h3><img src="/2023/06/09/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/image-20230614205838689.png" class="" title="image-20230614205838689"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有序顺序表中删除所有重复的元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Del_Same</span><span class="params">(SqList&amp; L)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; L.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L.data[i] != L.data[j - <span class="number">1</span>]) &#123;</span><br><span class="line">            L.data[j] = L.data[i];</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    L.length = j;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="有序顺序表删除所有值在s与t之间的元素"><a href="#有序顺序表删除所有值在s与t之间的元素" class="headerlink" title="有序顺序表删除所有值在s与t之间的元素"></a>有序顺序表删除所有值在s与t之间的元素</h3><img src="/2023/06/09/%E8%80%83%E7%A0%94%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/%E6%90%9E%E5%AE%9A%E6%95%B0%E6%8D%AE%E4%BB%A3%E7%A0%81/image-20230614211533484.png" class="" title="image-20230614211533484"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有序顺序表删除所有值在s与t之间的元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Del_s_t</span><span class="params">(SqList&amp; L, <span class="keyword">int</span> s, <span class="keyword">int</span> t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (L.length == <span class="number">0</span> || s &gt;= t) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="comment">//经过此次循环j的值为大于等于s</span></span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; L.length &amp;&amp; L.data[j] &lt; s; j++);</span><br><span class="line">    <span class="keyword">if</span> (j == L.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//经过此次循环i的值大于t</span></span><br><span class="line">    <span class="keyword">for</span> (i = j; i &lt; L.length &amp;&amp; L.data[i] &lt;= t; i++);</span><br><span class="line">    <span class="comment">//从t后的第一个元素开始，将其后的元素统一向前挪</span></span><br><span class="line">    <span class="keyword">for</span> (i,j; i&lt;L.length&amp;&amp;j &lt; L.length; i++, j++) &#123;</span><br><span class="line">        L.data[j] = L.data[i];</span><br><span class="line">    &#125;</span><br><span class="line">    L.length = j;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="两个有序顺序表合并成为一个新的顺序表C"><a href="#两个有序顺序表合并成为一个新的顺序表C" class="headerlink" title="两个有序顺序表合并成为一个新的顺序表C"></a>两个有序顺序表合并成为一个新的顺序表C</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Merge</span><span class="params">(SqList A, SqList B, SqList&amp; C)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (A.length + B.length &gt; C.MaxSize) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; A.length &amp;&amp; j &lt; B.length) &#123;</span><br><span class="line">        <span class="keyword">if</span> (A.data[i] &lt; B.data[j]) &#123;</span><br><span class="line">            C.data[k] = A.data[i];</span><br><span class="line">            k++;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            C.data[k] = B.data[j];</span><br><span class="line">            k++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; A.length) &#123;</span><br><span class="line">        C.data[k] = A.data[i];</span><br><span class="line">        k++;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (j &lt; B.length) &#123;</span><br><span class="line">        C.data[k] = B.data[j];</span><br><span class="line">        k++;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    C.length = k;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><h3 id="单链表的结构体定义"><a href="#单链表的结构体定义" class="headerlink" title="单链表的结构体定义"></a>单链表的结构体定义</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;LNode ,*LinkList;  </span><br></pre></td></tr></table></figure><h3 id="单链表的遍历输出（带头节点"><a href="#单链表的遍历输出（带头节点" class="headerlink" title="单链表的遍历输出（带头节点)"></a>单链表的遍历输出（带头节点)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//遍历链表（带头结点）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ListVisit</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">    LNode* p = L-&gt;next;</span><br><span class="line">    <span class="comment">//p为遍历指针</span></span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, p-&gt;data);</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="带头结点的按位查找和按值查找"><a href="#带头结点的按位查找和按值查找" class="headerlink" title="带头结点的按位查找和按值查找"></a>带头结点的按位查找和按值查找</h3><h4 id="单链表的按位查找"><a href="#单链表的按位查找" class="headerlink" title="单链表的按位查找"></a>单链表的按位查找</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LNode* <span class="title">Search_i</span><span class="params">(LinkList L, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">1</span>;</span><br><span class="line">    LNode* p = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span> &amp;&amp; k &lt; i) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回查找到的节点</span></span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="单链表的按值查找"><a href="#单链表的按值查找" class="headerlink" title="单链表的按值查找"></a>单链表的按值查找</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LNode* <span class="title">Search_e</span><span class="params">(LinkList L, <span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">    LNode* p = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span> &amp;&amp; p-&gt;data != e) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回查找到的节点</span></span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="头插法建立单链表"><a href="#头插法建立单链表" class="headerlink" title="头插法建立单链表"></a>头插法建立单链表</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LinkList <span class="title">List_HeadInsert</span><span class="params">(LinkList&amp; L)</span> </span>&#123;</span><br><span class="line">    L = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">    <span class="comment">//头节点的next指针指向NULL必要</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>; </span><br><span class="line">    <span class="comment">//s为指向每次新创建节点的指针</span></span><br><span class="line">    LNode* s;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    <span class="keyword">while</span> (x != <span class="number">-1</span>) &#123;</span><br><span class="line">        s=(LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">        s-&gt;data = x;</span><br><span class="line">        <span class="comment">//头插法核心代码</span></span><br><span class="line">        s-&gt;next = L-&gt;next;</span><br><span class="line">        L-&gt;next = s;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="尾插法建立单链表"><a href="#尾插法建立单链表" class="headerlink" title="尾插法建立单链表"></a>尾插法建立单链表</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LinkList <span class="title">List_TailInsert</span><span class="params">(LinkList&amp; L)</span> </span>&#123;</span><br><span class="line">    L=(LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">    <span class="comment">//这里头节点的next指针是否指向NULL可有可无,尾部新插一个元素就没有null的事了</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">//r指针为指向最后一个节点的指针</span></span><br><span class="line">    LNode* s, * r = L;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    <span class="keyword">while</span> (x != <span class="number">-1</span>) &#123;</span><br><span class="line">        s=(LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">        s-&gt;data = x;</span><br><span class="line">        <span class="comment">//尾插法核心代码</span></span><br><span class="line">        r-&gt;next = s;</span><br><span class="line">        r = s;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建完成后尾部结点指针记得指向NULL</span></span><br><span class="line">    r-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="单链表的就地逆置"><a href="#单链表的就地逆置" class="headerlink" title="单链表的就地逆置"></a>单链表的就地逆置</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单链表的就地逆置（头插法实现）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reverse</span><span class="params">(LinkList&amp; L)</span></span>&#123;</span><br><span class="line">    <span class="comment">//p指向第一个节点(即从第一个节点开始遍历),r指针为防断链指针(断链了之后还能找到下个节点的位置)</span></span><br><span class="line">    LNode* p = L-&gt;next, * r;</span><br><span class="line">    <span class="comment">//头节点先和后边的节点先断开</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        r = p-&gt;next;</span><br><span class="line">        p-&gt;next = L-&gt;next;</span><br><span class="line">        L-&gt;next = p;</span><br><span class="line">        p = r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="将一个单链表分解成两个单链表且相对顺序不变"><a href="#将一个单链表分解成两个单链表且相对顺序不变" class="headerlink" title="将一个单链表分解成两个单链表且相对顺序不变"></a>将一个单链表分解成两个单链表且相对顺序不变</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将一个单链表分解成两个单链表且相对顺序不变</span></span><br><span class="line"><span class="function">LinkList <span class="title">Create_A_B</span><span class="params">(LinkList &amp;A)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//B表初始化</span></span><br><span class="line">    LinkList B = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">    B-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">//通过尾插法来实现相对顺序不变，故ra为A表的尾指针 rb为B表的尾指针</span></span><br><span class="line">    LNode* p = A-&gt;next, * ra = A, * rb = B;</span><br><span class="line">    <span class="comment">//A表断开</span></span><br><span class="line">    A-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        ra-&gt;next = p;</span><br><span class="line">        ra = p;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        <span class="comment">//考虑整个链表只有奇数个的情况</span></span><br><span class="line">        <span class="keyword">if</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            rb-&gt;next = p;</span><br><span class="line">            rb = p;</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ra-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    rb-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">//返回B链表</span></span><br><span class="line">    <span class="keyword">return</span> B;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;线性表&quot;&gt;&lt;a href=&quot;#线性表&quot; class=&quot;headerlink&quot; title=&quot;线性表&quot;&gt;&lt;/a&gt;线性表&lt;/h1&gt;&lt;h2 id=&quot;顺序表&quot;&gt;&lt;a href=&quot;#顺序表&quot; class=&quot;headerlink&quot; title=&quot;顺序表&quot;&gt;&lt;/a&gt;顺序表&lt;/h2&gt;&lt;h3 id=&quot;顺序表的结构体定义及初始化&quot;&gt;&lt;a href=&quot;#顺序表的结构体定义及初始化&quot; class=&quot;headerlink&quot; title=&quot;顺序表的结构体定义及初始化&quot;&gt;&lt;/a&gt;顺序表的结构体定义及初始化&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//静态顺序表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; MaxSize 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; data[MaxSize];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;SqList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//初始化一个静态顺序表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;InitList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(SqList &amp;amp;L)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;MaxSize;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        L.data[i]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L.length=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//动态顺序表    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; InitSize 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; MaxSize;&lt;span class=&quot;comment&quot;&gt;//顺序表最大容量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length;&lt;span class=&quot;comment&quot;&gt;//顺序表当前长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;SeqList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//初始化一个动态顺序表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;InitList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(SeqList &amp;amp;L)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L.data=(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *)&lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(InitSize*&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L.length=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	L.MaxSize=InitSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//增加动态数组的长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IncreaseSize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(SeqList &amp;amp;L,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p=L.data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L.data=(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *)&lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;((InitSize+len)*&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//将数据复制到新区域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;L.length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        L.data[i]=p[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//顺序表最大长度增加len&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L.MaxSize=L.MaxSize+len;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;free&lt;/span&gt;(p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;顺序表的遍历及输出&quot;&gt;&lt;a href=&quot;#顺序表的遍历及输出&quot; class=&quot;headerlink&quot; title=&quot;顺序表的遍历及输出&quot;&gt;&lt;/a&gt;顺序表的遍历及输出&lt;/h3&gt;</summary>
    
    
    
    <category term="数据结构" scheme="https://aiden-a.gitee.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringMVC笔记</title>
    <link href="https://aiden-a.gitee.io/2023/02/12/SSM%E7%AC%94%E8%AE%B0/SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC%E7%AC%94%E8%AE%B0/"/>
    <id>https://aiden-a.gitee.io/2023/02/12/SSM%E7%AC%94%E8%AE%B0/SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC%E7%AC%94%E8%AE%B0/</id>
    <published>2023-02-12T08:20:59.000Z</published>
    <updated>2023-02-18T07:38:57.336Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Spring-MVC"><a href="#Spring-MVC" class="headerlink" title="Spring MVC"></a>Spring MVC</h3><p>Spring MVC 是目前主流的实现 MVC 设计模式的企业级开发框架，Spring 框架的一个子模块，无需整合，开发起来更加便捷。</p><h4 id="什么是-MVC-设计模式？"><a href="#什么是-MVC-设计模式？" class="headerlink" title="什么是 MVC 设计模式？"></a>什么是 MVC 设计模式？</h4><p>将应用程序分为 Controller、Model、View 三层，Controller 接收客户端请求，调用 Model 生成业务数据，传递给 View。</p><p>Spring MVC 就是对这套流程的封装，屏蔽了很多底层代码，开放出接口，让开发者可以更加轻松、便捷地完成基于 MVC 模式的 Web 开发。</p><h4 id="Spring-MVC-的核心组件"><a href="#Spring-MVC-的核心组件" class="headerlink" title="Spring MVC 的核心组件"></a>Spring MVC 的核心组件</h4><ul><li>DispatcherServlet：前置控制器，是整个流程控制的核心，控制其他组件的执行，进行统一调度，降低组件之间的耦合性，相当于总指挥。</li><li>Handler：处理器，完成具体的业务逻辑，相当于 Servlet 或 Action。</li><li>HandlerMapping：DispatcherServlet 接收到请求之后，通过 HandlerMapping 将不同的请求映射到不同的 Handler。</li><li>HandlerInterceptor：处理器拦截器，是一个接口，如果需要完成一些拦截处理，可以实现该接口。</li><li>HandlerExecutionChain：处理器执行链，包括两部分内容：Handler 和 HandlerInterceptor（系统会有一个默认的 HandlerInterceptor，如果需要额外设置拦截，可以添加拦截器）。</li><li>HandlerAdapter：处理器适配器，Handler 执行业务方法之前，需要进行一系列的操作，包括表单数据的验证、数据类型的转换、将表单数据封装到 JavaBean 等，这些操作都是由 HandlerApater 来完成，开发者只需将注意力集中业务逻辑的处理上，DispatcherServlet 通过 HandlerAdapter 执行不同的 Handler。</li><li>ModelAndView：装载了模型数据和视图信息，作为 Handler 的处理结果，返回给 DispatcherServlet。</li><li>ViewResolver：视图解析器，DispatcheServlet 通过它将逻辑视图解析为物理视图，最终将渲染结果响应给客户端。</li></ul><h4 id="Spring-MVC-的工作流程"><a href="#Spring-MVC-的工作流程" class="headerlink" title="Spring MVC 的工作流程"></a>Spring MVC 的工作流程</h4><ul><li>客户端请求被 DisptacherServlet 接收。</li><li>根据 HandlerMapping 映射到 Handler。</li><li>生成 Handler 和 HandlerInterceptor。</li><li>Handler 和 HandlerInterceptor 以 HandlerExecutionChain 的形式一并返回给 DisptacherServlet。</li><li>DispatcherServlet 通过 HandlerAdapter 调用 Handler 的方法完成业务逻辑处理。</li><li>Handler 返回一个 ModelAndView 给 DispatcherServlet。</li><li>DispatcherServlet 将获取的 ModelAndView 对象传给 ViewResolver 视图解析器，将逻辑视图解析为物理视图 View。</li><li>ViewResovler 返回一个 View 给 DispatcherServlet。</li><li>DispatcherServlet 根据 View 进行视图渲染（将模型数据 Model 填充到视图 View 中）。</li><li>DispatcherServlet 将渲染后的结果响应给客户端。</li></ul><img src="/2023/02/12/SSM%E7%AC%94%E8%AE%B0/SpringMVC%E7%AC%94%E8%AE%B0/SpringMVC%E7%AC%94%E8%AE%B0/image-20230212161405071.png" class="" title="image-20230212161405071"><p>Spring MVC 流程非常复杂，实际开发中很简单，因为大部分的组件不需要开发者创建、管理，只需要通过配置文件的方式完成配置即可，真正需要开发者进行处理的只有 Handler 、View。 </p><h4 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h4><ul><li>创建 Maven 工程，pom.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.11.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在 web.xml 中配置 DispatcherServlet。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>springmvc.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.southwind&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>创建 Handler</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行了index...&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Spring-MVC-注解"><a href="#Spring-MVC-注解" class="headerlink" title="Spring MVC 注解"></a>Spring MVC 注解</h3><ul><li>@RequestMapping </li></ul><p>Spring MVC 通过 @RequestMapping 注解将 URL 请求与业务方法进行映射，在 Handler 的类定义处以及方法定义处都可以添加 @RequestMapping ，在类定义处添加，相当于客户端多了一层访问路径。</p><ul><li>@Controller</li></ul><p>@Controller 在类定义处添加，将该类交个 IoC 容器来管理（结合 springmvc.xml 的自动扫描配置使用），同时使其成为一个控制器，可以接收客户端请求。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行了index...&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>@RequestMapping 相关参数</li></ul><p>1、value：指定 URL 请求的实际地址，是 @RequestMapping 的默认值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了index...&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>等于</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/index&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了index...&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、method：指定请求的 method 类型，GET、POST、PUT、DELET。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/index&quot;,method = RequestMethod.GET)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了index...&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码表示 index 方法只能接收 GET 请求。</p><p>3、params：指定请求中必须包含某些参数，否则无法调用该方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/index&quot;,method = RequestMethod.GET,params = &#123;&quot;name&quot;,&quot;id=10&quot;&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了index...&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码表示请求中必须包含 name 和 id 两个参数，同时 id 的值必须是 10。</p><p>关于参数绑定，在形参列表中通过添加 @RequestParam 注解完成 HTTP 请求参数与业务方法形参的映射。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/index&quot;,method = RequestMethod.GET,params = &#123;&quot;name&quot;,&quot;id=10&quot;&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(<span class="meta">@RequestParam(&quot;name&quot;)</span> String str,<span class="meta">@RequestParam(&quot;id&quot;)</span> <span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">    System.out.println(str);</span><br><span class="line">    System.out.println(age);</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了index...&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码表示将请求的参数 name 和 id 分别赋给了形参 str 和 age ，同时自动完成了数据类型转换，将 “10” 转为了 int 类型的 10，再赋给 age，这些工作都是由 HandlerAdapter 来完成的。</p><p>Spring MVC 也支持 RESTful 风格的 URL。</p><p>传统类型：<a href="http://localhost:8080/hello/index?name=zhangsan&amp;id=10">http://localhost:8080/hello/index?name=zhangsan&amp;id=10</a></p><p>REST：<a href="http://localhost:8080/hello/index/zhangsan/10">http://localhost:8080/hello/index/zhangsan/10</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/rest/&#123;name&#125;/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">rest</span><span class="params">(<span class="meta">@PathVariable(&quot;name&quot;)</span> String name,<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">    System.out.println(name);</span><br><span class="line">    System.out.println(id);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过 @PathVariable 注解完成请求参数与形参的映射。</p><ul><li>映射 Cookie</li></ul><p>Spring MVC 通过映射可以直接在业务方法中获取 Cookie 的值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/cookie&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">cookie</span><span class="params">(<span class="meta">@CookieValue(value = &quot;JSESSIONID&quot;)</span> String sessionId)</span></span>&#123;</span><br><span class="line">    System.out.println(sessionId);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用 JavaBean 绑定参数</li></ul><p>Spring MVC 会根据请求参数名和 JavaBean 属性名进行自动匹配，自动为对象填充属性值，同时支持及联属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">13</span></span><br><span class="line">  Time: <span class="number">15</span>:<span class="number">33</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/hello/save&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        用户id：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;id&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;name&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户地址：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;address.value&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;注册&quot;</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/save&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果出现中文乱码问题，只需在 web.xml 添加 Spring MVC 自带的过滤器即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>JSP 页面的转发和重定向：</li></ul><p>Spring MVC 默认是以转发的形式响应 JSP。</p><p>1、转发</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/forward&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">forward</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;forward:/index.jsp&quot;</span>;</span><br><span class="line">    <span class="comment">//        return &quot;index&quot;;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、重定向</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/redirect&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">redirect</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:/index.jsp&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Spring-MVC-数据绑定"><a href="#Spring-MVC-数据绑定" class="headerlink" title="Spring MVC 数据绑定"></a>Spring MVC 数据绑定</h3><p>数据绑定：在后端的业务方法中直接获取客户端 HTTP 请求中的参数，将请求参数映射到业务方法的形参中，Spring MVC 中数据绑定的工作是由 HandlerAdapter 来完成的。</p><ul><li>基本数据类型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/baseType&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">baseType</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> id+<span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@ResponseBody 表示 Spring MVC 会直接将业务方法的返回值响应给客户端，如果不加 @ResponseBody 注解，Spring MVC 会将业务方法的放回值传递给 DispatcherServlet，再由 DisptacherServlet 调用 ViewResolver 对返回值进行解析，映射到一个 JSP 资源。</p><ul><li>包装类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/packageType&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">packageType</span><span class="params">(<span class="meta">@RequestParam(value = &quot;num&quot;,required = false,defaultValue = &quot;0&quot;)</span> Integer id)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> id+<span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>包装类可以接收 null，当 HTTP 请求没有参数时，使用包装类定义形参的数据类型，程序不会抛出异常。</p><p>@RequestParam</p><p>value = “num”：将 HTTP 请求中名为 num 的参数赋给形参 id。</p><p>requried：设置 num 是否为必填项，true 表示必填，false 表示非必填，可省略。</p><p>defaultValue = “0”：如果 HTTP 请求中没有 num 参数，默认值为0.</p><ul><li>数组</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/data&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataBindHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/array&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">array</span><span class="params">(String[] name)</span></span>&#123;</span><br><span class="line">        String str = Arrays.toString(name);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@RestController 表示该控制器会直接将业务方法的返回值响应给客户端，不进行视图解析。</p><p>@Controller 表示该控制器的每一个业务方法的返回值都会交给视图解析器进行解析，如果只需要将数据响应给客户端，而不需要进行视图解析，则需要在对应的业务方法定义处添加 @ResponseBody。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/data&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataBindHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/array&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">array</span><span class="params">(String[] name)</span></span>&#123;</span><br><span class="line">        String str = Arrays.toString(name);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>等同于</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/data&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataBindHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/array&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">array</span><span class="params">(String[] name)</span></span>&#123;</span><br><span class="line">        String str = Arrays.toString(name);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>List</li></ul><p>Spring MVC 不支持 List 类型的直接转换，需要对 List 集合进行包装。</p><p>集合封装类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;User&gt; users;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JSP</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: 09:<span class="number">12</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/data/list&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        用户<span class="number">1</span>编号：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[0].id&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">1</span>名称：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[0].name&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">2</span>编号：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[1].id&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">2</span>名称：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[1].name&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">3</span>编号：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[2].id&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">3</span>名称：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[2].name&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>业务方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">list</span><span class="params">(UserList userList)</span></span>&#123;</span><br><span class="line">    StringBuffer str = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    <span class="keyword">for</span>(User user:userList.getUsers())&#123;</span><br><span class="line">        str.append(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>处理 @ResponseBody 中文乱码，在 springmvc.xml 中配置消息转换器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在springmvc.xml文件中添加注解驱动<span class="tag">&lt;<span class="name">mvc:annotationdriven</span>/&gt;</span>,它用来解析@ResponseBody注解</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 消息转换器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span> <span class="attr">value</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Map</li></ul><p>自定义封装类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMap</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,User&gt; users;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>业务方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/map&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">map</span><span class="params">(UserMap userMap)</span></span>&#123;</span><br><span class="line">    StringBuffer str = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    <span class="keyword">for</span>(String key:userMap.getUsers().keySet())&#123;</span><br><span class="line">        User user = userMap.getUsers().get(key);</span><br><span class="line">        str.append(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JSP</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: 09:<span class="number">12</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/data/map&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        用户<span class="number">1</span>编号：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[&#x27;a&#x27;].id&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">1</span>名称：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[&#x27;a&#x27;].name&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">2</span>编号：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[&#x27;b&#x27;].id&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">2</span>名称：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[&#x27;b&#x27;].name&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">3</span>编号：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[&#x27;c&#x27;].id&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        用户<span class="number">3</span>名称：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;users[&#x27;c&#x27;].name&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>JSON</li></ul><p>客户端发生 JSON 格式的数据，直接通过 Spring MVC 绑定到业务方法的形参中。</p><p>处理 Spring MVC 无法加载静态资源，在 web.xml 中添加配置即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.js<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JSP</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">35</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;js/jquery-3.3.1.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">        $(function()&#123;</span><br><span class="line">           <span class="keyword">var</span> user = &#123;</span><br><span class="line">               <span class="string">&quot;id&quot;</span>:<span class="number">1</span>,</span><br><span class="line">               <span class="string">&quot;name&quot;</span>:<span class="string">&quot;张三&quot;</span></span><br><span class="line">           &#125;;</span><br><span class="line">           $.ajax(&#123;</span><br><span class="line">               url:<span class="string">&quot;/data/json&quot;</span>,</span><br><span class="line">               data:JSON.stringify(user),</span><br><span class="line">               type:<span class="string">&quot;POST&quot;</span>,</span><br><span class="line">               contentType:<span class="string">&quot;application/json;charset=UTF-8&quot;</span>,</span><br><span class="line">               dataType:<span class="string">&quot;JSON&quot;</span>,</span><br><span class="line">               success:function(data)&#123;</span><br><span class="line">                   alert(data.id+<span class="string">&quot;---&quot;</span>+data.name);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>业务方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/json&quot;)</span></span><br><span class="line"><span class="comment">//@RequestBody主要用来接收前端传递给后端的json字符串中的数据的(请求体中的数据的)，一般都用POST方式进行提交</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">json</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span></span>&#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    user.setId(<span class="number">6</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张六&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Spring MVC 中的 JSON 和 JavaBean 的转换需要借助于 fastjson，pom.xml 引入相关依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.32<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>springmvc.xml 添加 fastjson 配置。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 消息转换器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span> <span class="attr">value</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置fastjson --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Spring-MVC-模型数据解析"><a href="#Spring-MVC-模型数据解析" class="headerlink" title="Spring MVC 模型数据解析"></a>Spring MVC 模型数据解析</h3><p>JSP 四大作用域对应的内置对象：pageContext、request、session、application。</p><p>模型数据的绑定是由 ViewResolver 来完成的，实际开发中，我们需要先添加模型数据，再交给 ViewResolver 来绑定。</p><p>Spring MVC 提供了以下几种方式添加模型数据：</p><ul><li>Map</li><li>Model</li><li>ModelAndView</li><li>@SessionAttribute</li><li>@ModelAttribute</li></ul><blockquote><p>将模式数据绑定到 request 对象。</p></blockquote><p>1、Map</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/map&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">map</span><span class="params">(Map&lt;String,User&gt; map)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;view&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JSP</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: <span class="number">11</span>:<span class="number">36</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line"><span class="comment">//&lt;%@ page isELIgnored=&quot;false&quot;%&gt;的作用：</span></span><br><span class="line">在每个JSP中可以指定该JSP是否使用EL。在page directive中的isELIgnored属性用来指定是否忽略。格式为：</span><br><span class="line"></span><br><span class="line">＜%@ page isELIgnored＝<span class="string">&quot;true|false&quot;</span>%＞</span><br><span class="line"></span><br><span class="line">如果设定为<span class="keyword">true</span>，也就是EL被忽略，那么JSP中的表达式被当成字符串处理。</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    $&#123;requestScope.user&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>2、Model</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/model&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">model</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    model.addAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;view&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、ModelAndView</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/modelAndView&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">    modelAndView.addObject(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    modelAndView.setViewName(<span class="string">&quot;view&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/modelAndView2&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">    modelAndView.addObject(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    View view = <span class="keyword">new</span> InternalResourceView(<span class="string">&quot;/view.jsp&quot;</span>);</span><br><span class="line">    modelAndView.setView(view);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/modelAndView3&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView3</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(<span class="string">&quot;view&quot;</span>);</span><br><span class="line">    modelAndView.addObject(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/modelAndView4&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView4</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    View view = <span class="keyword">new</span> InternalResourceView(<span class="string">&quot;/view.jsp&quot;</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(view);</span><br><span class="line">    modelAndView.addObject(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/modelAndView5&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView5</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    Map&lt;String,User&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(<span class="string">&quot;view&quot;</span>,map);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/modelAndView6&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView6</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    Map&lt;String,User&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    View view = <span class="keyword">new</span> InternalResourceView(<span class="string">&quot;/view.jsp&quot;</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(view,map);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/modelAndView7&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView7</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(<span class="string">&quot;view&quot;</span>,<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/modelAndView8&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modelAndView8</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    View view = <span class="keyword">new</span> InternalResourceView(<span class="string">&quot;/view.jsp&quot;</span>);</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(view,<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、HttpServletRequest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/request&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">request</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    request.setAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;view&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、@ModelAttribute</p><ul><li>定义一个方法，该方法专门用来返回要填充到模型数据中的对象。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="comment">//@ModelAttribute注解在方法上。@ModelAttribute注解的方法会在Controller每个方法执行前被调用</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">(Map&lt;String,User&gt; map)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    model.addAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>业务方法中无需再处理模型数据，只需返回视图即可。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/modelAttribute&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">modelAttribute</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;view&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>将模型数据绑定到 session 对象</p></blockquote><p>1、直接使用原生的 Servlet API。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/session&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">session</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    HttpSession session = request.getSession();</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    session.setAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;view&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/session2&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">session2</span><span class="params">(HttpSession session)</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    session.setAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;view&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、@SessionAttribute</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SessionAttributes(value = &#123;&quot;user&quot;,&quot;address&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHandler</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于 ViewHandler 中的所有业务方法，只要向 request 中添加了 key = “user”、key = “address” 的对象时，Spring MVC 会自动将该数据添加到 session 中，保存 key 不变。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SessionAttributes(types = &#123;User.class,Address.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHandler</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于 ViewHandler 中的所有业务方法，只要向 request 中添加了数据类型是 User 、Address 的对象时，Spring MVC 会自动将该数据添加到 session 中，保存 key 不变。</p><blockquote><p>将模型数据绑定到 application 对象</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/application&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">application</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    ServletContext application = request.getServletContext();</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1L</span>);</span><br><span class="line">    user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    application.setAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;view&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Spring-MVC-自定义数据转换器"><a href="#Spring-MVC-自定义数据转换器" class="headerlink" title="Spring MVC 自定义数据转换器"></a>Spring MVC 自定义数据转换器</h3><p>数据转换器是指将客户端 HTTP 请求中的参数转换为业务方法中定义的形参，自定义表示开发者可以自主设计转换的方式，HandlerApdter 已经提供了通用的转换，String 转 int，String 转 double，表单数据的封装等，但是在特殊的业务场景下，HandlerAdapter 无法进行转换，就需要开发者自定义转换器。</p><p>客户端输入 String 类型的数据 “2019-03-03”，自定义转换器将该数据转为 Date 类型的对象。</p><ul><li>创建 DateConverter 转换器，实现 Conveter 接口。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.converter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.core.convert.converter.Converter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateConverter</span> <span class="keyword">implements</span> <span class="title">Converter</span>&lt;<span class="title">String</span>, <span class="title">Date</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String pattern;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DateConverter</span><span class="params">(String pattern)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pattern = pattern;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">convert</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="keyword">this</span>.pattern);</span><br><span class="line">        Date date = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            date = simpleDateFormat.parse(s);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>springmvc.xml 配置转换器。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置自定义转换器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;conversionService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.context.support.ConversionServiceFactoryBean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;converters&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.converter.DateConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;yyyy-MM-dd&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">&quot;conversionService&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 消息转换器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span> <span class="attr">value</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置fastjson --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>JSP</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: <span class="number">14</span>:<span class="number">47</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/converter/date&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        请输入日期:&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;date&quot;</span>/&gt;(yyyy-MM-dd)&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>Handler</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/converter&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConverterHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/date&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">date</span><span class="params">(Date date)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> date.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>String 转 Student</p><p>StudentConverter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.converter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.convert.converter.Converter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentConverter</span> <span class="keyword">implements</span> <span class="title">Converter</span>&lt;<span class="title">String</span>, <span class="title">Student</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">convert</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        String[] args = s.split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        student.setId(Long.parseLong(args[<span class="number">0</span>]));</span><br><span class="line">        student.setName(args[<span class="number">1</span>]);</span><br><span class="line">        student.setAge(Integer.parseInt(args[<span class="number">2</span>]));</span><br><span class="line">        <span class="keyword">return</span> student;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>springmvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置自定义转换器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;conversionService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.context.support.ConversionServiceFactoryBean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;converters&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.converter.DateConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;yyyy-MM-dd&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.converter.StudentConverter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">&quot;conversionService&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 消息转换器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span> <span class="attr">value</span>=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置fastjson --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JSP</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">14</span></span><br><span class="line">  Time: <span class="number">15</span>:<span class="number">23</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/converter/student&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        请输入学生信息：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;student&quot;</span>/&gt;(id-name-age)&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>Handler</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/student&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">student</span><span class="params">(Student student)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> student.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Spring-MVC-REST"><a href="#Spring-MVC-REST" class="headerlink" title="Spring MVC REST"></a>Spring MVC REST</h3><p>REST：Representational State Transfer，资源表现层状态转换，是目前比较主流的一种互联网软件架构，它结构清晰、标准规范、易于理解、便于扩展。</p><ul><li>资源（Resource）</li></ul><p>网络上的一个实体，或者说网络中存在的一个具体信息，一段文本、一张图片、一首歌曲、一段视频等等，总之就是一个具体的存在。可以用一个 URI（统一资源定位符）指向它，每个资源都有对应的一个特定的 URI，要获取该资源时，只需要访问对应的 URI 即可。</p><ul><li>表现层（Representation）</li></ul><p>资源具体呈现出来的形式，比如文本可以用 txt 格式表示，也可以用 HTML、XML、JSON等格式来表示。</p><ul><li>状态转换（State Transfer）</li></ul><p>客户端如果希望操作服务器中的某个资源，就需要通过某种方式让服务端发生状态转换，而这种转换是建立在表现层之上的，所有叫做”表现层状态转换”。</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>URL 更加简洁。</li><li>有利于不同系统之间的资源共享，只需要遵守一定的规范，不需要进行其他配置即可实现资源共享。</li></ul><h4 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h4><p>REST 具体操作就是 HTTP 协议中四个表示操作方式的动词分别对应 CRUD 基本操作。</p><p>GET 用来表示获取资源。</p><p>POST 用来表示新建资源。</p><p>PUT 用来表示修改资源。</p><p>DELETE 用来表示删除资源。</p><p>Handler</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Student;</span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.southwind.repository.StudentRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/rest&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RESTHandeler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StudentRepository studentRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/findAll&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Student&gt; <span class="title">findAll</span><span class="params">(HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/json;charset=UTF-8&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> studentRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/findById/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">long</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentRepository.findById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(<span class="meta">@RequestBody</span> Student student)</span></span>&#123;</span><br><span class="line">        studentRepository.saveOrUpdate(student);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping(&quot;/update&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="meta">@RequestBody</span> Student student)</span></span>&#123;</span><br><span class="line">        studentRepository.saveOrUpdate(student);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/deleteById/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">long</span> id)</span></span>&#123;</span><br><span class="line">        studentRepository.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>StudentRepository</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentRepository</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Student&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveOrUpdate</span><span class="params">(Student student)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>StudentRepositoryImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.repository.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Student;</span><br><span class="line"><span class="keyword">import</span> com.southwind.repository.StudentRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentRepositoryImpl</span> <span class="keyword">implements</span> <span class="title">StudentRepository</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Long,Student&gt; studentMap;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        studentMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        studentMap.put(<span class="number">1L</span>,<span class="keyword">new</span> Student(<span class="number">1L</span>,<span class="string">&quot;张三&quot;</span>,<span class="number">22</span>));</span><br><span class="line">        studentMap.put(<span class="number">2L</span>,<span class="keyword">new</span> Student(<span class="number">2L</span>,<span class="string">&quot;李四&quot;</span>,<span class="number">23</span>));</span><br><span class="line">        studentMap.put(<span class="number">3L</span>,<span class="keyword">new</span> Student(<span class="number">3L</span>,<span class="string">&quot;王五&quot;</span>,<span class="number">24</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Student&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentMap.values();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentMap.get(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveOrUpdate</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        studentMap.put(student.getId(),student);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">        studentMap.remove(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Spring-MVC-文件上传下载"><a href="#Spring-MVC-文件上传下载" class="headerlink" title="Spring MVC 文件上传下载"></a>Spring MVC 文件上传下载</h3><blockquote><p>单文件上传</p></blockquote><p>底层是使用 Apache fileupload 组件完成上传，Spring MVC 对这种方式进行了封装。</p><ul><li>pom.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>JSP</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">15</span></span><br><span class="line">  Time: 09:09</span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/file/upload&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;img&quot;</span>/&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;img src=<span class="string">&quot;$&#123;path&#125;&quot;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>1、input 的 type 设置为 file。</p><p>2、form 的 method 设置为 post（get 请求只能将文件名传给服务器）</p><p>3、from 的 enctype 设置为 multipart-form-data（如果不设置只能将文件名传给服务器）</p><ul><li>Handler</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/file&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">(MultipartFile img, HttpServletRequest request)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(img.getSize()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//获取保存上传文件的file路径</span></span><br><span class="line">            String path = request.getServletContext().getRealPath(<span class="string">&quot;file&quot;</span>);</span><br><span class="line">            <span class="comment">//获取上传的文件名</span></span><br><span class="line">            String name = img.getOriginalFilename();</span><br><span class="line">            File file = <span class="keyword">new</span> File(path,name);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                img.transferTo(file);</span><br><span class="line">                <span class="comment">//保存上传之后的文件路径</span></span><br><span class="line">                request.setAttribute(<span class="string">&quot;path&quot;</span>,<span class="string">&quot;/file/&quot;</span>+name);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;upload&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>springmvc.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置上传组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>web.xml 添加如下配置，否则客户端无法访问 png</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.png<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>多文件上传</p></blockquote><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JSP</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">15</span></span><br><span class="line">  Time: 09:<span class="number">32</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/file/uploads&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">        file1:&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;imgs&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        file2:&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;imgs&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        file3:&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;imgs&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;c:forEach items=<span class="string">&quot;$&#123;files&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;file&quot;</span> &gt;</span><br><span class="line">        &lt;img src=<span class="string">&quot;$&#123;file&#125;&quot;</span> width=<span class="string">&quot;300px&quot;</span>&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>Handler</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/uploads&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">uploads</span><span class="params">(MultipartFile[] imgs,HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    List&lt;String&gt; files = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (MultipartFile img:imgs)&#123;</span><br><span class="line">        <span class="keyword">if</span>(img.getSize()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//获取保存上传文件的file路径</span></span><br><span class="line">            String path = request.getServletContext().getRealPath(<span class="string">&quot;file&quot;</span>);</span><br><span class="line">            <span class="comment">//获取上传的文件名</span></span><br><span class="line">            String name = img.getOriginalFilename();</span><br><span class="line">            File file = <span class="keyword">new</span> File(path,name);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                img.transferTo(file);</span><br><span class="line">                <span class="comment">//保存上传之后的文件路径</span></span><br><span class="line">                files.add(<span class="string">&quot;/file/&quot;</span>+name);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    request.setAttribute(<span class="string">&quot;files&quot;</span>,files);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;uploads&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>下载</p></blockquote><ul><li>JSP</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">15</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">36</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;/file/download/1&quot;</span>&gt;<span class="number">1.</span>png&lt;/a&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;/file/download/2&quot;</span>&gt;<span class="number">2.</span>png&lt;/a&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;/file/download/3&quot;</span>&gt;<span class="number">3.</span>png&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>Handler</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/download/&#123;name&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(<span class="meta">@PathVariable(&quot;name&quot;)</span> String name, HttpServletRequest request, HttpServletResponse response)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(name != <span class="keyword">null</span>)&#123;</span><br><span class="line">        name += <span class="string">&quot;.png&quot;</span>;</span><br><span class="line">        String path = request.getServletContext().getRealPath(<span class="string">&quot;file&quot;</span>);</span><br><span class="line">        File file = <span class="keyword">new</span> File(path,name);</span><br><span class="line">        OutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(file.exists())&#123;</span><br><span class="line">            response.setContentType(<span class="string">&quot;application/forc-download&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>,<span class="string">&quot;attachment;filename=&quot;</span>+name);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                outputStream = response.getOutputStream();</span><br><span class="line">                outputStream.write(FileUtils.readFileToByteArray(file));</span><br><span class="line">                outputStream.flush();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(outputStream != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        outputStream.close();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Spring-MVC-表单标签库"><a href="#Spring-MVC-表单标签库" class="headerlink" title="Spring MVC 表单标签库"></a>Spring MVC 表单标签库</h3><ul><li>Handler</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/get&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">get</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(<span class="string">&quot;tag&quot;</span>);</span><br><span class="line">    Student student = <span class="keyword">new</span> Student(<span class="number">1L</span>,<span class="string">&quot;张三&quot;</span>,<span class="number">22</span>);</span><br><span class="line">    modelAndView.addObject(<span class="string">&quot;student&quot;</span>,student);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>JSP</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">15</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">53</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;form&quot;</span> uri=<span class="string">&quot;http://www.springframework.org/tags/form&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;学生信息&lt;/h1&gt;</span><br><span class="line">    &lt;form:form modelAttribute=<span class="string">&quot;student&quot;</span>&gt;</span><br><span class="line">        学生ID：&lt;form:input path=<span class="string">&quot;id&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        学生姓名：&lt;form:input path=<span class="string">&quot;name&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        学生年龄：&lt;form:input path=<span class="string">&quot;age&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line">    &lt;/form:form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>1、JSP 页面导入 Spring MVC 表单标签库，与导入 JSTL 标签库的语法非常相似，前缀 prefix 可以自定义，通常定义为 from。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;form&quot;</span> uri=<span class="string">&quot;http://www.springframework.org/tags/form&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><p>2、将 form 表单与模型数据进行绑定，通过 modelAttribute 属性完成绑定，将 modelAttribute 的值设置为模型数据对应的 key 值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Handeler:modelAndView.addObject(<span class="string">&quot;student&quot;</span>,student);</span><br><span class="line">JSP:&lt;form:form modelAttribute=<span class="string">&quot;student&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>3、form 表单完成绑定之后，将模型数据的值取出绑定到不同的标签中，通过设置标签的 path 属性完成，将 path 属性的值设置为模型数据对应的属性名即可。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">学生ID：&lt;form:input path=<span class="string">&quot;id&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">学生姓名：&lt;form:input path=<span class="string">&quot;name&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">学生年龄：&lt;form:input path=<span class="string">&quot;age&quot;</span>/&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure><h4 id="常用的表单标签"><a href="#常用的表单标签" class="headerlink" title="常用的表单标签"></a>常用的表单标签</h4><ul><li>from</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form:from modelAttribute=<span class="string">&quot;student&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>渲染的是 HTML 中的<code>&lt;form&gt;&lt;/from&gt;</code>，通过 modelAttribute 属性绑定具体的模型数据。</p><ul><li>input</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form:input path=<span class="string">&quot;name&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>渲染的是 HTML 中的 <code>&lt;input type=&quot;text&quot;/&gt;</code>，from 标签绑定的是模型数据，input 标签绑定的是模型数据中的属性值，通过 path 属性可以与模型数据中的属性名对应，并且支持及联操作。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;from:input path=<span class="string">&quot;address.name&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><ul><li>password</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form:password path=<span class="string">&quot;password&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>渲染的是 HTML 中的 <code>&lt;input type=&quot;password&quot;/&gt;</code>，通过 path 属性与模型数据的属性值进行绑定，password 标签的值不会在页面显示。</p><ul><li>checkbox</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form:checkbox path=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;读书&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">student.setFlag(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkbox：&lt;form:checkbox path=<span class="string">&quot;flag&quot;</span> value=<span class="string">&quot;flag&quot;</span>&gt;&lt;/form:checkbox&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure><p>渲染的是 HTML 中的 <code>&lt;input type=&quot;checkbox&quot;/&gt;</code>，通过 path 与模型数据的属性值进行绑定，可以绑定 boolean、数组和集合。</p><p>如果绑定 boolean 值，若该变量的值为 true，则表示该复选框选中，否则表示不选中。</p><p>如果绑定数组或者集合，数组/集合中的元素等于 checkbox 的 value 值，则选中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student.setHobby(Arrays.asList(<span class="string">&quot;读书&quot;</span>,<span class="string">&quot;看电影&quot;</span>,<span class="string">&quot;玩游戏&quot;</span>));</span><br><span class="line">modelAndView.addObject(<span class="string">&quot;student&quot;</span>,student);</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">爱好：&lt;form:checkbox path=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;摄影&quot;</span>&gt;&lt;/form:checkbox&gt;摄影&lt;br/&gt;</span><br><span class="line">&lt;form:checkbox path=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;读书&quot;</span>&gt;&lt;/form:checkbox&gt;读书&lt;br/&gt;</span><br><span class="line">&lt;form:checkbox path=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;听音乐&quot;</span>&gt;&lt;/form:checkbox&gt;听音乐&lt;br/&gt;</span><br><span class="line">&lt;form:checkbox path=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;看电影&quot;</span>&gt;&lt;/form:checkbox&gt;看电影&lt;br/&gt;</span><br><span class="line">&lt;form:checkbox path=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;旅游&quot;</span>&gt;&lt;/form:checkbox&gt;旅游&lt;br/&gt;</span><br><span class="line">&lt;form:checkbox path=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;玩游戏&quot;</span>&gt;&lt;/form:checkbox&gt;玩游戏&lt;br/&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><ul><li>checkboxes</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form:checkboxes items=$&#123;student.hobby&#125; path=<span class="string">&quot;selecHobby&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>渲染的是 HTML 中的一组 <code>&lt;input type=&quot;checkbox&quot;/&gt;</code>，是对 <code>&lt;form:checkbox/&gt;</code> 的一种简化，需要结合 items 和 path 属性来使用，items 绑定被遍历的集合或数组，path 绑定被选中的集合或数组，可以这样理解，items 为全部可选集合，path 为默认的选中集合。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">student.setHobby(Arrays.asList(<span class="string">&quot;摄影&quot;</span>,<span class="string">&quot;读书&quot;</span>,<span class="string">&quot;听音乐&quot;</span>,<span class="string">&quot;看电影&quot;</span>,<span class="string">&quot;旅游&quot;</span>,<span class="string">&quot;玩游戏&quot;</span>));</span><br><span class="line">student.setSelectHobby(Arrays.asList(<span class="string">&quot;摄影&quot;</span>,<span class="string">&quot;读书&quot;</span>,<span class="string">&quot;听音乐&quot;</span>));</span><br><span class="line">modelAndView.addObject(<span class="string">&quot;student&quot;</span>,student);</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">爱好：&lt;form:checkboxes path=<span class="string">&quot;selectHobby&quot;</span> items=<span class="string">&quot;$&#123;student.hobby&#125;&quot;</span>/&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure><p>需要注意的是 path 可以直接绑定模型数据的属性值，items 则需要通过 EL 表达式的形式从域对象中获取数据，不能直接写属性名。</p><ul><li>rabiobutton</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;from:radiobutton path=<span class="string">&quot;radioId&quot;</span> value=<span class="string">&quot;0&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>渲染的是 HTML 中的一个 <code>&lt;input type=&quot;radio&quot;/&gt;</code>，绑定的数据与标签的 value 值相等则为选中，否则不选中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student.setRadioId(<span class="number">1</span>);</span><br><span class="line">modelAndView.addObject(<span class="string">&quot;student&quot;</span>,student);</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">radiobutton:&lt;form:radiobutton path=<span class="string">&quot;radioId&quot;</span> value=<span class="string">&quot;1&quot;</span>/&gt;radiobutton&lt;br/&gt;</span><br></pre></td></tr></table></figure><ul><li>radiobuttons</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form:radiobuttons itmes=<span class="string">&quot;$&#123;student.grade&#125;&quot;</span> path=<span class="string">&quot;selectGrade&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>渲染的是 HTML 中的一组 <code>&lt;input type=&quot;radio&quot;/&gt;</code>，这里需要结合 items 和 path 两个属性来使用，items 绑定被遍历的集合或数组，path 绑定被选中的值，items 为全部的可选类型，path 为默认选中的选项，用法与 <code>&lt;form:checkboxes/&gt;</code> 一致。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;Integer,String&gt; gradeMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">gradeMap.put(<span class="number">1</span>,<span class="string">&quot;一年级&quot;</span>);</span><br><span class="line">gradeMap.put(<span class="number">2</span>,<span class="string">&quot;二年级&quot;</span>);</span><br><span class="line">gradeMap.put(<span class="number">3</span>,<span class="string">&quot;三年级&quot;</span>);</span><br><span class="line">gradeMap.put(<span class="number">4</span>,<span class="string">&quot;四年级&quot;</span>);</span><br><span class="line">gradeMap.put(<span class="number">5</span>,<span class="string">&quot;五年级&quot;</span>);</span><br><span class="line">gradeMap.put(<span class="number">6</span>,<span class="string">&quot;六年级&quot;</span>);</span><br><span class="line">student.setGradeMap(gradeMap);</span><br><span class="line">student.setSelectGrade(<span class="number">3</span>);</span><br><span class="line">modelAndView.addObject(<span class="string">&quot;student&quot;</span>,student);</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">学生年级：&lt;form:radiobuttons items=<span class="string">&quot;$&#123;student.gradeMap&#125;&quot;</span> path=<span class="string">&quot;selectGrade&quot;</span>/&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure><ul><li>select</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form:select items=<span class="string">&quot;$&#123;student.citys&#125;&quot;</span> path=<span class="string">&quot;selectCity&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>渲染的是 HTML 中的一个 <code>&lt;select/&gt;</code> 标签，需要结合 items 和 path 两个属性来使用，items 绑定被遍历的集合或数组，path 绑定被选中的值，用法与 <code>&lt;from:radiobuttons/&gt;</code>一致。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;Integer,String&gt; cityMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">cityMap.put(<span class="number">1</span>,<span class="string">&quot;北京&quot;</span>);</span><br><span class="line">cityMap.put(<span class="number">2</span>,<span class="string">&quot;上海&quot;</span>);</span><br><span class="line">cityMap.put(<span class="number">3</span>,<span class="string">&quot;广州&quot;</span>);</span><br><span class="line">cityMap.put(<span class="number">4</span>,<span class="string">&quot;深圳&quot;</span>);</span><br><span class="line">student.setCityMap(cityMap);</span><br><span class="line">student.setSelectCity(<span class="number">3</span>);</span><br><span class="line">modelAndView.addObject(<span class="string">&quot;student&quot;</span>,student);</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">所在城市：&lt;form:select items=<span class="string">&quot;$&#123;student.cityMap&#125;&quot;</span> path=<span class="string">&quot;selectCity&quot;</span>&gt;&lt;/form:select&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure><ul><li>options</li></ul><p><code>form:select</code> 结合 <code>form:options</code> 的使用，<code>from:select</code> 只定义 path 属性，在 <code>form:select</code> 标签内部添加一个子标签 <code>form:options</code> ，设置 items 属性，获取被遍历的集合。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">所在城市：&lt;form:select path=<span class="string">&quot;selectCity&quot;</span>&gt;</span><br><span class="line">  &lt;form:options items=<span class="string">&quot;$&#123;student.cityMap&#125;&quot;</span>&gt;&lt;/form:options&gt;</span><br><span class="line">&lt;/form:select&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure><ul><li><p>option</p><p><code>form:select</code> 结合 <code>form:option</code> 的使用，<code>from:select</code> 定义 path 属性，给每一个 <code>form:option</code> 设置 value 值，path 的值与哪个 value 值相等，该项默认选中。</p></li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">所在城市：&lt;form:select path=<span class="string">&quot;selectCity&quot;</span>&gt;</span><br><span class="line">            &lt;form:option value=<span class="string">&quot;1&quot;</span>&gt;杭州&lt;/form:option&gt;</span><br><span class="line">            &lt;form:option value=<span class="string">&quot;2&quot;</span>&gt;成都&lt;/form:option&gt;</span><br><span class="line">            &lt;form:option value=<span class="string">&quot;3&quot;</span>&gt;西安&lt;/form:option&gt;</span><br><span class="line">        &lt;/form:select&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure><ul><li>textarea</li></ul><p>渲染的是 HTML 中的一个 <code>&lt;textarea/&gt;</code> ，path 绑定模型数据的属性值，作为文本输入域的默认值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student.setIntroduce(<span class="string">&quot;你好，我是...&quot;</span>);</span><br><span class="line">modelAndView.addObject(<span class="string">&quot;student&quot;</span>,student);</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">信息：&lt;form:textarea path=<span class="string">&quot;introduce&quot;</span>/&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure><ul><li>errors</li></ul><p>处理错误信息，一般用在数据校验，该标签需要结合 Spring MVC 的验证器结合起来使用。</p><h3 id="Spring-MVC-数据校验"><a href="#Spring-MVC-数据校验" class="headerlink" title="Spring MVC 数据校验"></a>Spring MVC 数据校验</h3><p>Spring MVC 提供了两种数据校验的方式：1、基于 Validator 接口。2、使用 Annotation JSR - 303 标准进行校验。</p><p>基于 Validator 接口的方式需要自定义 Validator 验证器，每一条数据的验证规则需要开发者手动完成，使用 Annotation JSR - 303 标准则不需要自定义验证器，通过注解的方式可以直接在实体类中添加每个属性的验证规则，这种方式更加方便，实际开发中推荐使用。</p><blockquote><p>基于 Validator 接口</p></blockquote><ul><li>实体类 Account</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>自定义验证器 AccountValidator，实现 Validator 接口。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.validator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Account;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.Errors;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.ValidationUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.Validator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountValidator</span> <span class="keyword">implements</span> <span class="title">Validator</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(Class&lt;?&gt; aClass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Account.class.equals(aClass);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(Object o, Errors errors)</span> </span>&#123;</span><br><span class="line">        ValidationUtils.rejectIfEmpty(errors,<span class="string">&quot;name&quot;</span>,<span class="keyword">null</span>,<span class="string">&quot;姓名不能为空&quot;</span>);</span><br><span class="line">        ValidationUtils.rejectIfEmpty(errors,<span class="string">&quot;password&quot;</span>,<span class="keyword">null</span>,<span class="string">&quot;密码不能为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>控制器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Account;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/validator&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidatorHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;account&quot;</span>,<span class="keyword">new</span> Account());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(<span class="meta">@Validated</span> Account account, BindingResult bindingResult)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(bindingResult.hasErrors())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>springmvc.xml 配置验证器。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;accountValidator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.validator.AccountValidator&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">validator</span>=<span class="string">&quot;accountValidator&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>JSP</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">18</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">31</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;form&quot;</span> uri=<span class="string">&quot;http://www.springframework.org/tags/form&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;from&quot;</span> uri=<span class="string">&quot;http://www.springframework.org/tags/form&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form:form modelAttribute=<span class="string">&quot;account&quot;</span> action=<span class="string">&quot;/validator/login&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        姓名：&lt;form:input path=<span class="string">&quot;name&quot;</span>/&gt;&lt;from:errors path=<span class="string">&quot;name&quot;</span>&gt;&lt;/from:errors&gt;&lt;br/&gt;</span><br><span class="line">        密码：&lt;form:input path=<span class="string">&quot;password&quot;</span>/&gt;&lt;from:errors path=<span class="string">&quot;password&quot;</span>&gt;&lt;/from:errors&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>/&gt;</span><br><span class="line">    &lt;/form:form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>Annotation JSR - 303 标准</p></blockquote><p>使用 Annotation JSR - 303 标准进行验证，需要导入支持这种标准的依赖 jar 文件，这里我们使用 Hibernate Validator。</p><ul><li>pom.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- JSR-303 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.6.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.validation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>validation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jboss.logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jboss-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>通过注解的方式直接在实体类中添加相关的验证规则。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.Email;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.NotEmpty;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Pattern;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Size;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="meta">@NotEmpty(message = &quot;用户名不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="meta">@Size(min = 6,max = 12,message = &quot;密码6-12位&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="meta">@Email(regexp = &quot;^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\\\.[a-zA-Z0-9-]+)*\\\\.[a-zA-Z0-9]&#123;2,6&#125;$&quot;,message = &quot;请输入正确的邮箱格式&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="meta">@Pattern(regexp = &quot;^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\\\\\\\d&#123;8&#125;$&quot;,message = &quot;请输入正确的电话&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>ValidatorHandler</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/register&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">register</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">    model.addAttribute(<span class="string">&quot;person&quot;</span>,<span class="keyword">new</span> Person());</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;register&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">register</span><span class="params">(<span class="meta">@Valid</span> Person person, BindingResult bindingResult)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(bindingResult.hasErrors())&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;register&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>springmvc.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>JSP</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: southwind</span><br><span class="line">  Date: <span class="number">2019</span>-<span class="number">03</span>-<span class="number">18</span></span><br><span class="line">  Time: <span class="number">11</span>:<span class="number">29</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;form&quot;</span> uri=<span class="string">&quot;http://www.springframework.org/tags/form&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form:form modelAttribute=<span class="string">&quot;person&quot;</span> action=<span class="string">&quot;/validator/register2&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">        用户名：&lt;form:input path=<span class="string">&quot;username&quot;</span>&gt;&lt;/form:input&gt;&lt;form:errors path=<span class="string">&quot;username&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        密码：&lt;form:password path=<span class="string">&quot;password&quot;</span>&gt;&lt;/form:password&gt;&lt;form:errors path=<span class="string">&quot;password&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        邮箱：&lt;form:input path=<span class="string">&quot;email&quot;</span>&gt;&lt;/form:input&gt;&lt;form:errors path=<span class="string">&quot;email&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        电话：&lt;form:input path=<span class="string">&quot;phone&quot;</span>&gt;&lt;/form:input&gt;&lt;form:errors path=<span class="string">&quot;phone&quot;</span>/&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line">    &lt;/form:form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>校验规则详解：</p><p>@Null                    被注解的元素必须为null</p><p>@NotNull                  被注解的元素不能为null</p><p>@Min(value)                 被注解的元素必须是一个数字，其值必须大于等于指定的最小值</p><p>@Max(value)                被注解的元素必须是一个数字，其值必须小于于等于指定的最大值    </p><p>@Email                     被注解的元素必须是电子邮箱地址</p><p>@Pattern                  被注解的元素必须符合对应的正则表达式</p><p>@Length                   被注解的元素的大小必须在指定的范围内</p><p>@NotEmpty                  被注解的字符串的值必须非空</p><p>Null 和 Empty 是不同的结果，String str = null，str 是 null，String</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Spring-MVC&quot;&gt;&lt;a href=&quot;#Spring-MVC&quot; class=&quot;headerlink&quot; title=&quot;Spring MVC&quot;&gt;&lt;/a&gt;Spring MVC&lt;/h3&gt;&lt;p&gt;Spring MVC 是目前主流的实现 MVC 设计模式的企业级开发框架，Spring 框架的一个子模块，无需整合，开发起来更加便捷。&lt;/p&gt;
&lt;h4 id=&quot;什么是-MVC-设计模式？&quot;&gt;&lt;a href=&quot;#什么是-MVC-设计模式？&quot; class=&quot;headerlink&quot; title=&quot;什么是 MVC 设计模式？&quot;&gt;&lt;/a&gt;什么是 MVC 设计模式？&lt;/h4&gt;&lt;p&gt;将应用程序分为 Controller、Model、View 三层，Controller 接收客户端请求，调用 Model 生成业务数据，传递给 View。&lt;/p&gt;
&lt;p&gt;Spring MVC 就是对这套流程的封装，屏蔽了很多底层代码，开放出接口，让开发者可以更加轻松、便捷地完成基于 MVC 模式的 Web 开发。&lt;/p&gt;</summary>
    
    
    
    <category term="SSM笔记" scheme="https://aiden-a.gitee.io/categories/SSM%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring笔记</title>
    <link href="https://aiden-a.gitee.io/2023/02/10/SSM%E7%AC%94%E8%AE%B0/Spring%E7%AC%94%E8%AE%B0/Spring%E7%AC%94%E8%AE%B0/"/>
    <id>https://aiden-a.gitee.io/2023/02/10/SSM%E7%AC%94%E8%AE%B0/Spring%E7%AC%94%E8%AE%B0/Spring%E7%AC%94%E8%AE%B0/</id>
    <published>2023-02-10T09:58:20.000Z</published>
    <updated>2023-02-11T09:52:12.191Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Spring-框架两大核心机制（IoC、AOP）"><a href="#Spring-框架两大核心机制（IoC、AOP）" class="headerlink" title="Spring 框架两大核心机制（IoC、AOP）"></a>Spring 框架两大核心机制（IoC、AOP）</h3><ul><li>IoC（控制反转）/ DI（依赖注入）</li><li>AOP（面向切面编程）</li></ul><p>Spring 是一个企业级开发框架，是软件设计层面的框架，优势在于可以将应用程序进行分层，开发者可以自主选择组件。</p><p>MVC：Struts2、Spring MVC</p><p>ORMapping：Hibernate、MyBatis、Spring Data</p><h3 id="如何使用-IoC"><a href="#如何使用-IoC" class="headerlink" title="如何使用 IoC"></a>如何使用 IoC</h3><ul><li>创建 Maven 工程，pom.xml 添加依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.southwind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aispringioc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.11.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>创建实体类 Student</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>传统的开发方式，手动 new Student</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Student student = <span class="keyword">new</span> Student();</span><br><span class="line">student.setId(<span class="number">1L</span>);</span><br><span class="line">student.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">student.setAge(<span class="number">22</span>);</span><br><span class="line">System.out.println(student);</span><br></pre></td></tr></table></figure><ul><li>通过 IoC 创建对象，在配置文件中添加需要管理的对象，XML 格式的配置文件，文件名可以自定义。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;22&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>从 IoC 中获取对象，通过 id 获取。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载配置文件</span></span><br><span class="line">ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;spring.xml&quot;</span>);</span><br><span class="line">Student student = (Student) applicationContext.getBean(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">System.out.println(student);</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><ul><li><p>通过配置 <code>bean</code> 标签来完成对象的管理。</p><ul><li><p><code>id</code>：对象名。</p></li><li><p><code>class</code>：对象的模版类（所有交给 IoC 容器来管理的类必须有无参构造函数，因为 Spring 底层是通过反射机制来创建对象，调用的是无参构造）</p></li></ul></li><li><p>对象的成员变量通过 <code>property</code> 标签完成赋值。</p><ul><li><code>name</code>：成员变量名。</li><li><code>value</code>：成员变量值（基本数据类型，String 可以直接赋值，如果是其他引用类型，不能通过 value 赋值）</li><li><code>ref</code>：将 IoC 中的另外一个 bean 赋给当前的成员变量（DI）</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;22&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;address&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Address&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;科技路&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="IoC-底层原理"><a href="#IoC-底层原理" class="headerlink" title="IoC 底层原理"></a>IoC 底层原理</h3><ul><li>读取配置文件，解析 XML。</li><li>通过反射机制实例化配置文件中所配置所有的 bean。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.ioc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.dom4j.Document;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.DocumentException;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.SAXReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassPathXmlApplicationContext</span> <span class="keyword">implements</span> <span class="title">ApplicationContext</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; ioc = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ClassPathXmlApplicationContext</span><span class="params">(String path)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">            Document document = reader.read(<span class="string">&quot;./src/main/resources/&quot;</span>+path);</span><br><span class="line">            Element root = document.getRootElement();</span><br><span class="line">            Iterator&lt;Element&gt; iterator = root.elementIterator();</span><br><span class="line">            <span class="keyword">while</span>(iterator.hasNext())&#123;</span><br><span class="line">                Element element = iterator.next();</span><br><span class="line">                String id = element.attributeValue(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                String className = element.attributeValue(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">                <span class="comment">//通过反射机制创建对象</span></span><br><span class="line">                Class clazz = Class.forName(className);</span><br><span class="line">                <span class="comment">//获取无参构造函数，创建目标对象</span></span><br><span class="line">                Constructor constructor = clazz.getConstructor();</span><br><span class="line">                Object object = constructor.newInstance();</span><br><span class="line">                <span class="comment">//给目标对象赋值</span></span><br><span class="line">                Iterator&lt;Element&gt; beanIter = element.elementIterator();</span><br><span class="line">                <span class="keyword">while</span>(beanIter.hasNext())&#123;</span><br><span class="line">                    Element property = beanIter.next();</span><br><span class="line">                    String name = property.attributeValue(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                    String valueStr = property.attributeValue(<span class="string">&quot;value&quot;</span>);</span><br><span class="line">                    String ref = property.attributeValue(<span class="string">&quot;ref&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span>(ref == <span class="keyword">null</span>)&#123;</span><br><span class="line">                        String methodName = <span class="string">&quot;set&quot;</span>+name.substring(<span class="number">0</span>,<span class="number">1</span>).toUpperCase()+name.substring(<span class="number">1</span>);</span><br><span class="line">                        Field field = clazz.getDeclaredField(name);</span><br><span class="line">                        Method method = clazz.getDeclaredMethod(methodName,field.getType());</span><br><span class="line">                        <span class="comment">//根据成员变量的数据类型将 value 进行转换</span></span><br><span class="line">                        Object value = <span class="keyword">null</span>;</span><br><span class="line">                        <span class="keyword">if</span>(field.getType().getName() == <span class="string">&quot;long&quot;</span>)&#123;</span><br><span class="line">                            value = Long.parseLong(valueStr);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(field.getType().getName() == <span class="string">&quot;java.lang.String&quot;</span>)&#123;</span><br><span class="line">                            value = valueStr;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(field.getType().getName() == <span class="string">&quot;int&quot;</span>)&#123;</span><br><span class="line">                            value = Integer.parseInt(valueStr);</span><br><span class="line">                        &#125;</span><br><span class="line">                        method.invoke(object,value);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="comment">//...同理省略</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    ioc.put(id,object);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DocumentException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ioc.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通过运行时类获取-bean"><a href="#通过运行时类获取-bean" class="headerlink" title="通过运行时类获取 bean"></a>通过运行时类获取 bean</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;spring.xml&quot;</span>);</span><br><span class="line">Student student = (Student) applicationContext.getBean(Student.class);</span><br><span class="line">System.out.println(student);</span><br></pre></td></tr></table></figure><p>这种方式存在一个问题，配置文件中一个数据类型的对象只能有一个实例，否则会抛出异常，因为没有唯一的 bean。</p><h3 id="通过有参构造创建-bean"><a href="#通过有参构造创建-bean" class="headerlink" title="通过有参构造创建 bean"></a>通过有参构造创建 bean</h3><ul><li><p>在实体类中创建对应的有参构造函数。</p><p>@NoArgsConstructor：生成无参的构造方法。<br>@AllArgsConstructor：生成该类下全部属性的构造方法。</p></li><li><p>配置文件</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小明&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;address&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小明&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;3&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;address&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="给-bean-注入集合"><a href="#给-bean-注入集合" class="headerlink" title="给 bean 注入集合"></a>给 bean 注入集合</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;33&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;addresses&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;address&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;address2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Address&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;科技路&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Address&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;高新区&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="scope-作用域"><a href="#scope-作用域" class="headerlink" title="scope 作用域"></a>scope 作用域</h3><img src="/2023/02/10/SSM%E7%AC%94%E8%AE%B0/Spring%E7%AC%94%E8%AE%B0/Spring%E7%AC%94%E8%AE%B0/image-20230210205738712.png" class="" title="image-20230210205738712"><p>Spring 管理的 bean 是根据 scope 来生成的，表示 bean 的作用域，共4种，默认值是 singleton。</p><ul><li>singleton：单例，表示通过 IoC 容器获取的 bean 是唯一的。</li><li>prototype：原型，表示通过 IoC 容器获取的 bean 是不同的。</li><li>request：请求，表示在一次 HTTP 请求内有效。</li><li>session：回话，表示在一个用户会话内有效。</li></ul><p>request 和 session 只适用于 Web 项目，大多数情况下，使用单例和原型较多。</p><p>prototype 模式当业务代码获取 IoC 容器中的 bean 时，Spring 才去调用无参构造创建对应的 bean。</p><p>singleton 模式无论业务代码是否获取 IoC 容器中的 bean，Spring 在加载 spring.xml 时就会创建 bean。</p><h3 id="Spring-的继承"><a href="#Spring-的继承" class="headerlink" title="Spring 的继承"></a>Spring 的继承</h3><p>与 Java 的继承不同，Java 是类层面的继承，子类可以继承父类的内部结构信息；Spring 是对象层面的继承，子对象可以继承父对象的属性值。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;22&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;addresses&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;address&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;address2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Address&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;科技路&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Address&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;高新区&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;stu&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Student&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;student2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Spring 的继承关注点在于具体的对象，而不在于类，即不同的两个类的实例化对象可以完成继承，前提是子对象必须包含父对象的所有属性，同时可以在此基础上添加其他的属性。</p><h3 id="Spring-的依赖"><a href="#Spring-的依赖" class="headerlink" title="Spring 的依赖"></a>Spring 的依赖</h3><p>与继承类似，依赖也是描述 bean 和 bean 之间的一种关系，配置依赖之后，被依赖的 bean 一定先创建，再创建依赖的 bean，A 依赖于 B，先创建 B，再创建 A。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                           &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Student&quot;</span> <span class="attr">depends-on</span>=<span class="string">&quot;user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.User&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Spring-的-p-命名空间"><a href="#Spring-的-p-命名空间" class="headerlink" title="Spring 的 p 命名空间"></a>Spring 的 p 命名空间</h3><p>p 命名空间是对 IoC / DI 的简化操作，使用 p 命名空间可以更加方便的完成 bean 的配置以及 bean 之间的依赖注入。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Student&quot;</span> <span class="attr">p:id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;张三&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;22&quot;</span> <span class="attr">p:address-ref</span>=<span class="string">&quot;address&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Address&quot;</span> <span class="attr">p:id</span>=<span class="string">&quot;2&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;科技路&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Spring-的工厂方法"><a href="#Spring-的工厂方法" class="headerlink" title="Spring 的工厂方法"></a>Spring 的工厂方法</h3><p><strong>工厂模式主要是将创建对象的过程交给工厂进行处理，通过工厂提供给我们需要创建的对象，而不用自己直接去进行对象的创建</strong></p><p>IoC 通过工厂模式创建 bean 的方式有两种：</p><ul><li>静态工厂方法</li><li>实例工厂方法</li></ul><blockquote><p>静态工厂方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Car;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticCarFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Long, Car&gt; carMap;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        carMap = <span class="keyword">new</span> HashMap&lt;Long, Car&gt;();</span><br><span class="line">        carMap.put(<span class="number">1L</span>,<span class="keyword">new</span> Car(<span class="number">1L</span>,<span class="string">&quot;宝马&quot;</span>));</span><br><span class="line">        carMap.put(<span class="number">2L</span>,<span class="keyword">new</span> Car(<span class="number">2L</span>,<span class="string">&quot;奔驰&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title">getCar</span><span class="params">(<span class="keyword">long</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> carMap.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置静态工厂创建 Car --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;car&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.factory.StaticCarFactory&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;getCar&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>实例工厂方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.entity.Car;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InstanceCarFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;Long, Car&gt; carMap;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">InstanceCarFactory</span><span class="params">()</span></span>&#123;</span><br><span class="line">        carMap = <span class="keyword">new</span> HashMap&lt;Long, Car&gt;();</span><br><span class="line">        carMap.put(<span class="number">1L</span>,<span class="keyword">new</span> Car(<span class="number">1L</span>,<span class="string">&quot;宝马&quot;</span>));</span><br><span class="line">        carMap.put(<span class="number">2L</span>,<span class="keyword">new</span> Car(<span class="number">2L</span>,<span class="string">&quot;奔驰&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Car <span class="title">getCar</span><span class="params">(<span class="keyword">long</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> carMap.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置实例工厂 bean --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;carFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.factory.InstanceCarFactory&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 赔偿实例工厂创建 Car --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;car2&quot;</span> <span class="attr">factory-bean</span>=<span class="string">&quot;carFactory&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;getCar&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="IoC-自动装载（Autowire）"><a href="#IoC-自动装载（Autowire）" class="headerlink" title="IoC 自动装载（Autowire）"></a>IoC 自动装载（Autowire）</h3><p>IoC 负责创建对象，DI 负责完成对象的依赖注入，通过配置 property 标签的 ref 属性来完成，同时 Spring 提供了另外一种更加简便的依赖注入方式：自动装载，不需要手动配置 property，IoC 容器会自动选择 bean 完成注入。</p><p>自动装载有两种方式：</p><ul><li>byName：通过属性名自动装载</li><li>byType：通过属性的数据类型自动装载</li></ul><blockquote><p>byName</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cars&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Car&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;宝马&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Person&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;11&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>byType</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;car&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Car&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;奔驰&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.southwind.entity.Person&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;11&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>byType 需要注意，如果同时存在两个及以上的符合条件的 bean 时，自动装载会抛出异常。</p><h3 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h3><p>AOP：Aspect Oriented Programming 面向切面编程。</p><p>AOP 的优点：</p><ul><li>降低模块之间的耦合度。</li><li>使系统更容易扩展。</li><li>更好的代码复用。</li><li>非业务代码更加集中，不分散，便于统一管理。</li><li>业务代码更加简洁存粹，不参杂其他代码的影响。</li></ul><p>AOP 是对面向对象编程的一个补充，在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想就是面向切面编程。将不同方法的同一个位置抽象成一个切面对象，对该切面对象进行编程就是 AOP。</p><h3 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h3><ul><li>创建 Maven 工程，pom.xml 添加</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.11.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.11.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.11.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>创建一个计算器接口 Cal，定义4个方法。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Cal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> num1,<span class="keyword">int</span> num2)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建接口的实现类 CalImpl。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.utils.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.utils.Cal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalImpl</span> <span class="keyword">implements</span> <span class="title">Cal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;add方法的参数是[&quot;</span>+num1+<span class="string">&quot;,&quot;</span>+num2+<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> result = num1+num2;</span><br><span class="line">        System.out.println(<span class="string">&quot;add方法的结果是&quot;</span>+result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;sub方法的参数是[&quot;</span>+num1+<span class="string">&quot;,&quot;</span>+num2+<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> result = num1-num2;</span><br><span class="line">        System.out.println(<span class="string">&quot;sub方法的结果是&quot;</span>+result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;mul方法的参数是[&quot;</span>+num1+<span class="string">&quot;,&quot;</span>+num2+<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> result = num1*num2;</span><br><span class="line">        System.out.println(<span class="string">&quot;mul方法的结果是&quot;</span>+result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;div方法的参数是[&quot;</span>+num1+<span class="string">&quot;,&quot;</span>+num2+<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> result = num1/num2;</span><br><span class="line">        System.out.println(<span class="string">&quot;div方法的结果是&quot;</span>+result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码中，日志信息和业务逻辑的耦合性很高，不利于系统的维护，使用 AOP 可以进行优化，如何来实现 AOP？使用动态代理的方式来实现。</p><p>给业务代码找一个代理，打印日志信息的工作交个代理来做，这样的话业务代码就只需要关注自身的业务即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInvocationHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line">    <span class="comment">//接收委托对象</span></span><br><span class="line">    <span class="keyword">private</span> Object object = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回代理对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">bind</span><span class="params">(Object object)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.object = object;</span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(object.getClass().getClassLoader(),object.getClass().getInterfaces(),<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(method.getName()+<span class="string">&quot;方法的参数是：&quot;</span>+ Arrays.toString(args));</span><br><span class="line">        Object result = method.invoke(<span class="keyword">this</span>.object,args);</span><br><span class="line">        System.out.println(method.getName()+<span class="string">&quot;的结果是&quot;</span>+result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上是通过动态代理实现 AOP 的过程，比较复杂，不好理解，Spring 框架对 AOP 进行了封装，使用 Spring 框架可以用面向对象的思想来实现 AOP。</p><p>Spring 框架中不需要创建 InvocationHandler，只需要创建一个切面对象，将所有的非业务代码在切面对象中完成即可，Spring 框架底层会自动根据切面类以及目标类生成一个代理对象。</p><p>LoggerAspect</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoggerAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before(value = &quot;execution(public int com.southwind.utils.impl.CalImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint joinPoint)</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取方法名</span></span><br><span class="line">        String name = joinPoint.getSignature().getName();</span><br><span class="line">        <span class="comment">//获取参数</span></span><br><span class="line">        String args = Arrays.toString(joinPoint.getArgs());</span><br><span class="line">        System.out.println(name+<span class="string">&quot;方法的参数是：&quot;</span>+ args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After(value = &quot;execution(public int com.southwind.utils.impl.CalImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(JoinPoint joinPoint)</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取方法名</span></span><br><span class="line">        String name = joinPoint.getSignature().getName();</span><br><span class="line">        System.out.println(name+<span class="string">&quot;方法执行完毕&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(value = &quot;execution(public int com.southwind.utils.impl.CalImpl.*(..))&quot;,returning = &quot;result&quot;)</span></span><br><span class="line">     * 属性<span class="number">1.</span> value切入点位置</span><br><span class="line">     *     <span class="number">2.</span> returning 自定义的变量，标识目标方法的返回值</span><br><span class="line">     *     自定义变量名必须和通知方法的形参一样</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(JoinPoint joinPoint,Object result)</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取方法名</span></span><br><span class="line">        String name = joinPoint.getSignature().getName();</span><br><span class="line">        System.out.println(name+<span class="string">&quot;方法的结果是&quot;</span>+result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterThrowing(value = &quot;execution(public int com.southwind.utils.impl.CalImpl.*(..))&quot;,throwing = &quot;exception&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterThrowing</span><span class="params">(JoinPoint joinPoint,Exception exception)</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取方法名</span></span><br><span class="line">        String name = joinPoint.getSignature().getName();</span><br><span class="line">        System.out.println(name+<span class="string">&quot;方法抛出异常：&quot;</span>+exception);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LoggerAspect 类定义处添加的两个注解：</p><ul><li><code>@Aspect</code>：表示该类是切面类。</li><li><code>@Component</code>：将该类的对象注入到 IoC 容器。</li></ul><p>具体方法处添加的注解：</p><p><code>@Before</code>：表示方法执行的具体位置和时机。</p><p>CalImpl 也需要添加 <code>@Component</code>，交给 IoC 容器来管理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.utils.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.southwind.utils.Cal;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalImpl</span> <span class="keyword">implements</span> <span class="title">Cal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = num1+num2;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = num1-num2;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = num1*num2;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = num1/num2;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>spring.xml 中配置 AOP。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.southwind&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 是Aspect注解生效，为目标类自动生成代理对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>context:component-scan</code> 将 <code>com.southwind</code> 包中的所有类进行扫描，如果该类同时添加了 <code>@Component</code>，则将该类扫描到 IoC 容器中，即 IoC 管理它的对象。 </p><p><code>aop:aspectj-autoproxy</code> 让 Spring 框架结合切面类和目标类自动生成动态代理对象。</p><ul><li>切面：横切关注点被模块化的抽象对象。</li><li>通知：切面对象完成的工作。</li><li>目标：被通知的对象，即被横切的对象。</li><li>代理：切面、通知、目标混合之后的对象。</li><li>连接点：通知要插入业务代码的具体位置。</li><li>切点：AOP 通过切点定位到连接点。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Spring-框架两大核心机制（IoC、AOP）&quot;&gt;&lt;a href=&quot;#Spring-框架两大核心机制（IoC、AOP）&quot; class=&quot;headerlink&quot; title=&quot;Spring 框架两大核心机制（IoC、AOP）&quot;&gt;&lt;/a&gt;Spring 框架两大核心机制（IoC、AOP）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;IoC（控制反转）/ DI（依赖注入）&lt;/li&gt;
&lt;li&gt;AOP（面向切面编程）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Spring 是一个企业级开发框架，是软件设计层面的框架，优势在于可以将应用程序进行分层，开发者可以自主选择组件。&lt;/p&gt;
&lt;p&gt;MVC：Struts2、Spring MVC&lt;/p&gt;
&lt;p&gt;ORMapping：Hibernate、MyBatis、Spring Data&lt;/p&gt;</summary>
    
    
    
    <category term="SSM笔记" scheme="https://aiden-a.gitee.io/categories/SSM%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="ssm" scheme="https://aiden-a.gitee.io/tags/ssm/"/>
    
  </entry>
  
  <entry>
    <title>git操作</title>
    <link href="https://aiden-a.gitee.io/2022/11/17/git%E6%93%8D%E4%BD%9C/git%E6%93%8D%E4%BD%9C/"/>
    <id>https://aiden-a.gitee.io/2022/11/17/git%E6%93%8D%E4%BD%9C/git%E6%93%8D%E4%BD%9C/</id>
    <published>2022-11-17T11:42:05.000Z</published>
    <updated>2022-12-21T02:46:26.133Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么需要Git"><a href="#为什么需要Git" class="headerlink" title="为什么需要Git"></a>为什么需要Git</h1><p>因为手动进行版本管理太复杂，尤其是多个人的时候。想象一下， 如果好几个人在一起写代码，然后别人在增加功能后，需要把代 码发给你，由你手动添加新增的代码，那多复杂？</p><h1 id="文件状态"><a href="#文件状态" class="headerlink" title="文件状态"></a>文件状态</h1><img src="/2022/11/17/git%E6%93%8D%E4%BD%9C/git%E6%93%8D%E4%BD%9C/image-20221217142241146.png" class="" title="image-20221217142241146"><h1 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h1><ol><li>创建repository –&gt; 创建一个文件夹，文件的更改都会被监控</li><li>将更改commit到本地git –&gt; 保存文件夹此时的快照到本地的git</li><li>恢复到某个commit –&gt; 将文件夹恢复到之前保存的某个快照</li><li>push和pull操作–&gt; 同步本地git和云端git的内容</li><li>使用分支 –&gt; 将当前文件夹copy一份再做更改</li><li>常用工作流 –&gt; 分支的使用方式</li></ol><h1 id="创建repository"><a href="#创建repository" class="headerlink" title="创建repository"></a>创建repository</h1><p>使用git clone + git仓库地址将某个仓库下载到本地</p><h1 id="将更改commit到本地git"><a href="#将更改commit到本地git" class="headerlink" title="将更改commit到本地git"></a>将更改commit到本地git</h1><p>常规流程： </p><p>• Git status –&gt; 查看修改的状态 </p><p>• Git add –&gt; 指定此次commit包含的文件</p><p>•  Git reset HEAD –&gt;把暂存区的修改撤销</p><p> • Git commit -a –m “注释”–&gt; 完成一次到本地git的commit</p><h1 id="恢复到某个commit"><a href="#恢复到某个commit" class="headerlink" title="恢复到某个commit"></a>恢复到某个commit</h1><p>常规流程： </p><p>• Git log 看一下之前的commit </p><p>• Git reset –-hard commit_id 恢复到某个commit</p><h1 id="Push和pull操作"><a href="#Push和pull操作" class="headerlink" title="Push和pull操作"></a>Push和pull操作</h1><p>• Git push origin –&gt; 将本地内容同步到云端 </p><p>• Git pull –&gt; 从云端拉取内容</p><h1 id="使用分支"><a href="#使用分支" class="headerlink" title="使用分支"></a>使用分支</h1><p>• Git branch 新branch名称 –&gt; 创建新branch </p><p>• Git checkout –&gt; 切换branch</p><p> • Git merge –&gt; 合并分支</p><p> • Git branch –D –&gt; 删除分支</p><h1 id="常用工作流"><a href="#常用工作流" class="headerlink" title="常用工作流"></a>常用工作流</h1><p>• Centralized Workflow –&gt; 大家都在master/main上搞开发</p><p> • Feature Branch Workflow –&gt; 为新feature创建branch</p><img src="/2022/11/17/git%E6%93%8D%E4%BD%9C/git%E6%93%8D%E4%BD%9C/image-20221117194637186.png" class="" title="image-20221117194637186"><p>• Gitflow Workflow –&gt; 发布、开发、feature各占一个分支，hotfix</p><img src="/2022/11/17/git%E6%93%8D%E4%BD%9C/git%E6%93%8D%E4%BD%9C/image-20221117194652890.png" class="" title="image-20221117194652890">]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;为什么需要Git&quot;&gt;&lt;a href=&quot;#为什么需要Git&quot; class=&quot;headerlink&quot; title=&quot;为什么需要Git&quot;&gt;&lt;/a&gt;为什么需要Git&lt;/h1&gt;&lt;p&gt;因为手动进行版本管理太复杂，尤其是多个人的时候。想象一下， 如果好几个人在一起写代码，然后别人在增加功能后，需要把代 码发给你，由你手动添加新增的代码，那多复杂？&lt;/p&gt;
&lt;h1 id=&quot;文件状态&quot;&gt;&lt;a href=&quot;#文件状态&quot; class=&quot;headerlink&quot; title=&quot;文件状态&quot;&gt;&lt;/a&gt;文件状态&lt;/h1&gt;&lt;img src=&quot;/2022/11/17/git%E6%93%8D%E4%BD%9C/git%E6%93%8D%E4%BD%9C/image-20221217142241146.png&quot; class title=&quot;image-20221217142241146&quot;&gt;

&lt;h1 id=&quot;常用操作&quot;&gt;&lt;a href=&quot;#常用操作&quot; class=&quot;headerlink&quot; title=&quot;常用操作&quot;&gt;&lt;/a&gt;常用操作&lt;/h1&gt;</summary>
    
    
    
    <category term="git常用操作" scheme="https://aiden-a.gitee.io/categories/git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>141</title>
    <link href="https://aiden-a.gitee.io/2022/10/27/leetcode/leetcode%E9%A2%98/141/141/"/>
    <id>https://aiden-a.gitee.io/2022/10/27/leetcode/leetcode%E9%A2%98/141/141/</id>
    <published>2022-10-27T12:32:33.000Z</published>
    <updated>2022-10-27T12:33:33.902Z</updated>
    
    <content type="html"><![CDATA[<h1 id="快慢双指针"><a href="#快慢双指针" class="headerlink" title="快慢双指针"></a>快慢双指针</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123;</span></span><br><span class="line"><span class="comment"> *         val = x;</span></span><br><span class="line"><span class="comment"> *         next = null;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasCycle</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode slow=<span class="keyword">new</span> ListNode();</span><br><span class="line">        ListNode fast=<span class="keyword">new</span> ListNode();</span><br><span class="line">        slow=head;</span><br><span class="line">        fast=head;</span><br><span class="line">        <span class="keyword">if</span>(head==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(fast!=<span class="keyword">null</span>&amp;&amp;fast.next!=<span class="keyword">null</span>&amp;&amp;fast.next.next!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            slow=slow.next;</span><br><span class="line">            fast=fast.next.next;</span><br><span class="line">            <span class="keyword">if</span>(slow==fast)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;快慢双指针&quot;&gt;&lt;a href=&quot;#快慢双指针&quot; class=&quot;headerlink&quot; title=&quot;快慢双指针&quot;&gt;&lt;/a&gt;快慢双指针&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;</summary>
      
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>一天SpringBoot+VUe全栈开发</title>
    <link href="https://aiden-a.gitee.io/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/"/>
    <id>https://aiden-a.gitee.io/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/</id>
    <published>2022-10-24T03:18:08.000Z</published>
    <updated>2022-11-05T09:20:17.094Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringController"><a href="#SpringController" class="headerlink" title="SpringController"></a>SpringController</h1><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024145849040.png" class="" title="image-20221024145849040"><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024145914952.png" class="" title="image-20221024145914952"><p>如果返回的是数据是视图，则使用@Controller，@Controller通常会Thymeleaf模板使用，但结合使用就达不到前后端分离的效果</p><p>通常返回数据只用@RestController就好了</p><h2 id="Controller的用法"><a href="#Controller的用法" class="headerlink" title="@Controller的用法"></a>@Controller的用法</h2><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024150057690.png" class="" title="image-20221024150057690"><h2 id="路由映射"><a href="#路由映射" class="headerlink" title="路由映射"></a>路由映射</h2><p>通常只用前两个参数</p><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024150218313.png" class="" title="image-20221024150218313"><p>二者等价</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/hello&quot;,method = RequestMethod.GET)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br></pre></td></tr></table></figure><h2 id="控制器的使用"><a href="#控制器的使用" class="headerlink" title="控制器的使用"></a>控制器的使用</h2><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024150708922.png" class="" title="image-20221024150708922"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/getTest1&quot;,method = RequestMethod.GET)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getTest1</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;GET请求&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/getTest2&quot;,method = RequestMethod.GET)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getTest2</span><span class="params">(String nickname,String phone)</span></span>&#123;</span><br><span class="line">System.out.println(phone);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;你好&quot;</span>+nickname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//（1）不加@RequestParam前端的参数名需要和后端控制器的变量名保持一致才能生效</span></span><br><span class="line"><span class="comment">//（2）不加@RequestParam参数为非必传，加@RequestParam写法参数为必传。但@RequestParam可以通过@RequestParam(required = false)设置为非必传。</span></span><br><span class="line"><span class="comment">//（3）@RequestParam可以通过@RequestParam(“userId”)或者@RequestParam(value = “userId”)指定传入的参数名。</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/getTest3&quot;,method = RequestMethod.GET)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getTest3</span><span class="params">(<span class="meta">@RequestParam(value = &quot;nickname&quot;,required = false)</span>String name)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;你好&quot;</span>+name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//POST请求参数写在请求体，GET请求参数写在请求行</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/postTest1&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">postTest1</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;POST请求&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/postTest2&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">postTest2</span><span class="params">(String name,String age)</span></span>&#123;</span><br><span class="line">System.out.println(name);</span><br><span class="line">System.out.println(age);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;POST请求&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/postTest3&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">postTest3</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">System.out.println(user);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;POST请求&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@RequestBody主要用来接收前端传递给后端的json字符串中的数据的(请求体中的数据的)；GET方式无请求体，所以使用@RequestBody接收数据时，前端不能使用GET方式提交数据，而是用POST方式进行提交。</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/postTest4&quot;,method = RequestMethod.POST)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">postTest4</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span></span>&#123;</span><br><span class="line">System.out.println(user);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;POST请求&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/test/*&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;通配符请求&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="SpringBoot文件上传-拦截器"><a href="#SpringBoot文件上传-拦截器" class="headerlink" title="SpringBoot文件上传+拦截器"></a>SpringBoot文件上传+拦截器</h1><h2 id="静态资源访问"><a href="#静态资源访问" class="headerlink" title="静态资源访问"></a>静态资源访问</h2><p>在application.properties中能定义过滤规则和静态资源位置</p><p>一般在static下就够用了，不用更改静态资源位置     </p><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024153834493.png" class="" title="image-20221024153834493"><h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024160153091.png" class="" title="image-20221024160153091"><p>一般配置信息在config包下</p><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024161902294.png" class="" title="image-20221024161902294"><h2 id="编写拦截器"><a href="#编写拦截器" class="headerlink" title="编写拦截器"></a>编写拦截器</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;LoginInterceptor&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="拦截器注册"><a href="#拦截器注册" class="headerlink" title="拦截器注册"></a>拦截器注册</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAppConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加拦截器对象， 注入到容器中</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建拦截器对象</span></span><br><span class="line">        HandlerInterceptor interceptor = <span class="keyword">new</span> LoginInterceptor();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//指定拦截的请求uri地址</span></span><br><span class="line">        String path []= &#123;<span class="string">&quot;/user/**&quot;</span>&#125;;</span><br><span class="line">        <span class="comment">//指定不拦截的地址</span></span><br><span class="line">        String excludePath  [] = &#123;<span class="string">&quot;/user/login&quot;</span>&#125;;</span><br><span class="line">        registry.addInterceptor(interceptor)</span><br><span class="line">                .addPathPatterns(path)</span><br><span class="line">                .excludePathPatterns(excludePath);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="RESTful服务-Swagger"><a href="#RESTful服务-Swagger" class="headerlink" title="RESTful服务+Swagger"></a>RESTful服务+Swagger</h1><h2 id="Restful"><a href="#Restful" class="headerlink" title="Restful"></a>Restful</h2><p>与Apipost结合使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//@PathVariable : 从url中获取数据</span></span><br><span class="line">   <span class="meta">@GetMapping(&quot;/user/&#123;id&#125;&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getUserById</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">      System.out.println(id);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;根据Id获取用户信息&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@PostMapping(&quot;/user&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">(User user)</span></span>&#123;<span class="keyword">return</span> <span class="string">&quot;添加用户&quot;</span>;&#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@PutMapping(&quot;/user&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">updateUserById</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;更新用户&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@DeleteMapping(&quot;/user/&#123;id&#125;&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">deleteById</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">      System.out.println(id);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;删除用户&quot;</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Swagger"><a href="#Swagger" class="headerlink" title="Swagger"></a>Swagger</h2><h2 id="什么是Swagger"><a href="#什么是Swagger" class="headerlink" title="什么是Swagger"></a>什么是Swagger</h2><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024190848001.png" class="" title="image-20221024190848001"><h2 id="在SpringBoot项目中整合Swagger"><a href="#在SpringBoot项目中整合Swagger" class="headerlink" title="在SpringBoot项目中整合Swagger"></a>在SpringBoot项目中整合Swagger</h2><p>1.引入springfox-swagger2和springfox-swagger-ui依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.配置Swagger</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span><span class="comment">//启用Swagger2功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 配置Swagger2相关的bean</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Docket <span class="title">createRestApi</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span>  <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">.apiInfo(apiInfo())</span><br><span class="line">.select()</span><br><span class="line">.apis(RequestHandlerSelectors.basePackage(<span class="string">&quot;com&quot;</span>))<span class="comment">//com下的包都交给Swagger2管理</span></span><br><span class="line">.paths(PathSelectors.any()).build();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 此处主要是API文档页面显示信息*/</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">.title(<span class="string">&quot;项目演示API&quot;</span>)<span class="comment">//标题</span></span><br><span class="line">.description(<span class="string">&quot;演示项目&quot;</span>)<span class="comment">//描述</span></span><br><span class="line">.version(<span class="string">&quot;1.0&quot;</span>)<span class="comment">//版本</span></span><br><span class="line">.build();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.启动项目访问<a href="http://localhost:8080/swagger-ui.html">http://localhost:8080/swagger-ui.html</a></p><p>如果显示不出则可能是项目中有配置注解类（@Configuration）继承了WebMvcConfigurationSupport，导致默认的Swagger静态资源被覆盖，而缺失了配置。</p><p>可在该继承配置类中，显式添加如下swagger静态资源：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class="line">    registry.addResourceHandler(<span class="string">&quot;doc.html&quot;</span>)</span><br><span class="line">            .addResourceLocations(<span class="string">&quot;classpath:/META-INF/resources/&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    registry.addResourceHandler(<span class="string">&quot;swagger-ui.html&quot;</span>)</span><br><span class="line">            .addResourceLocations(<span class="string">&quot;classpath:/META-INF/resources/&quot;</span>);</span><br><span class="line">    registry.addResourceHandler(<span class="string">&quot;/webjars/**&quot;</span>)</span><br><span class="line">            .addResourceLocations(<span class="string">&quot;classpath:/META-INF/resources/webjars/&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="MybatisPlus快速上手"><a href="#MybatisPlus快速上手" class="headerlink" title="MybatisPlus快速上手"></a>MybatisPlus快速上手</h1><h2 id="Mybatis的使用"><a href="#Mybatis的使用" class="headerlink" title="Mybatis的使用"></a>Mybatis的使用</h2><h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--MyBatisPlus依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--mysql驱动依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--数据库连接池druid--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置数据库相关信息"><a href="#配置数据库相关信息" class="headerlink" title="配置数据库相关信息"></a>配置数据库相关信息</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/mydb?&amp;serverTimezone=GMT%2B8&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><h3 id="mapper下写要被动态代理实现的接口"><a href="#mapper下写要被动态代理实现的接口" class="headerlink" title="mapper下写要被动态代理实现的接口"></a>mapper下写要被动态代理实现的接口</h3><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024211331078.png" class="" title="image-20221024211331078"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Select(&quot;select * from user where id =#&#123;i&#125; &quot;)</span></span><br><span class="line">   <span class="function">List&lt;User&gt; <span class="title">find</span><span class="params">(<span class="keyword">int</span> i)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Insert(&quot;insert into user values(#&#123;id&#125;,#&#123;username&#125;,#&#123;password&#125;,#&#123;birthday&#125;)&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Delete(&quot;delete from user where id =#&#123;id&#125;&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Update(&quot;update user set username=#&#123;username&#125;,password=#&#123;password&#125;,birthday=#&#123;birthday&#125; where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Controller中将动态代理对象注入，然后接受请求"><a href="#Controller中将动态代理对象注入，然后接受请求" class="headerlink" title="Controller中将动态代理对象注入，然后接受请求"></a>Controller中将动态代理对象注入，然后接受请求</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping(&quot;/user/&#123;i&#125;&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> List <span class="title">query</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">      List&lt;User&gt; list= userMapper.find(i);</span><br><span class="line">      System.out.println(list);</span><br><span class="line">      <span class="comment">//返回对象会自动转为json</span></span><br><span class="line">      <span class="keyword">return</span> list;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@PostMapping(&quot;/user&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">      <span class="keyword">int</span> i=userMapper.insert(user);</span><br><span class="line">      <span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;插入成功&quot;</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">return</span>  <span class="string">&quot;插入失败&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@DeleteMapping(&quot;/user/&#123;id&#125;&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">      <span class="keyword">int</span> i=userMapper.delete(id);</span><br><span class="line">      <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;删除成功&quot;</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;删除失败&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@PutMapping(&quot;/user&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">      <span class="keyword">int</span> i = userMapper.update(user);</span><br><span class="line">      <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;更新成功&quot;</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;更新失败&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MybatisPlus的使用"><a href="#MybatisPlus的使用" class="headerlink" title="MybatisPlus的使用"></a>MybatisPlus的使用</h2><h3 id="mapper接口直接继承BaseMapper-lt-T-gt-T是对应表的实体类"><a href="#mapper接口直接继承BaseMapper-lt-T-gt-T是对应表的实体类" class="headerlink" title="mapper接口直接继承BaseMapper&lt; T &gt;,T是对应表的实体类"></a>mapper接口直接继承BaseMapper&lt; T &gt;,T是对应表的实体类</h3><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221025094203245.png" class="" title="image-20221025094203245"><h3 id="然后利用所写好的方法直接完成请求"><a href="#然后利用所写好的方法直接完成请求" class="headerlink" title="然后利用所写好的方法直接完成请求"></a>然后利用所写好的方法直接完成请求</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">query</span><span class="params">()</span></span>&#123;</span><br><span class="line">List&lt;User&gt; list= userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">System.out.println(list);</span><br><span class="line"><span class="comment">//返回对象会自动转为json</span></span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">save</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=userMapper.insert(user);</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;插入成功&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span>  <span class="string">&quot;插入失败&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过主键id进行删除</span></span><br><span class="line"><span class="meta">@DeleteMapping(&quot;/user/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">delete1</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=userMapper.deleteById(id);</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;删除成功&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;删除失败&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//根据map来删除，注意，map里面的字段与数据库字段需要保持一致哦</span></span><br><span class="line"><span class="meta">@DeleteMapping(&quot;/user/&#123;username&#125;/&#123;password&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">delete2</span><span class="params">(<span class="meta">@PathVariable</span> String username,String password)</span> </span>&#123;</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">&quot;username&quot;</span>, username);</span><br><span class="line">map.put(<span class="string">&quot;password&quot;</span>, password);</span><br><span class="line"><span class="keyword">int</span> i = userMapper.deleteByMap(map);</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;删除成功&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span>  <span class="string">&quot;删除失败&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@PutMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = userMapper.updateById(user);</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;更新成功&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;更新失败&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="TableName（”t-user”）"><a href="#TableName（”t-user”）" class="headerlink" title="@TableName（”t_user”）"></a>@TableName（”t_user”）</h3><p>如果实体类名称和表名不一致，则可以利用这一标签进行实体类与表的配对（括号里为表名）</p><h3 id="TableId-type-IdType-AUTO"><a href="#TableId-type-IdType-AUTO" class="headerlink" title="@TableId(type = IdType.AUTO)"></a>@TableId(type = IdType.AUTO)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br></pre></td></tr></table></figure><p>如在实体类表明id为主键，则这个用户对象就会自动带上id字段的属性值（插入的时候只写其他属性）</p><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221025095244905.png" class="" title="image-20221025095244905"><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221025095501753.png" class="" title="image-20221025095501753"><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221025095446445.png" class="" title="image-20221025095446445"><h3 id="TableField-“”"><a href="#TableField-“”" class="headerlink" title="@TableField(“”)"></a>@TableField(“”)</h3><p>如果实体类中属性与表中字段名称不同，则可以利用该注解来进行一个说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(&quot;nickname&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure><h1 id="MybatisPlus多表查询及分页查询"><a href="#MybatisPlus多表查询及分页查询" class="headerlink" title="MybatisPlus多表查询及分页查询"></a>MybatisPlus多表查询及分页查询</h1><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><p>多表查询可参考<a href="https://blog.csdn.net/heartsdance/article/details/119734906">https://blog.csdn.net/heartsdance/article/details/119734906</a></p><p>MybatisPlus主要是优化了单表查询，对于多表查询，还是使用Mybatis</p><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221025190008265.png" class="" title="image-20221025190008265"><p>现有用户信息表(t_user)和订单表(t_order)两张表</p><p>t_user</p><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221025190335921.png" class="" title="image-20221025190335921"><p>t_order</p><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221025190359034.png" class="" title="image-20221025190359034"><h3 id="查询用户信息时顺带将该用户订单信息一同查出"><a href="#查询用户信息时顺带将该用户订单信息一同查出" class="headerlink" title="查询用户信息时顺带将该用户订单信息一同查出"></a>查询用户信息时顺带将该用户订单信息一同查出</h3><h4 id="用户与订单为一对多关系"><a href="#用户与订单为一对多关系" class="headerlink" title="用户与订单为一对多关系"></a>用户与订单为一对多关系</h4><p>在用户实体类中包含订单属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(exist = false)</span></span><br><span class="line"><span class="keyword">private</span> List&lt;Order&gt; orders;</span><br></pre></td></tr></table></figure><h4 id="UserMapper接口中定义selectAllUserAndOrders（）方法"><a href="#UserMapper接口中定义selectAllUserAndOrders（）方法" class="headerlink" title="UserMapper接口中定义selectAllUserAndOrders（）方法"></a>UserMapper接口中定义selectAllUserAndOrders（）方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看用户及其所有的订单</span></span><br><span class="line"><span class="meta">@Select(&quot;select * from t_user&quot;)</span></span><br><span class="line"><span class="meta">@Results(</span></span><br><span class="line"><span class="meta">      &#123;</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;id&quot;, property = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;username&quot;, property = &quot;username&quot;),</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;password&quot;, property = &quot;password&quot;),</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;birthday&quot;, property = &quot;birthday&quot;),</span></span><br><span class="line"><span class="meta">            @Result(column = &quot;id&quot;, property = &quot;orders&quot;, javaType = List.class,</span></span><br><span class="line"><span class="meta">                  many = @Many(select = &quot;com.example.mpdemo.mapper.OrderMapper.selectByUid&quot;)</span></span><br><span class="line"><span class="meta">            )</span></span><br><span class="line"><span class="meta">      &#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">selectAllUserAndOrders</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>@Many注解中调用的是OrderMapper接口中的selectByUid方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from t_order where uid=#&#123;uid&#125;&quot;)</span></span><br><span class="line"><span class="function">List&lt;Order&gt; <span class="title">selectByUid</span><span class="params">(<span class="keyword">int</span> uid)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="UserController中接受请求并返回数据"><a href="#UserController中接受请求并返回数据" class="headerlink" title="UserController中接受请求并返回数据"></a>UserController中接受请求并返回数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/user/findAll&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">find</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> userMapper.selectAllUserAndOrders();&#125;</span><br></pre></td></tr></table></figure><h3 id="查询订单并将其所属的用户信息一同查出"><a href="#查询订单并将其所属的用户信息一同查出" class="headerlink" title="查询订单并将其所属的用户信息一同查出"></a>查询订单并将其所属的用户信息一同查出</h3><h4 id="订单与用户是一对一关系"><a href="#订单与用户是一对一关系" class="headerlink" title="订单与用户是一对一关系"></a>订单与用户是一对一关系</h4><p>在订单实体类中包含用户属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(exist = false)</span></span><br><span class="line"><span class="keyword">private</span> User user;</span><br></pre></td></tr></table></figure><h4 id="OrderMapper接口中定义selectALlOrdersAndUser（）方法"><a href="#OrderMapper接口中定义selectALlOrdersAndUser（）方法" class="headerlink" title="OrderMapper接口中定义selectALlOrdersAndUser（）方法"></a>OrderMapper接口中定义selectALlOrdersAndUser（）方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from t_order&quot;)</span></span><br><span class="line"><span class="meta">@Results(</span></span><br><span class="line"><span class="meta">   &#123;</span></span><br><span class="line"><span class="meta">      @Result(column = &quot;id&quot;,property = &quot;id&quot;),</span></span><br><span class="line"><span class="meta">      @Result(column = &quot;ordertime&quot; ,property = &quot;ordertime&quot;),</span></span><br><span class="line"><span class="meta">      @Result(column = &quot;total&quot;,property =&quot;total&quot;),</span></span><br><span class="line"><span class="meta">      @Result(column = &quot;uid&quot;,property = &quot;user&quot;,javaType = User.class,</span></span><br><span class="line"><span class="meta">         one = @One(select = &quot;com.example.mpdemo.mapper.UserMapper.selectById&quot;)</span></span><br><span class="line"><span class="meta">      )</span></span><br><span class="line"><span class="meta">   &#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="function">List&lt;Order&gt; <span class="title">selectALlOrdersAndUser</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>@one注解中调用的是UserMapper接口中的selectById()方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from t_user where id= #&#123;id&#125; &quot;)</span></span><br><span class="line"><span class="function">User <span class="title">selectById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="OrderController中接受请求并返回数据"><a href="#OrderController中接受请求并返回数据" class="headerlink" title="OrderController中接受请求并返回数据"></a>OrderController中接受请求并返回数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/order/findAll&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Order&gt; <span class="title">find</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">return</span> orderMapper.selectALlOrdersAndUser();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><h3 id="Mybatis版条件查询"><a href="#Mybatis版条件查询" class="headerlink" title="Mybatis版条件查询"></a>Mybatis版条件查询</h3><h4 id="UserMapper中"><a href="#UserMapper中" class="headerlink" title="UserMapper中"></a>UserMapper中</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from user where id =#&#123;i&#125; &quot;)</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">find</span><span class="params">(<span class="keyword">int</span> i)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="UserController中"><a href="#UserController中" class="headerlink" title="UserController中"></a>UserController中</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">query</span><span class="params">()</span></span>&#123;</span><br><span class="line">   List&lt;User&gt; list= userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">   System.out.println(list);</span><br><span class="line">   <span class="comment">//返回对象会自动转为json</span></span><br><span class="line">   <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MybatisPlus版条件查询"><a href="#MybatisPlus版条件查询" class="headerlink" title="MybatisPlus版条件查询"></a>MybatisPlus版条件查询</h3><p>UserController中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/user/find&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByCond</span><span class="params">()</span></span>&#123;</span><br><span class="line">   QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">   queryWrapper.eq(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;lucy&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> userMapper.selectList(queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><h3 id="先定义一个配置类"><a href="#先定义一个配置类" class="headerlink" title="先定义一个配置类"></a>先定义一个配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfig</span> </span>&#123;</span><br><span class="line">   <span class="comment">//对分页拦截器做一个添加</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> MybatisPlusInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span></span>&#123;</span><br><span class="line">      MybatisPlusInterceptor interceptor = <span class="keyword">new</span> MybatisPlusInterceptor();</span><br><span class="line">      PaginationInnerInterceptor paginationInnerInterceptor=<span class="keyword">new</span> PaginationInnerInterceptor(DbType.MYSQL);</span><br><span class="line">      interceptor.addInnerInterceptor(paginationInnerInterceptor);</span><br><span class="line">      <span class="keyword">return</span> interceptor;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在UserController中接受请求并响应"><a href="#在UserController中接受请求并响应" class="headerlink" title="在UserController中接受请求并响应"></a>在UserController中接受请求并响应</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/user/findByPage&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> IPage <span class="title">findByPage</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="comment">//Page是来描述分页情况的</span></span><br><span class="line">   Page&lt;User&gt; page = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line">   <span class="comment">//Ipage是来描述结果集的</span></span><br><span class="line">   IPage iPage = userMapper.selectPage(page, <span class="keyword">null</span>);</span><br><span class="line">   <span class="keyword">return</span> iPage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Vue框架快速上手"><a href="#Vue框架快速上手" class="headerlink" title="Vue框架快速上手"></a>Vue框架快速上手</h1><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--1.引入vue的脚本文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--<span class="number">2.</span>声明要被vue控制的DOM区域--&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--3.创建vue的实例对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> hello=&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">message</span>: <span class="string">&quot;Hello Vue&quot;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> app=Vue.createApp(hello);</span></span><br><span class="line"><span class="javascript">    app.mount(<span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="内容渲染指令"><a href="#内容渲染指令" class="headerlink" title="内容渲染指令"></a>内容渲染指令</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名&#123;&#123;username&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>性别&#123;&#123;gender&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;desc&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--内容以html方式渲染出来--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;desc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> vm=&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">username</span>: <span class="string">&#x27;zhangsan&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">desc</span>: <span class="string">&#x27;&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度&lt;/a&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app=Vue.createApp(vm);</span></span><br><span class="line"><span class="javascript">  app.mount(<span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性绑定指令"><a href="#属性绑定指令" class="headerlink" title="属性绑定指令"></a>属性绑定指令</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;link&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:placeholder</span>=<span class="string">&quot;inputValue&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;width:w&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> vm=&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">link</span>: <span class="string">&quot;http://www.baidu.com&quot;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">inputValue</span>: <span class="string">&#x27;请输入内容&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">imgSrc</span>: <span class="string">&#x27;./images/demo.png&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">w</span>: <span class="string">&#x27;500px&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app=Vue.createApp(vm);</span></span><br><span class="line"><span class="javascript">  app.mount(<span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用JavaScript表达式"><a href="#使用JavaScript表达式" class="headerlink" title="使用JavaScript表达式"></a>使用JavaScript表达式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--2.声明要被vue控制的DOM区域--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;number+1&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;ok?&#x27;True&#x27;:&#x27;False&#x27;&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;)&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">:id</span>=<span class="string">&quot;&#x27;list-&#x27;+id&quot;</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;user.name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--3.创建vue的实例对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm=&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">number</span>: <span class="number">9</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">ok</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">message</span>: <span class="string">&#x27;ABC&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">id</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">user</span>: &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span></span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> app=Vue.createApp(vm);</span></span><br><span class="line"><span class="javascript">    app.mount(<span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="事件绑定指令"><a href="#事件绑定指令" class="headerlink" title="事件绑定指令"></a>事件绑定指令</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--2.声明要被vue控制的DOM区域--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>count的值为:&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;addCount&quot;</span> <span class="attr">value</span>=<span class="string">&quot;+1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;addCount&quot;</span>&gt;</span>+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;count++&quot;</span>&gt;</span>+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--3.创建vue的实例对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm=&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">count</span>:<span class="number">0</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">addCount</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.count++;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> app=Vue.createApp(vm);</span></span><br><span class="line"><span class="javascript">    app.mount(<span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="条件渲染指令"><a href="#条件渲染指令" class="headerlink" title="条件渲染指令"></a>条件渲染指令</h2><p>v-if和v-show的区别：</p><p>​    如果v-if为false，则它所在的p标签不会被创造出来</p><p>​    如果v-show为false，它所在的p标签仍旧会被创造出来，只不过是以css的格式隐藏了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;flag =!flag&quot;</span>&gt;</span>Toggle flag<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>请求成功 ---被v-if控制<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>请求成功 ---被v-show控制<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> vm=&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">flag</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app=Vue.createApp(vm);</span></span><br><span class="line"><span class="javascript">  app.mount(<span class="string">&#x27;#app&#x27;</span>)</span></span><br></pre></td></tr></table></figure><h2 id="v-else和v-else-if指令"><a href="#v-else和v-else-if指令" class="headerlink" title="v-else和v-else-if指令"></a>v-else和v-else-if指令</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;num&gt;0.5&quot;</span>&gt;</span>随机数大于0.5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>随机数小于0.5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;type===&#x27;A&#x27;&quot;</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;type===&#x27;B&#x27;&quot;</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;type===&#x27;C&#x27;&quot;</span>&gt;</span>一般<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> vm=&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">num</span>: <span class="built_in">Math</span>.random(),</span></span><br><span class="line"><span class="javascript">          <span class="attr">type</span>: <span class="string">&#x27;C&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app=Vue.createApp(vm);</span></span><br><span class="line"><span class="javascript">  app.mount(<span class="string">&#x27;#app&#x27;</span>)</span></span><br></pre></td></tr></table></figure><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(user,index) in userList&quot;</span>&gt;</span>索引是&#123;&#123;index&#125;&#125;,姓名是&#123;&#123;user.name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> vm=&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">userList</span>: [</span></span><br><span class="line"><span class="javascript">              &#123;<span class="attr">id</span>:<span class="number">1</span>,<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">              &#123;<span class="attr">id</span>:<span class="number">2</span>,<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">              &#123;<span class="attr">id</span>:<span class="number">3</span>,<span class="attr">name</span>:<span class="string">&quot;王五&quot;</span>&#125;</span></span><br><span class="line"><span class="javascript">            ]</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app=Vue.createApp(vm);</span></span><br><span class="line"><span class="javascript">  app.mount(<span class="string">&#x27;#app&#x27;</span>)</span></span><br></pre></td></tr></table></figure><h2 id="v-for中的key"><a href="#v-for中的key" class="headerlink" title="v-for中的key"></a>v-for中的key</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--添加用户的区域--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addNewUser&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--用户列表区--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        //要用user中的id，因为其是我们设定的，不会发生改变</span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(user,index) in userList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;user.id&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">                    姓名：&#123;&#123;user.name&#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> vm=&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">//用户列表</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">userList</span>: [</span></span><br><span class="line"><span class="javascript">            &#123;<span class="attr">id</span>:<span class="number">1</span>,<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">            &#123;<span class="attr">id</span>:<span class="number">2</span>,<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">            &#123;<span class="attr">id</span>:<span class="number">3</span>,<span class="attr">name</span>:<span class="string">&quot;王五&quot;</span>&#125;</span></span><br><span class="line"><span class="javascript">          ],</span></span><br><span class="line"><span class="javascript">          <span class="comment">//输入的用户名</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="comment">//下一个可用的id值</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">nextId</span>: <span class="number">4</span></span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//点击了添加按钮</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">addNewUser</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.userList.unshift(&#123;<span class="attr">id</span>: <span class="built_in">this</span>.nextId,<span class="attr">name</span>: <span class="built_in">this</span>.name&#125;),</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.name=<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.nextId++</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app=Vue.createApp(vm);</span></span><br><span class="line"><span class="javascript">  app.mount(<span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Vue组件化开发"><a href="#Vue组件化开发" class="headerlink" title="Vue组件化开发"></a>Vue组件化开发</h1><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221027201054676.png" class="" title="image-20221027201054676"><h2 id="新建的组件在components文件夹"><a href="#新建的组件在components文件夹" class="headerlink" title="新建的组件在components文件夹"></a>新建的组件在components文件夹</h2><p>分为三部分，template是自定义模板，export为导出（需有名字），以及样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h1&gt;hello&lt;/h1&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Hello&quot;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="在App-vue中导入"><a href="#在App-vue中导入" class="headerlink" title="在App.vue中导入"></a>在App.vue中导入</h2><p>导入组件后要在export中的components注册</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot;&gt;</span><br><span class="line">  &lt;Hello&gt;&lt;/Hello&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">import Hello from &quot;@/components/Hello&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">  components:&#123;</span><br><span class="line">    Hello</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="执行流程"><a href="#执行流程" class="headerlink" title="执行流程"></a>执行流程</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">createApp(App).mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在main.js中创建并绑定所要控制的区域，绑定的区域在index.html中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br></pre></td></tr></table></figure><h1 id="第三方组件element-ui"><a href="#第三方组件element-ui" class="headerlink" title="第三方组件element-ui"></a>第三方组件element-ui</h1><h2 id="组件传值"><a href="#组件传值" class="headerlink" title="组件传值"></a>组件传值</h2><p>给自定义的组件传值可利用props，定义该组件有何属性</p><p>然后将app.vue中的值与该组件的属性绑定即可</p><p>Movie.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;&#123;&#123;title&#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;span&gt;&#123;&#123;rating&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;button @click=&quot;fun&quot;&gt;点击收藏&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Movie&quot;,</span><br><span class="line">  props: [&#x27;title&#x27;,&#x27;rating&#x27;],</span><br><span class="line">  data: function ()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    fun: function ()&#123;</span><br><span class="line">      alert(&quot;收藏成功&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;Movie v-for=&quot;movie in movies&quot; :key=&quot;movie.id&quot; :title=&quot;movie.title&quot; :rating=&quot;movie.rating&quot;&gt;&lt;/Movie&gt;</span><br><span class="line">    &lt;Hello&gt;&lt;/Hello&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Movie from &quot;@/components/Movie&quot;;</span><br><span class="line">import Hello from &quot;@/components/Hello&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    Movie,</span><br><span class="line">    Hello</span><br><span class="line">  &#125;,</span><br><span class="line">  data: function ()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">      movies: [</span><br><span class="line">        &#123;id:1,title:&quot;金刚狼1&quot;,rating:8.7&#125;,</span><br><span class="line">        &#123;id:2,title:&quot;金刚狼2&quot;,rating:8.6&#125;,</span><br><span class="line">        &#123;id:3,title:&quot;金刚狼3&quot;,rating:8.5&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="项目中的依赖"><a href="#项目中的依赖" class="headerlink" title="项目中的依赖"></a>项目中的依赖</h2><p>项目中的依赖在node_modules中，如果项目不能运行，则可通过npm install命令</p><p><strong>npm install</strong> :它会根据package.json中的信息联网进行下载该项目中的依赖</p><h2 id="第三方组件的使用"><a href="#第三方组件的使用" class="headerlink" title="第三方组件的使用"></a>第三方组件的使用</h2><h3 id="element-ui"><a href="#element-ui" class="headerlink" title="element-ui"></a>element-ui</h3><p><a href="https://element.eleme.cn/">https://element.eleme.cn</a></p><h4 id="npm安装"><a href="#npm安装" class="headerlink" title="npm安装"></a>npm安装</h4><p>npm install element-ui</p><h4 id="引入Element"><a href="#引入Element" class="headerlink" title="引入Element"></a>引入Element</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在main.js中引入</span></span><br><span class="line"><span class="keyword">import</span> Element <span class="keyword">from</span> <span class="string">&quot;element-ui&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用该组件</span></span><br><span class="line">Vue.use(Element);</span><br></pre></td></tr></table></figure><h4 id="按需引入需要组件"><a href="#按需引入需要组件" class="headerlink" title="按需引入需要组件"></a>按需引入需要组件</h4><p>选择希望使用的组件</p><p>将其直接放到template标签中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">        :data=&quot;tableData&quot;</span><br><span class="line">        style=&quot;width: 100%&quot;</span><br><span class="line">        :row-class-name=&quot;tableRowClassName&quot;&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;date&quot;</span><br><span class="line">          label=&quot;日期&quot;</span><br><span class="line">          width=&quot;180&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;name&quot;</span><br><span class="line">          label=&quot;姓名&quot;</span><br><span class="line">          width=&quot;180&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;address&quot;</span><br><span class="line">          label=&quot;地址&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">    &lt;el-date-picker</span><br><span class="line">        v-model=&quot;value1&quot;</span><br><span class="line">        type=&quot;date&quot;</span><br><span class="line">        placeholder=&quot;选择日期&quot;&gt;</span><br><span class="line">    &lt;/el-date-picker&gt;</span><br><span class="line">    &lt;i class=&quot;fa fa-camera-retro&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.el-table .warning-row &#123;</span><br><span class="line">  background: oldlace;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-table .success-row &#123;</span><br><span class="line">  background: #f0f9eb;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    tableRowClassName(&#123;row, rowIndex&#125;) &#123;</span><br><span class="line">      if (rowIndex === 1) &#123;</span><br><span class="line">        return &#x27;warning-row&#x27;;</span><br><span class="line">      &#125; else if (rowIndex === 3) &#123;</span><br><span class="line">        return &#x27;success-row&#x27;;</span><br><span class="line">      &#125;</span><br><span class="line">      return &#x27;&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      tableData: [&#123;</span><br><span class="line">        date: &#x27;2016-05-02&#x27;,</span><br><span class="line">        name: &#x27;王小虎&#x27;,</span><br><span class="line">        address: &#x27;上海市普陀区金沙江路 1518 弄&#x27;,</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        date: &#x27;2016-05-04&#x27;,</span><br><span class="line">        name: &#x27;王小虎&#x27;,</span><br><span class="line">        address: &#x27;上海市普陀区金沙江路 1518 弄&#x27;</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        date: &#x27;2016-05-01&#x27;,</span><br><span class="line">        name: &#x27;王小虎&#x27;,</span><br><span class="line">        address: &#x27;上海市普陀区金沙江路 1518 弄&#x27;,</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        date: &#x27;2016-05-03&#x27;,</span><br><span class="line">        name: &#x27;王小虎&#x27;,</span><br><span class="line">        address: &#x27;上海市普陀区金沙江路 1518 弄&#x27;</span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  name: &quot;Hello&quot;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="Font-Awesome"><a href="#Font-Awesome" class="headerlink" title="Font Awesome"></a>Font Awesome</h3><h4 id="npm安装-1"><a href="#npm安装-1" class="headerlink" title="npm安装"></a>npm安装</h4><p>npm install font-awesome</p><h4 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h4><p>在main.js中引入</p><p>import ‘font-awesome/css/font-awesome.min.css’</p><h4 id="按需引入所需图标"><a href="#按需引入所需图标" class="headerlink" title="按需引入所需图标"></a>按需引入所需图标</h4><p>将其放在div中</p><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221029103911100.png" class="" title="image-20221029103911100"><h1 id="Axios网络请求"><a href="#Axios网络请求" class="headerlink" title="Axios网络请求"></a>Axios网络请求</h1><h2 id="Axios简介"><a href="#Axios简介" class="headerlink" title="Axios简介"></a>Axios简介</h2><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221029170028701.png" class="" title="image-20221029170028701"><h2 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h2><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221029155742429.png" class="" title="image-20221029155742429"><h2 id="跨域问题解决"><a href="#跨域问题解决" class="headerlink" title="跨域问题解决"></a>跨域问题解决</h2><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221029155858975.png" class="" title="image-20221029155858975"><h3 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h3><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221029160428372.png" class="" title="image-20221029160428372"><h3 id="简单请求的服务器处理"><a href="#简单请求的服务器处理" class="headerlink" title="简单请求的服务器处理"></a>简单请求的服务器处理</h3><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221029160636146.png" class="" title="image-20221029160636146"><h3 id="非简单请求"><a href="#非简单请求" class="headerlink" title="非简单请求"></a>非简单请求</h3><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221029160814768.png" class="" title="image-20221029160814768"><h3 id="非简单请求的服务器处理"><a href="#非简单请求的服务器处理" class="headerlink" title="非简单请求的服务器处理"></a>非简单请求的服务器处理</h3><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221029161102760.png" class="" title="image-20221029161102760"><h2 id="两种策略"><a href="#两种策略" class="headerlink" title="两种策略"></a>两种策略</h2><h3 id="Spring-Boot中配置CORS"><a href="#Spring-Boot中配置CORS" class="headerlink" title="Spring Boot中配置CORS"></a>Spring Boot中配置CORS</h3><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221029161651920.png" class="" title="image-20221029161651920"><h3 id="在所要发请求的controller上添加-CrossOrigin这一注解"><a href="#在所要发请求的controller上添加-CrossOrigin这一注解" class="headerlink" title="在所要发请求的controller上添加@CrossOrigin这一注解"></a>在所要发请求的controller上添加@CrossOrigin这一注解</h3><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221029161738668.png" class="" title="image-20221029161738668"><h2 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a>使用例子</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">        :data=&quot;tableData&quot;</span><br><span class="line">        style=&quot;width: 100%&quot;</span><br><span class="line">        :row-class-name=&quot;tableRowClassName&quot;&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;id&quot;</span><br><span class="line">          label=&quot;编号&quot;</span><br><span class="line">          width=&quot;180&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;username&quot;</span><br><span class="line">          label=&quot;姓名&quot;</span><br><span class="line">          width=&quot;180&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          prop=&quot;birthday&quot;</span><br><span class="line">          label=&quot;生日&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">    &lt;el-date-picker</span><br><span class="line">        v-model=&quot;value1&quot;</span><br><span class="line">        type=&quot;date&quot;</span><br><span class="line">        placeholder=&quot;选择日期&quot;&gt;</span><br><span class="line">    &lt;/el-date-picker&gt;</span><br><span class="line">    &lt;i class=&quot;fa fa-camera-retro&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.el-table .warning-row &#123;</span><br><span class="line">  background: oldlace;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-table .success-row &#123;</span><br><span class="line">  background: #f0f9eb;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import axios from  &#x27;axios&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    tableRowClassName(&#123;row, rowIndex&#125;) &#123;</span><br><span class="line">      if (rowIndex === 1) &#123;</span><br><span class="line">        return &#x27;warning-row&#x27;;</span><br><span class="line">      &#125; else if (rowIndex === 3) &#123;</span><br><span class="line">        return &#x27;success-row&#x27;;</span><br><span class="line">      &#125;</span><br><span class="line">      return &#x27;&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created: function () &#123;</span><br><span class="line">    //箭头函数作用域继承了父级</span><br><span class="line">    axios.get(&quot;http://localhost:8088/user/find&quot;).then( (response)=&gt;&#123;</span><br><span class="line">        this.tableData=response.data</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      tableData: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  name: &quot;Hello&quot;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="与vue整合"><a href="#与vue整合" class="headerlink" title="与vue整合"></a>与vue整合</h2><p>在main.js中写入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="comment">//其他vue文件可不用重复导入axios</span></span><br><span class="line">axios.defaults.baseURL=<span class="string">&quot;http://localhost:8088&quot;</span></span><br><span class="line"><span class="comment">//默认URL</span></span><br><span class="line">Vue.prototype.$http=axios</span><br><span class="line"><span class="comment">//如果需要设置全局变量，在main.js中，Vue实例化的代码里添加。</span></span><br><span class="line"><span class="comment">//不想污染全局作用域。这种情况下，你可以通过在原型上定义它们使其在每个Vue实例中可用</span></span><br><span class="line"><span class="comment">//这样 $http 就在所有Vue实例中可用了</span></span><br></pre></td></tr></table></figure><p>eg</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">created: function () &#123;</span><br><span class="line">  //箭头函数作用域继承了父级</span><br><span class="line">  this.$http.get(&quot;/user/find&quot;).then( (response)=&gt;&#123;</span><br><span class="line">      this.tableData=response.data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h1 id="前端路由VueRouter"><a href="#前端路由VueRouter" class="headerlink" title="前端路由VueRouter"></a>前端路由VueRouter</h1><h2 id="SPA-与前端路由"><a href="#SPA-与前端路由" class="headerlink" title="SPA 与前端路由"></a><strong>SPA</strong> <strong>与前端路由</strong></h2><p>路由是根据不同的url地址来显示不同的页面或内容的功能，这个概念很早是由后端提出的，既浏览器向</p><p>不同的地址发送请求，后端返回相应的内容。</p><p>SPA 指的是一个 web 网站只有唯一的一个 HTML 页面，所有组件的展示与切换都在这唯一的一个页面</p><p>内完成。此时，不同组件之间的切换需要通过前端路由来实现。</p><p>前端路由通常是通过监听URL hash属性值的变化，切换页面，hash 属性是一个 可读可写的字符串 ，该字</p><p>符串是 URL 的锚部分（从 # 号开始的部分）。</p><h3 id="前端路由的工作方式"><a href="#前端路由的工作方式" class="headerlink" title="前端路由的工作方式"></a>前端路由的工作方式</h3><p>前端路由，指的是 Hash 地址与组件之间的对应关系。</p><p>用户点击了页面上的路由链接</p><p>导致了 URL 地址栏中的 Hash 值发生了变化</p><p>前端路由监听了到 Hash 地址的变化</p><p>前端路由把当前 Hash 地址对应的组件渲染都浏览器中</p><h2 id="vue-router基本使用"><a href="#vue-router基本使用" class="headerlink" title="vue-router基本使用"></a><strong>vue-router</strong>基本使用</h2><p>vue-router的基本使用步骤</p><ul><li>在项目中安装 vue-router</li><li>定义路由组件</li><li>声明路由链接和占位符</li><li>创建路由模块</li><li>导入并挂载路由模块</li></ul><h3 id="vue-router安装"><a href="#vue-router安装" class="headerlink" title="vue-router安装"></a><strong>vue-router</strong>安装</h3><p>npm install vue-router@3</p><h3 id="创建路由组件"><a href="#创建路由组件" class="headerlink" title="创建路由组件"></a>创建路由组件</h3><p>在项目中定义 Discover.vue、Friends.vue、My.vue 三个组件，将来要使用 vue-router 来控制它们的</p><p>展示与切换：</p><p>Discover.vue：</p><p>npm install <a href="mailto:&#118;&#x75;&#x65;&#45;&#x72;&#111;&#117;&#116;&#101;&#x72;&#x40;&#x33;&#70;&#114;&#105;&#x65;&#x6e;&#100;&#x73;&#x2e;&#118;&#x75;&#101;">&#118;&#x75;&#x65;&#45;&#x72;&#111;&#117;&#116;&#101;&#x72;&#x40;&#x33;&#70;&#114;&#105;&#x65;&#x6e;&#100;&#x73;&#x2e;&#118;&#x75;&#101;</a>：</p><p>My.vue：</p><p><strong>声明路由链接和占位标签</strong></p><p>可以使用 <router-link> 标签来声明路由链接，并使用 <router-view> 标签来声明路由占位符。示例</p><p>代码如下：</p><p>App.vue：</p><p><strong>创建路由模块</strong></p><p>在项目中创建 index.js 路由模块，加入以下代码：</p><p>Discover.vue：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;发现音乐&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>Friends.vue：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;关注&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>My.vue：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;我的音乐&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="声明路由链接和占位标签"><a href="#声明路由链接和占位标签" class="headerlink" title="声明路由链接和占位标签"></a><strong>声明路由链接和占位标签</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">可以使用 &lt;router-link&gt; 标签来声明路由链接，并使用 &lt;router-view&gt; 标签来声明路由占位符。示例</span><br><span class="line"></span><br><span class="line">代码如下：</span><br><span class="line">App.vue：</span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;APP组件&lt;/h1&gt;</span><br><span class="line">    &lt;!-- 声明路由链接 --&gt;</span><br><span class="line">    &lt;router-link to=&quot;/discover&quot;&gt;发现音乐&lt;/router-link&gt;</span><br><span class="line">    &lt;router-link to=&quot;/my&quot;&gt;我的音乐&lt;/router-link&gt;</span><br><span class="line">    &lt;router-link to=&quot;/friend&quot;&gt;关注&lt;/router-link&gt;</span><br><span class="line">    &lt;!-- 声明路由占位标签 --&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="创建路由模块"><a href="#创建路由模块" class="headerlink" title="创建路由模块"></a>创建路由模块</h3><p>在项目中创建 index.js 路由模块，加入以下代码：    </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Discover <span class="keyword">from</span> <span class="string">&#x27;@/components/Discover.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Friends <span class="keyword">from</span> <span class="string">&#x27;@/components/Friends.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> My <span class="keyword">from</span> <span class="string">&#x27;@/components/My.vue&#x27;</span></span><br><span class="line"><span class="comment">//将VueRouter设置为Vue的插件</span></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line"><span class="comment">// 指定hash属性与组件的对应关系</span></span><br><span class="line">        <span class="attr">routes</span>: [</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/discover&#x27;</span>, <span class="attr">component</span>: Discover &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/friends&#x27;</span>, <span class="attr">component</span>: Friends &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/my&#x27;</span>, <span class="attr">component</span>: My &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h3 id="挂载路由模块"><a href="#挂载路由模块" class="headerlink" title="挂载路由模块"></a>挂载路由模块</h3><p>在main.js中导入并挂载router</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">    <span class="attr">router</span>:router</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="vue-router进阶"><a href="#vue-router进阶" class="headerlink" title="vue-router进阶"></a>vue-router进阶</h2><h3 id="路由重定向"><a href="#路由重定向" class="headerlink" title="路由重定向"></a>路由重定向</h3><p>路由重定向指的是：用户在访问地址 A 的时候，强制用户跳转到地址 C ，从而展示特定的组件页面。</p><p>通过路由规则的 redirect 属性，指定一个新的路由地址，可以很方便地设置路由的重定向：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line"><span class="comment">// 指定hash属性与组件的对应关系</span></span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line"><span class="comment">// 当用户访问 / 时，跳转到 /discover</span></span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="attr">redirect</span>: <span class="string">&#x27;/discover&#x27;</span>&#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/discover&#x27;</span>, <span class="attr">component</span>: Discover &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/friends&#x27;</span>, <span class="attr">component</span>: Friends &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/my&#x27;</span>, <span class="attr">component</span>: My &#125;,</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h3><p>在 Discover.vue 组件中，声明 toplist和 playlist的子路由链接以及子路由占位符。示例代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;发现音乐&lt;/h1&gt;</span><br><span class="line">    &lt;!-- 子路由链接 --&gt;</span><br><span class="line">    &lt;router-link to=&quot;/discover/toplist&quot;&gt;推荐&lt;/router-link&gt;</span><br><span class="line">    &lt;router-link to=&quot;/discover/playlist&quot;&gt;歌单&lt;/router-link&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>在 src/router/index.js 路由模块中，导入需要的组件，并使用 children 属性声明子路由规则：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line"><span class="comment">// 指定hash属性与组件的对应关系</span></span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="attr">redirect</span>: <span class="string">&#x27;/discover&#x27;</span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/discover&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: Discover,</span><br><span class="line">                <span class="comment">// 通过children属性，嵌套声明子路由</span></span><br><span class="line">                <span class="attr">children</span>: [</span><br><span class="line">                &#123;<span class="attr">path</span>:<span class="string">&quot;toplist&quot;</span>,<span class="attr">component</span>:TopList&#125;,</span><br><span class="line">                &#123;<span class="attr">path</span>:<span class="string">&quot;playlist&quot;</span>,<span class="attr">component</span>:PlayList&#125;,</span><br><span class="line">                ]</span><br><span class="line">    &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/friends&#x27;</span>, <span class="attr">component</span>: Friends &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/my&#x27;</span>, <span class="attr">component</span>: My &#125;,</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h2><p>动态路由指的是：把 Hash 地址中可变的部分定义为参数项，从而提高路由规则的复用性。在 vue-router 中使用英文的冒号（**:**）来定义路由的参数项。示例代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">path</span>: <span class="string">&#x27;/product/:id&#x27;</span>,<span class="attr">component</span>:Product &#125;</span><br></pre></td></tr></table></figure><p>通过动态路由匹配的方式渲染出来的组件中，可以使用 $route.params 对象访问到动态匹配的参数值，</p><p><strong>比如在商品详情组件的内部，根据id值，请求不同的商品数据</strong>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h1&gt;Product组件&lt;/h1&gt;</span><br><span class="line">    &lt;!-- 获取动态的id值 --&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123;$route.params.id&#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">// 组件的名称</span><br><span class="line">name: &#x27;Product&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>为了简化路由参数的获取形式，vue-router 允许在路由规则中开启 props 传参。示例代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">path</span>: <span class="string">&#x27;/product/:id&#x27;</span>,<span class="attr">component</span>: Product, <span class="attr">props</span>: <span class="literal">true</span> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h1&gt;Product组件&lt;/h1&gt;</span><br><span class="line">    &lt;!-- 获取动态的id值 --&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123;id&#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">// 组件的名称</span><br><span class="line">    name: &#x27;Product&#x27;,</span><br><span class="line">    props : [id]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="VueX"><a href="#VueX" class="headerlink" title="VueX"></a>VueX</h1><h2 id="Vuex介绍"><a href="#Vuex介绍" class="headerlink" title="Vuex介绍"></a>Vuex介绍</h2><p>由于状态零散地分布在许多组件和组件之间的交互中，大型应用复杂度也经常逐渐增长。为了解决这个</p><p>问题，Vue 提供 Vuex：我们有受到 Elm 启发的状态管理库。</p><p>Vuex 是一个专为 Vue.js 应用程序开发的<strong>状态管理模式</strong> <strong>+</strong> <strong>库</strong>。它采用集中式存储管理应用的所有组件的</p><p>状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p><h2 id="什么情况下应该使用-Vuex？"><a href="#什么情况下应该使用-Vuex？" class="headerlink" title="什么情况下应该使用 Vuex？"></a><strong>什么情况下应该使用</strong> Vuex？</h2><p>Vuex 可以帮助我们管理共享状态，并附带了更多的概念和框架。这需要对短期和长期效益进行权衡。</p><p>如果您不打算开发大型单页应用，使用 Vuex 可能是繁琐冗余的。确实是如此——如果您的应用够简</p><p>单，您最好不要使用 Vuex。一个简单的 store 模式就足够您所需了。但是，如果您需要构建一个中大型</p><p>单页应用，您很可能会考虑如何更好地在组件外部管理状态，Vuex 将会成为自然而然的选择。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221030165957097.png" class="" title="image-20221030165957097"><p>store</p><p>index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> VueX <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Vue.use(VueX)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store=<span class="keyword">new</span> VueX.Store(&#123;</span><br><span class="line">    <span class="attr">state</span>: &#123;</span><br><span class="line">        <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">todos</span>: [</span><br><span class="line">            &#123;<span class="attr">id</span>:<span class="number">1</span>,<span class="attr">text</span>:<span class="string">&#x27;吃饭&#x27;</span>,<span class="attr">done</span>:<span class="literal">true</span>&#125;,</span><br><span class="line">            &#123;<span class="attr">id</span>:<span class="number">2</span>,<span class="attr">text</span>:<span class="string">&#x27;睡觉&#x27;</span>,<span class="attr">done</span>:<span class="literal">false</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mutations</span>: &#123;</span><br><span class="line">        <span class="function"><span class="title">increment</span>(<span class="params">state,n</span>)</span>&#123;</span><br><span class="line">            state.count+=n;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="attr">doneTodos</span>: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span>  state.todos.filter(<span class="function"><span class="params">todo</span>=&gt;</span>todo.done)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><p>main.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import App from &#x27;./App.vue&#x27;</span><br><span class="line">import store from &quot;@/store&quot;;</span><br><span class="line">Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  render: h =&gt; h(App),</span><br><span class="line">  store: store</span><br><span class="line"></span><br><span class="line">&#125;).$mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure><p>components</p><p>HelloWorld.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">        &lt;!-- &#123;&#123;this.$store.state.count&#125;&#125;--&gt;</span><br><span class="line">        &#123;&#123;count&#125;&#125;</span><br><span class="line">        &lt;button @click=&quot;add&quot;&gt;+1&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;todo in doneTodos&quot; :key=&quot;todo.id&quot;&gt;&#123;&#123;todo.text&#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;mapState,mapGetters&#125; from &quot;vuex&quot;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;HelloWorld&#x27;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapState([</span><br><span class="line">               //映射 this.count 为store.store.count</span><br><span class="line">               &quot;count&quot;, &quot;todos&quot;</span><br><span class="line">             ]),</span><br><span class="line">    ...mapGetters([</span><br><span class="line">        &#x27;doneTodos&#x27;</span><br><span class="line">    ])</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    add: function ()&#123;</span><br><span class="line">      this.$store.commit(&quot;increment&quot;,2)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="前端数据模拟MockJS"><a href="#前端数据模拟MockJS" class="headerlink" title="前端数据模拟MockJS"></a>前端数据模拟MockJS</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Mock.js 是一款前端开发中拦截Ajax请求再生成随机数据响应的工具，可以用来模拟服务器响应.<br>优点是非常简单方便, 无侵入性, 基本覆盖常用的接口数据类型.。<br>支持生成随机的文本、数字、布尔值、日期、邮箱、链接、图片、颜色等。<br>安装：npm install mockjs</p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>在项目中创建mock目录，新建index.js文件</p><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221030173653503.png" class="" title="image-20221030173653503"><p>组件中调用mock.js中模拟的数据接口，这时返回的response就是mock.js中用Mock.mock(‘url’,data）中设置的data</p><img src="/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221030173726199.png" class="" title="image-20221030173726199"><h1 id="vue-element-admin后台继承方案"><a href="#vue-element-admin后台继承方案" class="headerlink" title="vue-element-admin后台继承方案"></a>vue-element-admin后台继承方案</h1><p>地址：<a href="https://panjiachen.github.io/vue-element-admin-site/zh/guide/">https://panjiachen.github.io/vue-element-admin-site/zh/guide/</a></p><p>克隆项目，git clone <a href="https://github.com/PanJiaChen/vue-element-admin.git">https://github.com/PanJiaChen/vue-element-admin.git</a><br>进入项目目录，cd vue-element-admin<br>安装依赖，npm install<br>使用淘宝镜像，npm install –registry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a><br> 本地开发 启动项目，npm run dev</p><h1 id="JWT跨域认证"><a href="#JWT跨域认证" class="headerlink" title="JWT跨域认证"></a>JWT跨域认证</h1>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;SpringController&quot;&gt;&lt;a href=&quot;#SpringController&quot; class=&quot;headerlink&quot; title=&quot;SpringController&quot;&gt;&lt;/a&gt;SpringController&lt;/h1&gt;&lt;img src=&quot;/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024145849040.png&quot; class title=&quot;image-20221024145849040&quot;&gt;

&lt;h2 id=&quot;控制器&quot;&gt;&lt;a href=&quot;#控制器&quot; class=&quot;headerlink&quot; title=&quot;控制器&quot;&gt;&lt;/a&gt;控制器&lt;/h2&gt;&lt;img src=&quot;/2022/10/24/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/%E4%B8%80%E5%A4%A9SpringBoot-VUe%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/image-20221024145914952.png&quot; class title=&quot;image-20221024145914952&quot;&gt;

&lt;p&gt;如果返回的是数据是视图，则使用@Controller，@Controller通常会Thymeleaf模板使用，但结合使用就达不到前后端分离的效果&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="https://aiden-a.gitee.io/2022/10/22/leetcode/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95/"/>
    <id>https://aiden-a.gitee.io/2022/10/22/leetcode/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95/</id>
    <published>2022-10-22T13:57:01.000Z</published>
    <updated>2023-06-25T02:54:00.802Z</updated>
    
    <content type="html"><![CDATA[<h1 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h1><img src="/2022/10/22/leetcode/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95/image-20221022215942377.png" class="" title="image-20221022215942377"><h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><h2 id="定义：函数直接或间接调用自己"><a href="#定义：函数直接或间接调用自己" class="headerlink" title="定义：函数直接或间接调用自己"></a>定义：函数直接或间接调用自己</h2><p>func():</p><p>​       func()</p><h2 id="四要素"><a href="#四要素" class="headerlink" title="四要素"></a>四要素</h2><ol><li>接受的参数</li><li>返回值</li><li>终止的条件</li><li>递归拆解：如何递归下一层</li></ol><img src="/2022/10/22/leetcode/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95/image-20230625095847654.png" class="" title="image-20230625095847654"><h1 id="分治法"><a href="#分治法" class="headerlink" title="分治法"></a>分治法</h1><p>Divide&amp;Conquer</p><p>大问题切割成小问题</p><p>用到了递归，自己调用自己</p><img src="/2022/10/22/leetcode/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95/image-20230625101812551.png" class="" title="image-20230625101812551"><h1 id="回溯法"><a href="#回溯法" class="headerlink" title="回溯法"></a>回溯法</h1><img src="/2022/10/22/leetcode/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95/image-20230625102648036.png" class="" title="image-20230625102648036"><h1 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h1><p>核心：每一步做出的选择都是<em><strong>当前</strong></em>看起来<em><strong>最好的</strong></em>选择</p><p>​            只是局部的最优选择</p><p>​            而不是整体的最优选择</p><img src="/2022/10/22/leetcode/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95/image-20230625105324379.png" class="" title="image-20230625105324379">]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;双指针&quot;&gt;&lt;a href=&quot;#双指针&quot; class=&quot;headerlink&quot; title=&quot;双指针&quot;&gt;&lt;/a&gt;双指针&lt;/h1&gt;&lt;img src=&quot;/2022/10/22/leetcode/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95/image-20221022215942377.png&quot; class title=&quot;image-20221022215942377&quot;&gt;

&lt;h1 id=&quot;递归&quot;&gt;&lt;a href=&quot;#递归&quot; class=&quot;headerlink&quot; title=&quot;递归&quot;&gt;&lt;/a&gt;递归&lt;/h1&gt;&lt;h2 id=&quot;定义：函数直接或间接调用自己&quot;&gt;&lt;a href=&quot;#定义：函数直接或间接调用自己&quot; class=&quot;headerlink&quot; title=&quot;定义：函数直接或间接调用自己&quot;&gt;&lt;/a&gt;定义：函数直接或间接调用自己&lt;/h2&gt;&lt;p&gt;func():&lt;/p&gt;</summary>
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>215</title>
    <link href="https://aiden-a.gitee.io/2022/10/17/leetcode/leetcode%E9%A2%98/215/215/"/>
    <id>https://aiden-a.gitee.io/2022/10/17/leetcode/leetcode%E9%A2%98/215/215/</id>
    <published>2022-10-17T06:16:49.000Z</published>
    <updated>2022-10-17T06:20:37.537Z</updated>
    
    <content type="html"><![CDATA[<img src="/2022/10/17/leetcode/leetcode%E9%A2%98/215/215/image-20221017141826536.png" class="" title="image-20221017141826536"><h1 id="最大堆"><a href="#最大堆" class="headerlink" title="最大堆"></a>最大堆</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        PriorityQueue&lt;Integer&gt; maxHeap=<span class="keyword">new</span> PriorityQueue&lt;&gt;(Collections.reverseOrder());</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)&#123;</span><br><span class="line">            maxHeap.add(num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(k&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            maxHeap.poll();</span><br><span class="line">            k=k-<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxHeap.peek();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2022/10/17/leetcode/leetcode%E9%A2%98/215/215/image-20221017141826536.png&quot; class=&quot;&quot; title=&quot;image-20221017141826536&quot;&gt;

&lt;h1 id=&quot;最大堆</summary>
      
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>705</title>
    <link href="https://aiden-a.gitee.io/2022/10/16/leetcode/leetcode%E9%A2%98/705/705/"/>
    <id>https://aiden-a.gitee.io/2022/10/16/leetcode/leetcode%E9%A2%98/705/705/</id>
    <published>2022-10-16T10:28:29.000Z</published>
    <updated>2022-10-16T10:30:23.802Z</updated>
    
    <content type="html"><![CDATA[<img src="/2022/10/16/leetcode/leetcode%E9%A2%98/705/705/image-20221016182937545.png" class="" title="image-20221016182937545"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span>[] nums;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyHashSet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       nums=<span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">10000001</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">        nums[key]=<span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">        nums[key]=<span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nums[key];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your MyHashSet object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * MyHashSet obj = new MyHashSet();</span></span><br><span class="line"><span class="comment"> * obj.add(key);</span></span><br><span class="line"><span class="comment"> * obj.remove(key);</span></span><br><span class="line"><span class="comment"> * boolean param_3 = obj.contains(key);</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2022/10/16/leetcode/leetcode%E9%A2%98/705/705/image-20221016182937545.png&quot; class=&quot;&quot; title=&quot;image-20221016182937545&quot;&gt;

&lt;figure cla</summary>
      
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>389</title>
    <link href="https://aiden-a.gitee.io/2022/10/15/leetcode/leetcode%E9%A2%98/389/389/"/>
    <id>https://aiden-a.gitee.io/2022/10/15/leetcode/leetcode%E9%A2%98/389/389/</id>
    <published>2022-10-15T06:01:57.000Z</published>
    <updated>2022-10-15T06:03:00.524Z</updated>
    
    <content type="html"><![CDATA[<img src="/2022/10/15/leetcode/leetcode%E9%A2%98/389/389/image-20221015140255415.png" class="" title="image-20221015140255415"><h1 id="哈希表法"><a href="#哈希表法" class="headerlink" title="哈希表法"></a>哈希表法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">findTheDifference</span><span class="params">(String s, String t)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;Character,Integer&gt; map=<span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        HashMap&lt;Character,Integer&gt; map1=<span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">char</span>[] c1=s.toCharArray();</span><br><span class="line">        <span class="keyword">char</span>[] c2=t.toCharArray();</span><br><span class="line">        <span class="keyword">char</span> end=<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:c1)&#123;</span><br><span class="line">             <span class="keyword">if</span>(map.containsKey(c))&#123;</span><br><span class="line">                 map.put(c,map.get(c)+<span class="number">1</span>);</span><br><span class="line">             &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 map.put(c,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:c2)&#123;</span><br><span class="line">             <span class="keyword">if</span>(map1.containsKey(c))&#123;</span><br><span class="line">                map1.put(c,map1.get(c)+<span class="number">1</span>);</span><br><span class="line">             &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                map1.put(c,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:c2)&#123;</span><br><span class="line">            <span class="keyword">if</span>(map.get(c)!=map1.get(c))</span><br><span class="line">                end=c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> end;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2022/10/15/leetcode/leetcode%E9%A2%98/389/389/image-20221015140255415.png&quot; class=&quot;&quot; title=&quot;image-20221015140255415&quot;&gt;

&lt;h1 id=&quot;哈希表</summary>
      
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>217</title>
    <link href="https://aiden-a.gitee.io/2022/10/15/leetcode/leetcode%E9%A2%98/217/217/"/>
    <id>https://aiden-a.gitee.io/2022/10/15/leetcode/leetcode%E9%A2%98/217/217/</id>
    <published>2022-10-15T05:40:31.000Z</published>
    <updated>2022-10-16T05:05:41.883Z</updated>
    
    <content type="html"><![CDATA[<img src="/2022/10/15/leetcode/leetcode%E9%A2%98/217/217/image-20221015134254183.png" class="" title="image-20221015134254183"><h1 id="双遍历"><a href="#双遍历" class="headerlink" title="双遍历"></a>双遍历</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">containsDuplicate</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> m=nums[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=(i+<span class="number">1</span>);j&lt;nums.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(m==nums[j])&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="哈希表（自带函数）"><a href="#哈希表（自带函数）" class="headerlink" title="哈希表（自带函数）"></a>哈希表（自带函数）</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">containsDuplicate</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;Integer,Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(nums.length==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num: nums) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(num)) &#123;</span><br><span class="line">                map.put(num,map.get(num)+<span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                map.put(num,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k:map.keySet())&#123;</span><br><span class="line">            <span class="keyword">if</span>(map.get(k)&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="哈希表（数组）"><a href="#哈希表（数组）" class="headerlink" title="哈希表（数组）"></a>哈希表（数组）</h1><img src="/2022/10/15/leetcode/leetcode%E9%A2%98/217/217/image-20221015151852432.png" class="" title="image-20221015151852432"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">findTheDifference</span><span class="params">(String s, String t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sizeS=s.length();</span><br><span class="line">        <span class="keyword">int</span> sizeT=t.length();</span><br><span class="line">        <span class="keyword">int</span>[] table=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">if</span>(sizeS==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> t.charAt(<span class="number">0</span>); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;sizeT;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i&lt;sizeS)&#123;</span><br><span class="line">                table[s.charAt(i)-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">            table[t.charAt(i)-<span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;table.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(table[i]!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span>  (<span class="keyword">char</span>)(<span class="string">&#x27;a&#x27;</span>+i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Set集合"><a href="#Set集合" class="headerlink" title="Set集合"></a>Set集合</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">containsDuplicate</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        HashSet&lt;Integer&gt; set=<span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!set.add(num))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            set.add(num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/2022/10/15/leetcode/leetcode%E9%A2%98/217/217/image-20221015134254183.png&quot; class title=&quot;image-20221015134254183&quot;&gt;

&lt;h1 id=&quot;双遍历&quot;&gt;&lt;a href=&quot;#双遍历&quot; class=&quot;headerlink&quot; title=&quot;双遍历&quot;&gt;&lt;/a&gt;双遍历&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;containsDuplicate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nums)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;nums.length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; m=nums[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j=(i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);j&amp;lt;nums.length;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(m==nums[j])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&quot;哈希表（自带函数）&quot;&gt;&lt;a href=&quot;#哈希表（自带函数）&quot; class=&quot;headerlink&quot; title=&quot;哈希表（自带函数）&quot;&gt;&lt;/a&gt;哈希表（自带函数）&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;containsDuplicate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nums)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        HashMap&amp;lt;Integer,Integer&amp;gt; map = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(nums.length==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num: nums) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (map.containsKey(num)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                map.put(num,map.get(num)+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                map.put(num,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k:map.keySet())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(map.get(k)&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>496</title>
    <link href="https://aiden-a.gitee.io/2022/10/12/leetcode/leetcode%E9%A2%98/496/496/"/>
    <id>https://aiden-a.gitee.io/2022/10/12/leetcode/leetcode%E9%A2%98/496/496/</id>
    <published>2022-10-12T13:47:07.000Z</published>
    <updated>2022-10-12T13:55:19.815Z</updated>
    
    <content type="html"><![CDATA[<img src="/2022/10/12/leetcode/leetcode%E9%A2%98/496/496/image-20221012214822498.png" class="" title="image-20221012214822498"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] nextGreaterElement(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] end=<span class="keyword">new</span> <span class="keyword">int</span>[nums1.length];</span><br><span class="line">        Stack&lt;Integer&gt; stack=<span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num : nums2)&#123;</span><br><span class="line">            stack.push(num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums1.length;i++)&#123;</span><br><span class="line">            Stack&lt;Integer&gt; temp=<span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">            <span class="keyword">int</span> max=-<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">boolean</span> isBound=<span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">while</span>(!stack.isEmpty()&amp;&amp;isBound==<span class="keyword">false</span>)&#123;</span><br><span class="line">                <span class="keyword">int</span> top=stack.pop();</span><br><span class="line">                <span class="keyword">if</span>(nums1[i]&gt;top)&#123;</span><br><span class="line">                    temp.push(top);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums1[i]==top)&#123;</span><br><span class="line">                    temp.push(top);</span><br><span class="line">                    isBound=<span class="keyword">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    temp.push(top);</span><br><span class="line">                    max=top;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            end[i]=max;</span><br><span class="line">            <span class="keyword">while</span>(!temp.isEmpty())&#123;</span><br><span class="line">                stack.add(temp.pop());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> end;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2022/10/12/leetcode/leetcode%E9%A2%98/496/496/image-20221012214822498.png&quot; class=&quot;&quot; title=&quot;image-20221012214822498&quot;&gt;

&lt;figure cla</summary>
      
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>20</title>
    <link href="https://aiden-a.gitee.io/2022/10/12/leetcode/leetcode%E9%A2%98/20/20/"/>
    <id>https://aiden-a.gitee.io/2022/10/12/leetcode/leetcode%E9%A2%98/20/20/</id>
    <published>2022-10-12T13:44:24.000Z</published>
    <updated>2022-10-12T13:46:41.250Z</updated>
    
    <content type="html"><![CDATA[<img src="/2022/10/12/leetcode/leetcode%E9%A2%98/20/20/image-20221012214615945.png" class="" title="image-20221012214615945"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        Stack&lt;Character&gt; stack=<span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">char</span>[] c=s.toCharArray();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;c.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(c.length==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(c[i]==<span class="string">&#x27;(&#x27;</span>||c[i]==<span class="string">&#x27;[&#x27;</span>||c[i]==<span class="string">&#x27;&#123;&#x27;</span>)&#123;</span><br><span class="line">                stack.push(c[i]);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(!stack.isEmpty())&#123;</span><br><span class="line">                    <span class="keyword">if</span>(c[i]==<span class="string">&#x27;)&#x27;</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(stack.pop()!=<span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(c[i]==<span class="string">&#x27;]&#x27;</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(stack.pop()!=<span class="string">&#x27;[&#x27;</span>)&#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(c[i]==<span class="string">&#x27;&#125;&#x27;</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(stack.pop()!=<span class="string">&#x27;&#123;&#x27;</span>)&#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!stack.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2022/10/12/leetcode/leetcode%E9%A2%98/20/20/image-20221012214615945.png&quot; class=&quot;&quot; title=&quot;image-20221012214615945&quot;&gt;

&lt;figure class</summary>
      
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>数据结构</title>
    <link href="https://aiden-a.gitee.io/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>https://aiden-a.gitee.io/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2022-10-12T07:54:03.000Z</published>
    <updated>2022-10-17T06:17:53.082Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="创建数组（四种方式）"><a href="#创建数组（四种方式）" class="headerlink" title="创建数组（四种方式）"></a>创建数组（四种方式）</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221010153713674.png" class="" title="image-20221010153713674"><h2 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221010153823327.png" class="" title="image-20221010153823327"><h2 id="访问元素"><a href="#访问元素" class="headerlink" title="访问元素"></a>访问元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221010153912126.png" class="" title="image-20221010153912126"><h2 id="更新元素"><a href="#更新元素" class="headerlink" title="更新元素"></a>更新元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221010153948806.png" class="" title="image-20221010153948806"><h2 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221010154018725.png" class="" title="image-20221010154018725"><h2 id="数组长度"><a href="#数组长度" class="headerlink" title="数组长度"></a>数组长度</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221010154045186.png" class="" title="image-20221010154045186"><h2 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221010154112386.png" class="" title="image-20221010154112386"><h2 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221010154138836.png" class="" title="image-20221010154138836"><h2 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h2><p>排序的时间复杂度大多是O（NlogN)</p><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221010154446737.png" class="" title="image-20221010154446737"><p>Arrar数组逆向排序有两种方法：</p><p>1将数组从后往前读</p><p>2将int[]转为Integer数组，然后使用Arrays.sort(T[],Collections.reverseOrder());</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] a=<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>&#125;;</span><br><span class="line">Integer newNums[] = Arrays.stream(a).boxed().toArray(Integer[]::<span class="keyword">new</span>);</span><br><span class="line">Arrays.sort(newNums, Collections.reverseOrder());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;newNums.length;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> b=newNums[i];</span><br><span class="line">System.out.println(b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><h2 id="创建链表"><a href="#创建链表" class="headerlink" title="创建链表"></a>创建链表</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011165218703.png" class="" title="image-20221011165218703"><h2 id="添加元素-1"><a href="#添加元素-1" class="headerlink" title="添加元素"></a>添加元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011165241918.png" class="" title="image-20221011165241918"><h2 id="访问元素-1"><a href="#访问元素-1" class="headerlink" title="访问元素"></a>访问元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011165505917.png" class="" title="image-20221011165505917"><h2 id="搜素元素"><a href="#搜素元素" class="headerlink" title="搜素元素"></a>搜素元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011165546247.png" class="" title="image-20221011165546247"><h2 id="更新元素-1"><a href="#更新元素-1" class="headerlink" title="更新元素"></a>更新元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011165725807.png" class="" title="image-20221011165725807"><h2 id="删除元素-1"><a href="#删除元素-1" class="headerlink" title="删除元素"></a>删除元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011165741777.png" class="" title="image-20221011165741777"><h2 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011165809957.png" class="" title="image-20221011165809957"><h1 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h1><h2 id="创建队列"><a href="#创建队列" class="headerlink" title="创建队列"></a>创建队列</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011231433664.png" class="" title="image-20221011231433664"><h2 id="添加元素-2"><a href="#添加元素-2" class="headerlink" title="添加元素"></a>添加元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011231443746.png" class="" title="image-20221011231443746"><h2 id="获取即将出队的元素"><a href="#获取即将出队的元素" class="headerlink" title="获取即将出队的元素"></a>获取即将出队的元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011231507816.png" class="" title="image-20221011231507816"><h2 id="删除即将出队的元素"><a href="#删除即将出队的元素" class="headerlink" title="删除即将出队的元素"></a>删除即将出队的元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011231528637.png" class="" title="image-20221011231528637"><p>还有queue.remove()</p><h2 id="判断队列是否为空"><a href="#判断队列是否为空" class="headerlink" title="判断队列是否为空"></a>判断队列是否为空</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011231559146.png" class="" title="image-20221011231559146"><h2 id="队列长度"><a href="#队列长度" class="headerlink" title="队列长度"></a>队列长度</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011231614227.png" class="" title="image-20221011231614227"><h2 id="遍历队列"><a href="#遍历队列" class="headerlink" title="遍历队列"></a>遍历队列</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221011231629356.png" class="" title="image-20221011231629356"><h1 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h1><h2 id="创建栈"><a href="#创建栈" class="headerlink" title="创建栈"></a>创建栈</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221012092310981.png" class="" title="image-20221012092310981"><h2 id="添加元素-3"><a href="#添加元素-3" class="headerlink" title="添加元素"></a>添加元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221012092325173.png" class="" title="image-20221012092325173"><h2 id="获取栈顶元素"><a href="#获取栈顶元素" class="headerlink" title="获取栈顶元素"></a>获取栈顶元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221012092409973.png" class="" title="image-20221012092409973"><h2 id="删除栈顶元素"><a href="#删除栈顶元素" class="headerlink" title="删除栈顶元素"></a>删除栈顶元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221012092432849.png" class="" title="image-20221012092432849"><h2 id="栈的大小"><a href="#栈的大小" class="headerlink" title="栈的大小"></a>栈的大小</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221012092509964.png" class="" title="image-20221012092509964"><h2 id="栈是否为空"><a href="#栈是否为空" class="headerlink" title="栈是否为空"></a>栈是否为空</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221012092526646.png" class="" title="image-20221012092526646"><h2 id="栈的遍历"><a href="#栈的遍历" class="headerlink" title="栈的遍历"></a>栈的遍历</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221012092556828.png" class="" title="image-20221012092556828"><h1 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h1><h2 id="创建哈希表"><a href="#创建哈希表" class="headerlink" title="创建哈希表"></a>创建哈希表</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221014175857193.png" class="" title="image-20221014175857193"><h2 id="添加元素-4"><a href="#添加元素-4" class="headerlink" title="添加元素"></a>添加元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221014175910094.png" class="" title="image-20221014175910094"><h2 id="更新元素-2"><a href="#更新元素-2" class="headerlink" title="更新元素"></a>更新元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221014175952214.png" class="" title="image-20221014175952214"><h2 id="删除元素-2"><a href="#删除元素-2" class="headerlink" title="删除元素"></a>删除元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221014180014434.png" class="" title="image-20221014180014434"><h2 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221014180049384.png" class="" title="image-20221014180049384"><h2 id="检查key存在？"><a href="#检查key存在？" class="headerlink" title="检查key存在？"></a>检查key存在？</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221014180107172.png" class="" title="image-20221014180107172"><h2 id="长度-是否还有元素"><a href="#长度-是否还有元素" class="headerlink" title="长度/是否还有元素"></a>长度/是否还有元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221014180141884.png" class="" title="image-20221014180141884"> <h1 id="Set集合"><a href="#Set集合" class="headerlink" title="Set集合"></a>Set集合</h1><h2 id="创建集合"><a href="#创建集合" class="headerlink" title="创建集合"></a>创建集合</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221016125846536.png" class="" title="image-20221016125846536"><h2 id="添加元素-5"><a href="#添加元素-5" class="headerlink" title="添加元素"></a>添加元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221016125916807.png" class="" title="image-20221016125916807"><h2 id="搜索元素"><a href="#搜索元素" class="headerlink" title="搜索元素"></a>搜索元素</h2><p>o（1）</p><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221016125935354.png" class="" title="image-20221016125935354"><h2 id="删除元素-3"><a href="#删除元素-3" class="headerlink" title="删除元素"></a>删除元素</h2><p>o（1）</p><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221016125958189.png" class="" title="image-20221016125958189"><h2 id="长度-1"><a href="#长度-1" class="headerlink" title="长度"></a>长度</h2><p>o（1）</p><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221016130023400.png" class="" title="image-20221016130023400"><h1 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h1><h2 id="创建最小堆-最大堆"><a href="#创建最小堆-最大堆" class="headerlink" title="创建最小堆/最大堆"></a>创建最小堆/最大堆</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221016211037611.png" class="" title="image-20221016211037611"><h2 id="增加元素"><a href="#增加元素" class="headerlink" title="增加元素"></a>增加元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221016211056569.png" class="" title="image-20221016211056569"><h2 id="堆顶元素"><a href="#堆顶元素" class="headerlink" title="堆顶元素"></a>堆顶元素</h2><img src="数据结构/image-20221016211147504.png" alt="image-20221016211147504" style="zoom:80%;" /><h2 id="删除堆顶元素"><a href="#删除堆顶元素" class="headerlink" title="删除堆顶元素"></a>删除堆顶元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221016211220756.png" class="" title="image-20221016211220756"><h2 id="堆里有多少个元素"><a href="#堆里有多少个元素" class="headerlink" title="堆里有多少个元素"></a>堆里有多少个元素</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221016211256963.png" class="" title="image-20221016211256963"><h2 id="遍历堆"><a href="#遍历堆" class="headerlink" title="遍历堆"></a>遍历堆</h2><img src="/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221016211337742.png" class="" title="image-20221016211337742">]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h1&gt;&lt;h2 id=&quot;创建数组（四种方式）&quot;&gt;&lt;a href=&quot;#创建数组（四种方式）&quot; class=&quot;headerlink&quot; title=&quot;创建数组（四种方式）&quot;&gt;&lt;/a&gt;创建数组（四种方式）&lt;/h2&gt;&lt;img src=&quot;/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221010153713674.png&quot; class title=&quot;image-20221010153713674&quot;&gt;

&lt;h2 id=&quot;添加元素&quot;&gt;&lt;a href=&quot;#添加元素&quot; class=&quot;headerlink&quot; title=&quot;添加元素&quot;&gt;&lt;/a&gt;添加元素&lt;/h2&gt;&lt;img src=&quot;/2022/10/12/leetcode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20221010153823327.png&quot; class title=&quot;image-20221010153823327&quot;&gt;</summary>
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>933</title>
    <link href="https://aiden-a.gitee.io/2022/10/11/leetcode/leetcode%E9%A2%98/933/933/"/>
    <id>https://aiden-a.gitee.io/2022/10/11/leetcode/leetcode%E9%A2%98/933/933/</id>
    <published>2022-10-11T15:11:07.000Z</published>
    <updated>2022-10-11T15:13:48.008Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RecentCounter</span> </span>&#123;</span><br><span class="line">    Queue&lt;Integer&gt; queue;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RecentCounter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        queue = <span class="keyword">new</span> LinkedList&lt;Integer&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">ping</span><span class="params">(<span class="keyword">int</span> t)</span> </span>&#123;</span><br><span class="line">        queue.add(t);</span><br><span class="line">        <span class="keyword">while</span>(queue.size()&gt;<span class="number">0</span>&amp;&amp;t-queue.peek()&gt;<span class="number">3000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            queue.remove();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> queue.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your RecentCounter object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * RecentCounter obj = new RecentCounter();</span></span><br><span class="line"><span class="comment"> * int param_1 = obj.ping(t);</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>203</title>
    <link href="https://aiden-a.gitee.io/2022/10/11/leetcode/leetcode%E9%A2%98/203/203/"/>
    <id>https://aiden-a.gitee.io/2022/10/11/leetcode/leetcode%E9%A2%98/203/203/</id>
    <published>2022-10-11T08:51:00.000Z</published>
    <updated>2022-10-11T10:04:55.732Z</updated>
    
    <content type="html"><![CDATA[<img src="/2022/10/11/leetcode/leetcode%E9%A2%98/203/203/image-20221011180435305.png" class="" title="image-20221011180435305"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">removeElements</span><span class="params">(ListNode head, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">           ListNode dummy =<span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">           dummy.next=head;</span><br><span class="line">           ListNode previous=dummy;</span><br><span class="line">           previous.next=head;</span><br><span class="line">           <span class="keyword">while</span>(head!=<span class="keyword">null</span>)&#123;</span><br><span class="line">               <span class="keyword">if</span>(head.val!=val)&#123;</span><br><span class="line">                   previous=head;</span><br><span class="line">                   head=head.next;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span>&#123;</span><br><span class="line">                 previous.next=head.next;</span><br><span class="line">                 head=head.next;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> dummy.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2022/10/11/leetcode/leetcode%E9%A2%98/203/203/image-20221011180435305.png&quot; class=&quot;&quot; title=&quot;image-20221011180435305&quot;&gt;



&lt;figure c</summary>
      
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>206</title>
    <link href="https://aiden-a.gitee.io/2022/10/11/leetcode/leetcode%E9%A2%98/206/206/"/>
    <id>https://aiden-a.gitee.io/2022/10/11/leetcode/leetcode%E9%A2%98/206/206/</id>
    <published>2022-10-11T08:51:00.000Z</published>
    <updated>2022-10-11T14:09:56.089Z</updated>
    
    <content type="html"><![CDATA[<img src="/2022/10/11/leetcode/leetcode%E9%A2%98/206/206/image-20221011220940761.png" class="" title="image-20221011220940761"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">            ListNode dummy=<span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">            dummy.next=head;</span><br><span class="line">            ListNode hnext=<span class="keyword">null</span>;</span><br><span class="line">            ListNode dnext=<span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span>(head!=<span class="keyword">null</span>&amp;&amp;head.next!=<span class="keyword">null</span>)&#123;</span><br><span class="line">               hnext=head.next;</span><br><span class="line">               dnext=dummy.next;</span><br><span class="line"></span><br><span class="line">                </span><br><span class="line">               dummy.next=hnext;</span><br><span class="line">               head.next=hnext.next;</span><br><span class="line">               hnext.next=dnext; </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> dummy.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2022/10/11/leetcode/leetcode%E9%A2%98/206/206/image-20221011220940761.png&quot; class=&quot;&quot; title=&quot;image-20221011220940761&quot;&gt;

&lt;figure cla</summary>
      
    
    
    
    <category term="leetcode" scheme="https://aiden-a.gitee.io/categories/leetcode/"/>
    
    
  </entry>
  
</feed>
